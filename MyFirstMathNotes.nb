(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    391095,       7411]
NotebookOptionsPosition[    383667,       7177]
NotebookOutlinePosition[    384046,       7193]
CellTagsIndexPosition[    384003,       7190]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.588100054833696*^9, 3.5881000604014025`*^9}},
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", 
    RowBox[{"[", 
     RowBox[{"43", ",", " ", "43"}], " ", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5881002415630093`*^9, 3.588100251752792*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "sntxf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\\\"\[NoBreak]\\!\\(d =\\)\[NoBreak]\\\" cannot be \
followed by \\\"\[NoBreak]\\!\\(\\([\\(\\(43, 43\\)\\)]\\)\\)\[NoBreak]\\\"\
\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5881002679565783`*^9, 3.5881002713278236`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "tsntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\\\"\[NoBreak]\\!\\([\\(\\(43, 43\\)\\)]\\)\[NoBreak]\\\" \
is incomplete; more input is \
needed.\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5881002679565783`*^9, 3.588100271376856*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "sntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Incomplete expression; more input is needed \
\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5881002679565783`*^9, 3.588100271527957*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5881002544836106`*^9, 3.5881002598091555`*^9}, {
  3.588100382657942*^9, 3.5881003870368567`*^9}}],

Cell[BoxData["d"], "Output",
 CellChangeTimes->{3.5881002611810694`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", " ", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5881003957006226`*^9, 3.5881004745252666`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
     "]]}},
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
     0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5881004512637367`*^9, 3.588100478806115*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "3"}], "+", "ax", "+", "4"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"\[Minus]", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[RightArrow]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Minus]", "8"}], ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Minus]", "100"}], ",", "100"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[RightArrow]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"\[Minus]", "10"}], ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.588100856261567*^9, 3.588100856268572*^9}, {
  3.5881010371269765`*^9, 3.588101044304755*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {974., {8., 19.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$6329$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$6329$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^3 + $CellContext`ax + 4, {$CellContext`x, -8, 8}, 
        RightArrow[PlotRange, {{-8, 8}, {-100, 100}}], 
        RightArrow[AspectRatio, 1]], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1048., {86., 95.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.58810104613297*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887137152790046`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887137153290367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887137154661336`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887138186376734`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.588763468619006*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887634686690407`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887634688241444`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887636169213514`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5894632221056223`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5894632223487844`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5894632225589232`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.590231753650938*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.590231753685961*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5930360669989295`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018916473337684`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601891647370795*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601892529861781*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601892529899805*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018930413624926`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018930414005175`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {974., {8., 19.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$5515$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$5515$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^3 + $CellContext`ax + 4, {$CellContext`x, -8, 8}, 
        RightArrow[PlotRange, {{-8, 8}, {-100, 100}}], 
        RightArrow[AspectRatio, 1]], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1048., {86., 95.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.588100903417962*^9, 3.5881009418935766`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {974., {8., 19.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$5955$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$5955$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`x^3 + $CellContext`ax + 4, {$CellContext`x, -8, 8}, 
        RightArrow[PlotRange, {{-8, 8}, {-100, 100}}], 
        RightArrow[AspectRatio, 1]], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1048., {86., 95.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.58810094496362*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.588713715386077*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887137155171638`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.588763468731083*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5887634688781796`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5894632224178295`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5894632224998846`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5902317537480016`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.590231753991165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.593036067723417*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5930360681837273`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601891647425831*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018916474828687`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601892529977859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018925300418997`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018930415015855`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(AspectRatio \
\[RightArrow] 1\\)\[NoBreak]) beyond position \[NoBreak]\\!\\(3\\)\[NoBreak] \
in \[NoBreak]\\!\\(Plot[\\(\\(\\(\\(x\\^3 + ax + 4\\)\\), \\(\\({x, \
\\(\\(-8\\)\\), 8}\\)\\), \\(\\(PlotRange \[RightArrow] \
\\(\\({\\(\\({\\(\\(-8\\)\\), 8}\\)\\), \\(\\({\\(\\(-100\\)\\), \
100}\\)\\)}\\)\\)\\)\\), \\(\\(AspectRatio \[RightArrow] 1\\)\\)\\)\\)]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"Plot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601893041560624*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListPolarPlot", "[", " ", 
   RowBox[{"Table", " ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[EmptySet]", ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "\[EmptySet]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[EmptySet]", ",", " ", "0", ",", " ", 
       RowBox[{"2", " ", "Pi"}], ",", " ", 
       RowBox[{"Pi", "/", "100"}]}], "}"}]}], " ", "]"}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5881011289200845`*^9, 3.588101155583835*^9}, {
  3.588101189889676*^9, 3.58810129996896*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, GraphicsComplexBox[CompressedData["
1:eJztl21MlWUYx48wFxyYE3FJOinUTCvZGLPazF0z00RZbiBrbcRMzZe2RlJJ
hIhCpltWxnAYJ5OykHAKzZKdTC5mL1hYEjJQBsgBzouAkZVviNDa/f+zPWf1
uS8PX87GOc9z39d1/X7Xfd1xazJTXghxOBxF4xyOfz6D/yZ2564IiaqWk8W1
6fPnrJZp3TnuxpA6uSL+7JDY7RI2OXpte1e9lHXeH1U1oUjCn8m5ca74nPR4
pmxq6DsonYV7Bj/YfV5e1301M+sq5LfwZ9N2zmoVz0uhx8srvhB/YtOP10va
ZGryh/nO+hq5Fbf/fHRHhzzsurau+kitbPY1tCZmd0nk+LjP3pzxrVT8VeLK
7vHIE9cOTG+RemleXtodldAjXveZtxYdapDI+fu3h2T0yt2l6e7a+xol/evV
p/Zu9Ep+8gnn07uapDXzV8fKlT45HJ2WET3aLMfmXm6eHuWX96akLj6wo1VS
I2c8Gn/UL/1Hx0ekhrXJVxc7EkNnBuS0BEYL97TL3ILkM1lZAdm282zLlrsu
ydWUtrByV0CyBopdj7u7pKq1/e2Yg4GxfQ57Lt1TkheQjaHxqxJGuyXieVf5
wscCklTWEZYU3itD4xaUvNrol7U9naU60iujSx5Jv/KUXwLti3fUtnvl5wX5
6z8q88lZfPL//B2fu4338L1c50Wsexv74L64T+6bcWxFXIyzDnEzDwHkZRXy
9D7yxjyWI68XkOdtyDvrEIO6RKBOAdSNdXwSdeU+J6Lu5CABXJCTWHDjA0de
cEXOcsEdOSSX5PQIuCXHN8E1Of8J3NODYD/c1u910Pq8fmp9v/Zj/TCzvuZb
96d+6/41GvHBE52N+IdM/Oq05kcXWfOnXmt+lV7AE81DfZ4z9VF6AU/0XWt9
dQD1TzH119NWPrQA/Mwx/OjL4OtPw5cetvKnG8DnHcOnLrfyq2usfOtl8D9i
+Fd6AU/0DrzoM7/TIL/UCS9WmHU0yE89Bi8+R/7+gBebTRz6ALwoNHHql/Di
O5MHRV5k0ORJ6QU80RZ4UWnyrEH9SekFPFF60WvqqPRiiamz0otww4HSi3mG
E2V/nWQ4UnoxYDhTepFnOFRwKdcNp0ovPjEcK70YNpwrvThuPND/OD90L76n
F/14nl7sw/vhpXqxPr3Iwv7ohQ/7pxcxiA/xayLipxc4P5g/TUL+6AX6kDrh
xTTkPwNeZKM+6Gv6MepXDS92o77oi+pD/WvgxUnw8SC8eAP80ItM8EUv4InS
C3ii9CKJ/MILeKI4F+iJ/gIv4In24//wRNfhOXiiy/DeSKyzCevCE6UX8ERf
w75/Rxw5iOshxKmI+wTy0Ie84JxVesH+Uoa8XkSec5F39qdY1IV1uoW6NaGO
S1FX1nkS6k4OFoKLm+AkHtx4wVE3uCJn6M9jHA7RC3B6CtySYw+4JuffgHt6
EOzHLuv38oP1eam0vl88WJ/nV6Z1f3LBun+Zhfh4PuL8HOsTEdb8iFjzJ1eR
X/ahqdb8yxbUB56IC/VrQ597B/WtQh/0ov5p6JNu8AFP5BXwMw99FvOJcj4p
R12r0afXg88R9PGl4HcC+nwQ35yf6Ik0wAt4IsPwAp7IDXixAedQpNU/zlX0
ROhFJfJHL+CJ0H94IvSCcxa94PxJL4pwDrP/wJOxc3srznF6cS/OeXoxhDmA
XizDnEAvJmOOoBeCOYNeJGAOoRc9mFPoRQHmGHoxwjkHXtRhDqIXXsxJ9OJ7
zFH/cgWx7yP2fcS+j9j3Efs+Yt9H7PuIfR+x7yP2fcS+j9j3kf/lPvI33r83
1A==
     "], {{}, 
      {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
        "]]}, {}}], {}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.588101301398922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPolarPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[EmptySet]", ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[EmptySet]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[EmptySet]", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}], ",", 
       FractionBox["\[Pi]", "100"]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], ",", 
      RowBox[{"AbsoluteThickness", "[", "1.5`", "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, GraphicsComplexBox[CompressedData["
1:eJztl21MlWUYx48wFxyYE3FJOinUTCvZGLPazF0z00RZbiBrbcRMzZe2RlJJ
hIhCpltWxnAYJ5OykHAKzZKdTC5mL1hYEjJQBsgBzouAkZVviNDa/f+zPWf1
uS8PX87GOc9z39d1/X7Xfd1xazJTXghxOBxF4xyOfz6D/yZ2564IiaqWk8W1
6fPnrJZp3TnuxpA6uSL+7JDY7RI2OXpte1e9lHXeH1U1oUjCn8m5ca74nPR4
pmxq6DsonYV7Bj/YfV5e1301M+sq5LfwZ9N2zmoVz0uhx8srvhB/YtOP10va
ZGryh/nO+hq5Fbf/fHRHhzzsurau+kitbPY1tCZmd0nk+LjP3pzxrVT8VeLK
7vHIE9cOTG+RemleXtodldAjXveZtxYdapDI+fu3h2T0yt2l6e7a+xol/evV
p/Zu9Ep+8gnn07uapDXzV8fKlT45HJ2WET3aLMfmXm6eHuWX96akLj6wo1VS
I2c8Gn/UL/1Hx0ekhrXJVxc7EkNnBuS0BEYL97TL3ILkM1lZAdm282zLlrsu
ydWUtrByV0CyBopdj7u7pKq1/e2Yg4GxfQ57Lt1TkheQjaHxqxJGuyXieVf5
wscCklTWEZYU3itD4xaUvNrol7U9naU60iujSx5Jv/KUXwLti3fUtnvl5wX5
6z8q88lZfPL//B2fu4338L1c50Wsexv74L64T+6bcWxFXIyzDnEzDwHkZRXy
9D7yxjyWI68XkOdtyDvrEIO6RKBOAdSNdXwSdeU+J6Lu5CABXJCTWHDjA0de
cEXOcsEdOSSX5PQIuCXHN8E1Of8J3NODYD/c1u910Pq8fmp9v/Zj/TCzvuZb
96d+6/41GvHBE52N+IdM/Oq05kcXWfOnXmt+lV7AE81DfZ4z9VF6AU/0XWt9
dQD1TzH119NWPrQA/Mwx/OjL4OtPw5cetvKnG8DnHcOnLrfyq2usfOtl8D9i
+Fd6AU/0DrzoM7/TIL/UCS9WmHU0yE89Bi8+R/7+gBebTRz6ALwoNHHql/Di
O5MHRV5k0ORJ6QU80RZ4UWnyrEH9SekFPFF60WvqqPRiiamz0otww4HSi3mG
E2V/nWQ4UnoxYDhTepFnOFRwKdcNp0ovPjEcK70YNpwrvThuPND/OD90L76n
F/14nl7sw/vhpXqxPr3Iwv7ohQ/7pxcxiA/xayLipxc4P5g/TUL+6AX6kDrh
xTTkPwNeZKM+6Gv6MepXDS92o77oi+pD/WvgxUnw8SC8eAP80ItM8EUv4InS
C3ii9CKJ/MILeKI4F+iJ/gIv4In24//wRNfhOXiiy/DeSKyzCevCE6UX8ERf
w75/Rxw5iOshxKmI+wTy0Ie84JxVesH+Uoa8XkSec5F39qdY1IV1uoW6NaGO
S1FX1nkS6k4OFoKLm+AkHtx4wVE3uCJn6M9jHA7RC3B6CtySYw+4JuffgHt6
EOzHLuv38oP1eam0vl88WJ/nV6Z1f3LBun+Zhfh4PuL8HOsTEdb8iFjzJ1eR
X/ahqdb8yxbUB56IC/VrQ597B/WtQh/0ov5p6JNu8AFP5BXwMw99FvOJcj4p
R12r0afXg88R9PGl4HcC+nwQ35yf6Ik0wAt4IsPwAp7IDXixAedQpNU/zlX0
ROhFJfJHL+CJ0H94IvSCcxa94PxJL4pwDrP/wJOxc3srznF6cS/OeXoxhDmA
XizDnEAvJmOOoBeCOYNeJGAOoRc9mFPoRQHmGHoxwjkHXtRhDqIXXsxJ9OJ7
zFH/cgWx7yP2fcS+j9j3Efs+Yt9H7PuIfR+x7yP2fcS+j9j3kf/lPvI33r83
1A==
     "], {{}, 
      {Hue[0.67, 0.6, 0.6], AbsoluteThickness[1.5], PointBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
        "]]}, {}}], {}}, {}, {{{}, {}, {}, {}}, {}}},
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.588101331079671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "+", " ", 
    RowBox[{"y", "^", " ", "2"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5881016107958856`*^9, 3.588101673275484*^9}, {
  3.5887137885646906`*^9, 3.588713791313518*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnXmcj9X7/4fGHsKEQWMbyyjrIGO7bmuWBtEy2RKSZOxraFGiIkuYQkrW
pEKahNxDEU0faTLEyIfJvifrWOb3+d7363Xu3lfO4zf/eHyenc91n3Od67rO
dc657vtdvvfgzs/lDAsLm50/LOye//1bb+V9u7OzY1PK/xH/VXZ2tvv2katv
ZstYJ6VNoXKzomsbPq/b2sj8C4c5c3eVONxm1kOGNz7ZTxbkHOCsKlDs1cSM
yoY/+OTl2km/9XK2enLKG54jZ6ni+Xt2cb702hc3/O9Pvq+W1KW5s87juQ3P
uzesUFKXqk6Y93d5E3nWhvn9srMLOx/77R3ys+l++6W+fMOPQf53fn8Mv5rD
788Kv/+GV0L/Z/njNbwexrvZ14/hc6Ef6NPR+qSe+41Y/UFy4k13+uCUlPCa
gZ7JPzo1rkvhaYGeyVuHZ61ddvgFo2fyesMmL120JtAzefGGzu2oUoGeyR8o
dt+NlNRmRs/ka+fWeaRp3cpGz+QLv+vdfsHEPEbP5LPRnnomLwz51DN5AfSH
eiavif5Tz+SC8VLP5POhH+pZ65N6Xuk956qb2WNW8rJygZ7JL+2Lb7vm5UDP
5OcOf7jw9PeBnskPdnhw5rHZgZ7J+/w9ec+yw52Nnsm/mfTR8t0JgZ7JI58d
kmNC/2ijZ/LGJ56um9QlzOiZ/FYvvz31TP4p5FPP5AnoD/VMvhf9p57Jj2O8
1DP5eeiHetb6pJ7PfzKyX3TbS+4bqwb2PxYR6Jl8duWqNy8MC/RMXvPlzjn7
rwr0TB519r+Xe08I9Ex+svpf8xetCfRMnpI1tP72LMfomVzqbWjc5WIFo2fy
FYNztjh87LJQz+QV0J56Jl8L+dQz+R/oD/VMXhL9p57Jq2K81DP5DOiHetb6
pJ6f8+z8jDu8W8e9KQUCPZO/np7/hdQXAj2TFzpY4lDUvEDP5LfbLt0d+WKg
Z/Ilnn8FeiaP8/w00DN5tOfv5Y2eyT/04sYJo2fyPGhPPZM/CPnUM/kH6A/1
TH4N/aeejXyMl3omfwX6oZ61PkPtOdNdPaBhWFwubc+ZbsrRK7Na9NH2nOlO
yTpXu/A0bc+Z7uj+46Lz99T2nOl+4M27tudMt4JnP9qeM90fPTssp+w5E/a8
R9lzprsS7UPtOdONgPxQe85030V/Qu050x2K/ofac6b7GsYbas+Z7iboJ9Se
A32G6jnNbXSg+vH4HFrPaW77x0+NSXhG6znNXbh/z+0Gk7Se09xpj/S+GPuk
1nOau83rj9ZzmjvOG5fWc5ob4+lH6zkNel6n9Jzm3ov2oXpOcxMhP1TPae4G
9CdUz2nuZPQ/VM9pbhLGG6rnNPcR6CdUz4E+qecw/EWsjJmSnT3G6Jk8OvpY
qfw9Az2Tdxr7c7MFEwM9k4u3TgV6Jo/x5AR6Jm/htQ/0TN7O44Gew0L+bsRR
zyTV0Z56Jq8H+dQzeRT6Qz2Tx6H/1DN5W4yXeiYvB/1Qz1qfyp7FYs9isWex
2LNY7Fks9iwWexaLPYvFnsViz2KxZ7HYs1jsWSz2LBZ7Fm3PiCdiic9iic9i
ic9iic9iic9iic9iic9iic9iic9iic9iic9iic9iic9iic+i4zPWR7HkG2LJ
N8SSb4gl3xBLviGWfEMs+YZY8g2x5BtiyTfEkm+IJd8QS74hlnxD7p5vXBJL
/iyW/Fks+bNY8mex5M9iyZ/Fkj+LJX8WS/4slvxZLPmzWPJnseTPYsmfRefP
2L+IZT8olv2gWPaDYtkPimU/KJb9oFj2g2LZD4plPyiW/aBY9oNi2Q+KZT8o
lv2g6P0g9uNiOd8Qy/mGWM43xHK+IZbzDbGcb4jlfEMs5xtiOd8Qy/mGWM43
xHK+IZbzDbGcb4g+38D5kljO68RyXieW8zqxnNeJ5bxOLOd1YjmvE8t5nVjO
68RyXieW8zqxnNeJ5bxOLOd1Rp8vjS18vc2sOik/VH2lckbybXfT0o7Lp24b
afRP/vqCrlNrPDzW+cGTX8Tw0u0v98jaXc/ZjHMT8j7TX1g29cr9hvOcMObX
l+JTY0o6c+FXbN8a7cnZ/l603+A/12H7XHgu+u9Y+u/Y+p835ci9s6JvuP+t
vvtA7N66pp/kw0vt/2BY/qKmP+RPgrM/5Dshh/Iffarl321mXXYn3l+nZFyu
QD552LAtUYWnFTTyyXcM9Tnlkw+EHMov5+nngpvLs9tYI5+8uGefeY188j/S
fU755Bdy+HIo3497x93nvbhax8gnr+LF83Ajn/x8L59TPvljkEN78/OEDHdp
2RVX42eONM8lX+HFh+C55HW8uJTDPJf8RlGf87nksyCHdqKfy/746+lW9yn3
o4Zr3h1pnkv+sLdeh5nnkt8543PK13KUfLHIF4t8scgXLR/jEos+xaJPsehT
LPoUiz7/9VzMu1jsRyz2Ixb7EdqPsn+x2L9Y7F8s9i/a/uF3YvFfsfivWPxX
tP8ibogl/ogl/ogl/gjjj4rnYonnYonnYonn0kfFZ/LWd4/zEnP3uC2M2yrO
C+O8iuem/+Rs//3pM4t67Arsn+sFOddrxv/K9cZsGB1XxazX5IMeHltyYlIB
s16T50V79dx/yWf8/yKr5rrTLSoZ+eTvxidkx2+5x8gnn4H2lMM4f3nn3zWu
LKpo5JA/dv8vey4MyzL7EfJ9aE85jOdZXl4R7GvIr3v5yQUjh/wg2ofm7cfd
zV6+HexDyf28/bCE5u3H3UVoH7q/znAHFv8q40LOsWqfm+E6Xt4YnCeQ+/vc
H9U+N8OtiPah+81Afuh+c6sblbyybJewsWp/txXnnLMldD8VtFdyxCJHLHJE
y2GctOhBLHoQix7Eood/yWf8tMyjWOZROI/KrsRiV2KxK9F2xXhosXOx2Llo
O2fcs/idWPxO6Hcqboglboglboglbgjjhso//xVveZ97ZNxjS3p0COIt+bjO
h9zIM8VMnCTvCc64Sp4KOaHr71U3wltn66r196rrn0vfp9bfq24N8ND196p7
p5cvh/LNfV/7+8v2XxWr8plL7kNlM56YvD2/ymcuuX9H+ZzyyYtCTmjecsYt
5e03Y1XecsZ1vX1rbpW3nHHfBA/NW8644ZAT2v9M96x3PlNH9T/TjffOeXKq
/me6EeCh/c9090JOaL6X5o74s0KOVdN1vpfmpnvnRTrfS3MXgIfme4Ecyuf5
fPxXUYt7/COfJE/AuQrlk5cFp3wtR/VfLP0XS//F0n8jR+lfLPoXi/7Fon+h
/pX9iMV+xGI/YrEfubv9XBKL/YvF/sVi/6Ltn+dOFv8Vi/+KxX9F+y/PWyzx
RyzxRyzxRxh/FnrnEvemzPH+veWuTZLOLf6s6aQhPyB/8O/MQhOTCjrJnpwc
Dnlyr9RGCWXLGjn7n3tpe3b2NffTZxo+tCBnDSOHPH+xXaOOReQ2csiXXUy5
kK9naSPngdsHVyUn/u32qt1s8tSRDxk55Du+StsWvyVbKIe86OxdS0+3KGnk
bPXi+Tk3/d7H+0Q0ftDIIR/i5cNXjBzyW+3+L++938jx17Wjbr5Lw1Jin6xm
5JBHefuLc0YOeV9vHxFh2vvzu9dt6dnJUdOevK23byrq/F7kvr7RbWMNvzn1
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
ie2dUon318pIjjT5XtmEBo0OT2pt2vP8s+zSibm3Z7Uz7amfY1PmvNbintZq
v3DV/da7Pw3aMy8qvaneiqlzWil9XnK3Tj3aIjUmaM98JuWvkl9ubNxK7XfO
uI28917bmvbMQ9JjZO7u6y2V/Ew32ttXBu25vnftu6JH6s6Wan+X5k54Ouf8
ZYcHGX1yHl9rOnZX5H+HmPZh+Kt548ahfIeC9lwfEyuP/mjYoSFavmj5XF9W
DJrwUP/DQ3T/Rfef9vBTvzNN1hxqqfUjWj+M2xM+X9wvpuS/9C9a/4y3H11d
OHhyv1Z6fkXPL+NkneZ/JKTubKXtR7T9MD7UndGzwpVmrbVfuPSLUL1lus97
97aB3jiPmcmvf9sjU+ttq9BPQ/n/9O991yLQD/X/ZoVRV6I2tNRxQxg3yDmu
Sm9U6RTROPA7jqvn+FKXehcZqtu7uj39aES3HJun5huq++nqftIOOyx6PNeq
L7XdZorWD+2kVompI7OODnHOzy60N/uV4DuB/ePfrhf99HCnY3bJ9dnZ1Q2P
/WHGaz3eHehs3RPxQ3Z2VRNnzj+aXTyuVV/D2f56/1lvt6jYF3G7omlf+akc
TRZM7Go42zeaXiV6TdOuTifvuQ+Y9nP++2n7YxEdDWd7t+PVyMLTOjj1sd6x
/eqLH9VYMLGJ87DH7zG8/4PTsuK38HsIu833HsM2+u+Px/rtTXxrufHZczOj
Kzp1EbfJw35tkHphWGOng98fw4+WnHhP9M54tK9o4mo0xkvO9g0w3i2+3kz7
c9AnOdtfgz7951YPvjPZrV/jrN0DDTf9HHPjy/AvB3J+Tfu+bsrNqAHDzbwz
Pn/R/+rVC52DeSdf8fiH89vMCuad/ONW9UdNzh3ML/mUNoNvNsgVzCP501sn
7Ygq1cHomXwV3nuqG5KfX3Vjk5+qWnhaI6Nn8pffKbI29slAz+Rv4rnUG/lC
9JP6IV+GcVE/5F9CD9QP16NO3+xeUeORQD/kp/96LHvbS4F+yDMzT+8Pv9DH
6Ie84Ou/b43d+7TRD3mfhxOeitgUb/RD/olXz1PW6Ie89ce3WmXtbmj0Qz45
7KgTc/1Rox/y/Hgu9UN+GP2kfshPYVzUD/lj0AP1w/XX6fdV8fxNA/2Q7+xY
ImN8/0A/5CnO6q83Hgz0Q/5T0z4vLVoT6Ic844vE7ReGBfohT/TqGR4w+iH3
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
rzs+Lu/e0WPLG459gXulWMZrp78vazj2Te7gHd89HdH4AcNfxnlX/xnrYxO7
lTa8EM6FDnr5dinDN2HfXc3LSwOOczCZsyDPnNPfB3KWYX83bv+scT12Bc/F
OapcjCi9NlvKGY7zZDmyfUyV/mfLG729gvP5KTifJ+c5fAr0Q332R7xaDn2S
83x+KOIk5cT7+xT3JPYppk4P59snVX++x7n6NzhXJ+f5+auYFz63L/qzSPUH
+yZ3ror/2De53Dcp/bjUD+WsQlxtCTsk573ATMhnP3kuPQX7U+N3ON++inkh
x/7RbYdzdXKen9+BvfG5K9AfUf3Bftl9Vq2b2C+73C8rO3FpJ5RzEfH/G/gv
Oe8FEiCf/eT5cyrOJchx/uBOgX2S49zAXYLzcxNP4Edj4Ud87ln0Z7XqD84x
3PtVvoFzEpfnJMpfXPpLqD2fcTcg7pHz/D8f5Jt58c+d3FzV/HMncpwvuR/D
T02+hHPycTgnJ+d5+FDEBz63N/rzpeoPzsHcBJWn4RzM5TmYihsu4wbl/IX1
9A/8niA5z+E7Qj77uck/P3Q34fyQfCfOq+shXpF3xjn5LzgnJ8+BuHcccY/P
PYP+/KL68yLy53CV3+I80+V5poqfLuMn5VzGuj94iL/+kj8D+efx/X/yk2jf
WbXHebK7Ylho3v6B9/ftpp2dtlT56/4Tjcl53p549/aNLe1Ft0d/xNIfYX+U
/sWif6H+1fyKZX6l3t31KRZ9CvWp7k2E9yZqHZSDd7cHsdiD0B6Uf4nFv4T+
pfxXLP4rH9/dX8TiL9JR+SPuxYT3YiofkP5393ex+LskKH/kuaslfgrjp4rP
YonPMuXu8VAs8VDyqXiL+1DhfajKi2Tw3eO5WOK53K/iLc9XLeujcH1U669Y
1l+5evf1TizrnSSo9RT34MJ7cJUfypW7r9diWa/lWbWeIv8RS/4jzH9UfiWW
/EpO3j2fEUs+IzNVvoQ6B2Gdg8qTZfzd8zGx5GMyV+VLyD/Fkn+KJf8US/4p
Q9U+HfUnwvoTlf/LJiWf3yt4POS7i7vNdxdjQ767uNt8d7FkyHcXd5vvLr4W
8r213ea7i6+EfJ9tt/nuYlLIdxd3m+8uFh/nf3eOnO9ZF3D/+R3F3eY7il02
/vM7irvNdxSXhnxHcbf5jmL1kO8o7jbfUXw15PuBu813FPvie4PmHAbn3nlw
Pk+Oc3j3/YmZD/Q/G+i5LM4zb+P3HMm3Yx8xGvPI/TL3EbxPIed+4QLqfFQ/
3b4h30U043L1uPi+IfWg7jFd3mMqfbrUJ/vD/LAO2pMzD/wY9Rih5wCZ7tuo
++U+tyve89qLe2dzHr7Yt4eFuH9X8+7qeef7YrQTJUcoRz1X9HN5XpGCumhl
n0L7VHUCMk/1k+/Z0c6VfkTrh+t1HaV/vtem/YjvOWq/4/uM9FNVJybnlf3w
fUb6u7I3ob0p+xRtn7reUsUZYZxhXNqPe6sZ8Bclx7yvp+bF5byE1utudWNK
PTFn44J/5CGo0/jFm99I3V50+w9R59DUux+P1HYr2m55f8H38tT9ncv7OzVe
l+NV9ZDuZ+r9Po6rIfpp1rvFfr3KItSrmHNmjHe/Gi/qPVzWe6jxuhyveq7o
50agbuQC5JAnQ29tIEfV1QjratS8COdFxVWxxFWxxFWxxFVhXCXndwNyXPe/
R6e4S67uc13e59KPeK/U/aXoHB2eDe6tcK/qRn/zar3obsP1/awbej9bzNxP
Nfw4442pVxobzvvWJqpelOdIoffaxcz91J2J3+TYntXIcN63xqn6TJ7PhNYJ
FDP3U4sGREpqTCCH97ARqu6R5x6hdRfFzP2UX6/b0PBtlrpBnieE1qsUM/dT
fn14IKejqrtTdUQu64hC37PIcFtdHt+pcPVgvlDP4zZN7PnS5KrB+Tbzk2ne
c0vpeiE3tF6omLn/8t+DiDOc98Wsl1P1XS7ru0Lfd9jqXntvxOxh1YJ+DoNf
3yi574mm/66LE9bFKTmi5SyGn95TKeHczMr/qhsU1g0qvYnWG+r3pNvMI87E
mOG6DlBC6wCNfkTrp5SlLov72dD6SWMPou0hl6UOivvE0HpUY5+i7fM7S30R
91+h9b3GX0T7C+/Z86n6HO5rQuuijf+K9l/evy9U9S3cL4TWjZt4Ijqe8F6+
CO7lWR/I9WgW4hI57ws+hHyud4xXTSGfnHGyhKobYd17M8Qx9V6Aq98LoBzW
t6j+u0VC6l6qO3/x+2+Iz+Rz8dxKqOfnOm6J2w7vBT7DewHkvBeohHhO/fD8
fBniMDnvU+Ixv9QD43PO1/35JUf9krtE1Vewrr4J4raqd3JZ76TsxKWdsD88
966GOE/O+51E2DOfy/i/DPZMjnozt7CqG2E9fEmsC6o+zWV9mvILl37B/vC8
OgrrCPkVnJPfgv/yuVxfqsJ/ybdY6oJcVRek6gld+ruKA4azP+lYp17FOmXq
bHG+fRPxKvQe8Pj/9jt+vCIvYKlHaqvqkVSdp8v4puKe4arO1mWdrYrbLuM2
+8/z5MexrpHz/m4A4nnofWuG+zPiOXllS90U68ZZH6Xqcl3Gf7UuuKHrQnWn
DHhNrO/kX0D+htD1y6zLrUPXL2fT3fXj7FT6Iec5f2XU25PnUPmDqut2Wdet
1l+X66/Kq11LXu0yr+Z4uyN/GIj8gTwH9sutQvMBsz+6HpoPOBF376fD54aj
n6ZeC/uOK6jPJ+e+Iwv5iarnl8uh7ZnPCPMZta8Ry75GuK9R4xWOV+lHBobm
V2bfp/XA51rGJWpc1JtY9CZKb3xfQyqF2g/zT6H9KL8T+p3yU6GfKn8U7Y9L
LHWJrId/V/kd2x9RfrpaceV3Qr9Tfio1Q/Nwkwdqf+Q9jsW/RPkX/Vcs/is6
viE+C+OziufCeK7itui43dZSt1lA1W2q94Okv4rnHRVX651wvVPro3B9VOug
6HXQtdSLblH1oup9Ltml1sdtiqv8QZg/qHxDmG+ovEJ0XlGa51SqTpX17YVV
/sD2xVS+wXpX7k9VPibMx1T+JszfVJ4mOk9DPiZNVH0s68+XqHyM7Ruo/I11
ttyPq/dPpUpovmrq9PQ5A95jlZWh+SrPHyRa5as8/2c+r/J/Yf6v8nzReT7y
eWmm6n5Zl878X32fSvqrPJ9y+D6sOvcQnnvwfIZy+D0rlecL83y1L5Byoec2
jkWfzP/Fkv8L83/qOT/O9yqP6t43tU/A+X7u4i6FTvR+5l/vQbh8D4LtuS+Y
0uDS+4v+8V4n3qdw6923vF50l4CXxb5jW65uJ3p3DPbdeD/LDX0/q5hZ9/3v
dQR+PQz5wzB8p5E8QXH1HqXwPcrQ7w8clyPrpu1oU+df72PKkhdjal958B92
izi8u/z5ronV//Ueuhuz4nbBLqsHBudd4BtW1KuX1amDfq/K5XtV6r084Xt5
6j1o4XvQ/D0Ivg/+c9ay2MK1x8KeHjJ828eT+x47+gLem6ps+LpC9z91+Ote
qM8ob3ix4d16LajQBfuH8g55XnD/frSy4V9Ajv8e70OGb8Zz2U/ex8VnPhDX
NDroJ/n3p9YtjkwN+km+9qnmcyMWBP0kvy9X8qHwC51NP8lzgbOf5Ksgh/0k
34Tn8vuo5E9335/aZuIw853Pethvlmg7akzC6GFmXOR5ftlwLD4yGBd5/e/P
32rwdTAu8kq1x1+IfTMYF/nVb2Jmtvg+GBf5GXCOi7ws5HBc5DXxXI6LvFho
/x3df463Avan974cubbHoGC85Lfu6Vm2y33BeMnLVq83pMXiYLzkheZv7d10
RDBe8u3vJI9O+Kiz+Y4uOb97zN+hIM/65PtqSV0qmN9dIj8Izu+7kvN3CqhP
8o14LvVJnhf9pD7JS2Jc1KdpH6ofR+uH+jyAfXfDm1vHJDwf6JO82mt5jsfn
C/RJPr7KlNsN5gT6JH9xzv0XY/sF+iR/9dXus1q8HuiTPNmz/0Cf5CU/vblx
6sjyRp/kN1f4nPokXwE51Cf5SDyX+iR/Dv2kPk17jIv6JK8fqh9H64f6jMY+
emHDtWFlew8zeiPvsPbEksh3Ar2RNyk3Mimie6A38ui5pY+EDw70Rl7Us4dA
b+RvJN86F7uXdSmXN5GH4T6X+iR/Hu2pT/JwyKc+ySPRH+qT/GH0n/okfwTj
pT7J50E/1Cf5uylXEyPCA31yv9/ynTY/Rj4T2Kc/vhWbIlbGTMnOHmP0zPaz
/9Ol37E3XjCc7Tt596SB/tn+9UZHEg4/0ctwtvfrbYJ5Yfu1P//dZ0Hvzoaz
fYx37x/MF9s/3mD09o3dHcPZvoUnP5hHtpfU7SlTRwbzSN7ca7/azCN5BbTn
PJLHevMSzCP5cvSfnP2JQv85v2w/AfohZ/s46IfzzvbToH9ytm8L/dMe2N4J
nV/D6xaZVrdwjuD3QEvjfICc80vOeec8knN+OV/ka6AHzgs554v6JG8NTr2R
L4Mc6oeceqMeyKkfjiuK5wawf46LPF7FDfLGKm6QM26wn+Taf8nrK/8lb43n
sp/7sK/X6wK5XhfI9bpAznWB/STXcZtcx23TXsVtcsZtxpOy2NcXUPkD+U2V
P5BHqfyBvKDKH8h1/kCu8wdynT+Q6/yBXOcP5Dp/IM+j8gfyEip/MO1V/qD1
Q33WxXmFzj/Jdf5JrvNPcp1/kjP/pD7JP9l+8L2IMs2MPsl/7Pvc2qkjKxp9
kq8Epz7JZ0MO9Umu81tynd+S6/yWXOe3Wj/UJ/dTPZDnU5/kep9Crvcp5Hqf
Qs59CvVJfmrMtR5NRwT6JP/T+533aLMekT+EuibqmXw72lPP5BmQTz2T6/0R
ud4fkev9EfnToXpztN6oZ9ZzHhzRe3vk9CBPI9f7U3K9PyXn/pT6JA9PbDkj
4mCgT/IOd+5ZMnVkZaNP8uHzk1ovmJjX6JO8FtpTn+RXB/ryqU9yvS8m1/ti
cu6LqU/y36Ef6pOc+/pL/Uo+Gt22utmnJ79UNCyp0YtOviXFzraZVcXwK72+
v56S8axT1vsdimBf36PN/adTzjzu9G8ckRDdtqThk4ss+i29Skunsncuk8/w
GiW+/TmlwIPOcdxLkff+vUL1wtPyO2cOFFmRnHi/2e+v/LLZa6f/FKeX9x37
coaX/7zrT5EbH3PaDy8aMSs6ODco2mZI9IJPnnHq1S8xIjHjQcPHd9i/Ndzt
78y4VXBA9M5ahl8dMGVcwm9DnTw97ys1a0lsID/X8mcndxrjPO+Nq6o5H3j4
1sL96Sd6OxO839WtYPiyL2Muxb/2pBPtf5/f8MtbVh9NKdDayeWdi5U15wCx
Y9etzS7byTnnjbeS4T+EF4k8vLSHs+/D4nlnRT9oeINWCb0SXnneedb/nr/h
L33y9H8iSw81v4dCfuzwvpdavDjayfB4RXMOsP/hp2qsiUpwDnvySxted92l
HgnZjzjTmxdpnJEcbfbvPTN/apa1upszNlfxBcmJ1Qzv//OfJZJa9HPq9C14
p03RWoa3WpucNbP7EGfFtsJfJJ+rY3hqmS0HZy4Y5ZTx9BNj9rOFj447lVLg
OSc3fl+GfGZE3QHZMtgZi98vJs+xZWP/BHek82lSZHRGcg2zjyv8RJ4b235K
NPGB+WolLx8ehvPTYB/RGXns52q/4CAf/l7tCx5CXr1G5f+tkf+vR3wgf8zj
yP9fvbmJ3P93b+MFiA/kVdF+MeIDeSzkb1J5fhn0Z7nK5xug/zNV3t5G5e3k
ZaEfxgfyYtiXXUZ8YN47ZfmhHEkZA5z8iA/kP06bnpUy7lmnHOID+Z1Fn59L
efBx50XEB/IxLZf2Sz3V3HkI8YH87T8r5Fg1vZJT/F4/PpA/+eyQHBP675GT
iA/kP88ZVfpwpSbOM4gP5Jty//2fyJudnHaID+RfLMpbdUFmT6cu4gN5u3FL
fwh/pr8zHfGBvPtrg8YnLB7q5EZ8IH+z9LTek8sF8YH59tYffj2QvjyID+Qb
nemX43M8iXgYaXiUZ/+tnHDEB/Kpnv13dM4iPpDv9cYbxAfyLQXfeTZBnkec
rGX4b5XvDFhweoiJA8yre4e9XXPNoaecI4gD5G29OBPEAfKTK283zxoSxAHy
z2tNKJlUMYgD5M/3vefmzEeDOEB+7ysLd6QPD+KAycNVHCCfpeIAeZiKA8zH
Ui8mXt92OtFpV71w84z6dQzvcHPwaxGXRzgve3KKmri329Pbw84S1EWRz1uW
VCpuUjFnNe4FyXc9lx6WkZzbyen1s7CJb3mfOvV5dtnaznb87jnjVYGcpYrn
7xmLfCPgYeA78B4veczesEJJXfIi3wj4veBT8d4O+Z50n3+s+EXw9fjdc/LT
OfznblL8Cvir0A/j6u2aT/ZLkPrOff54DRdv/arlfAG9kb/Vc0q3YfkLO7tQ
J0Te83z3DsmJt2UZ9EmeF/xN3FeRN4ecWzV9PZM/iOeO8vtp+HH0k7/HTfuv
i9+53oHfQSMv5Om/GPR5XMh9fZ6UqfhdcvKHvN/Rq2Z+14y8EX7vbzz0Rju/
jP58BP2QJ2JcydADeWXoIRx2RV4H490G+6H954X9fK94TnLYj9n/wn6+Vfw+
8JmwH/J9sJ/5ih8D/xb2Q34W9rNR8Uvgr0E/9Me98DvaFXlx+BHtinwx/JF2
RX4W/ki7It8KTrsifwVyaFfk9+C5tCvy79BP7uN0/sx9AfPGjsjzmf+T1wZn
e+ZpR7HPYnty7r/YnnGG+2LuO8hXD2gYFpfrhjlXJOd+mf3X57TklvM6R5/X
sT+0/9fVeTX55Q2h59Xk/dCe8sn5e9OUT/svgXsEyjfrl/e7hJlGPnkW7hd+
gF9Q/1/W3JAWPriesxn2T/51+dfGJidGOHNh5+Tvg2+APZN/ADmUb/LwR8oN
SviorpFPfsj7vcUiRj75VnDKJ+8LOZTPeTzrfQ8/1nDG7Vzwdz6X7R/9Y/JD
iRn3Gs72JeDv7I+5v0P7uWodOQR/Zz/Zfi/6s0GtIxfg7+wn43OEdz5Qx/SH
/N3zhzsnZoSb55I/Dk755HfCfTmUT3v+yTs3C+STO15+m9PIJ88DTvnk6yDn
JT/fMH6RWGpix8TpI4188hqjC/ZLzAgz8smvjPI55DhaDuUz347/Kmpxj3cD
+eQJeD+X8k3eDk75Wg7l0391/8mrq/6TX1b913Kof/qv1j+5KP2T51b6J6f+
KZ9+Tfv5Qa132v7Zfirsh5ztiyv7Z/suyg7N+a2yf7anHW5Q6522f3MOCX9h
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
E6fy9tnI25v5dmji7WzEPXLGn5IR/n3Tl+pe+zLuuVZ6f5nmPL8A7rXnq3vt
vWjfGPIZB1aF/B7HKXMfcalRq/tnLUlv3BLtabeb0X6tuqe7BvlPeH/nzLn3
HZx7L1T3dPtVf2gPBTDe1uCmvgX64f7axAG8p/C5en+kGfLVS2hPfz+O9qvV
+WornK82wnPZPgvxge9PcV5OYJ+SB+8XMO7NxvsFfP+L/ZyE9zvOQQ71WQz7
LMoxeQ7eY+qN9y+oh4p4P+s5xEnaz4PgrMM3doV9xwW/P2adXY330c7hu0Pk
K/A9okJ+f8w62wT96YzvOFEPw7A+fqLy7Sjkh0+iPe1tKuLeKeiBPB/0UATP
pT5XQJ/0X/JqiM8tMF/Uc8Ej/nydx3jJX4b+31Pv77TH+zvUA9sXxnqhzwHK
4xzgIuTTTiZyfiGHvAjkFMS4GAc+xrji+fvX4DUwLuqZdjIJelui8vCy0PMT
aE8/GoV5oZ7JD8NuqWfam4P5/Qt2a+rQQu3E8E9hJ1yvyWvADlm3T/4u7PA8
+mPycOyXOV/kn+O5Z6FP8uV47rPwC85XCt5LOgv55JWLL55++s/G5nexaeej
c5VrPLFK8LvY5A12NJ9c45Gu5ntl5PmaP/14RPfgd67J66O9+V178FGQz++D
kb9Xd9adbZ8Ev9NN/xrVIX5ccsGgP+T1un6YK6lY0B/yx4433HZhbfAdOfKm
Id9/qxi8Fwk57Cf5CDyX/SQfj/WR/TF1gAWLrE8/8bTpD3liyHeqK5o4GYn2
fK6Jn+r338n/qn/+xtzXg++nmbx9f1TlpPbDjRzGmd0z//PI4WOBHPLfP66b
uGhoIId8Z6GtzyxoPty0Z/ypN39y1tw+wbzQ33Me6hsZt62P0QN5By9uBHog
P1bReeJYRDAv5Nu83z8Nvh9I/h04vydGfhhyqE9zrojnUg/kOdBPjos8/7nU
plmdgnGZ73XUOdtk4o/BuMj3ls94u8bkYFzkV0f0OJEvKhgXefszOfMmvRdn
+km+B3LYT/JWeC77Sd772Z5h25sH/WQ8DCvx6vjk/wT9JG/rPTfoJ/lLeXP/
dGFt8L1K8/2QkO+OVjTx9hHIYT/Js4v7z+2g4jO/L8r+MD4vTW/xbfryoD/m
Ox4hvy9Q0az7i9GezzXnrtgv8LnktE+2Z/z/Rdk/ubZ/8h3K/rkuXFR+R06/
4/f06I+/gfOejvwS5GxV++tT8HfKoT+yP5RDfgD9pxzyXzFe6p/8DPY11DP5
KXDKob/XgJ4ph3yZmkfy19Q8kut5JOc88rnme1PKnsm1PZOPgz0zPpD78xv0
x3xXStkz+R1lz+S0Z+qf6+b4PNVeGFYn0D+5jhvk+1TcIGfcYP/J81Q+sWj0
00H/ydNV3CDXcYNcxw36C+fXfMdS2T/HS67tjVzbm3kvT9kb+UlwPlf7EZ9L
/pfyF3L6C59LXlqtv2bfrdZf8pJq/SXn+svnMg/UeQi5zkPIOyMP4fySr375
hf6Lhgb9Ia+j8hBynYeQT0AeQr2Z/PBAj+eHzQr0Rq7zOnKd15HnR17H/pOn
DkueN3p/0H/yeirfM/c7Kt8jZ75nfjcB8bDr+jsjFv0afH+Y8YrfVeb3bA2f
fmxR+uQorOu7zX6/NPb7lMP4M/nAzrGLfg1+35x8Efbvod8NPiGvoz3l0J51
fwxX/SEvo/pDe3sG46Uc8rCI0N+XZP5ZpkvCCwuaB797SL1tQr0cf9eD45qr
fr+b8W3QN/luNJgU/J4U1/Ex4JRP3kn9vhv1MxZ1jJTP/l9Wv1dOuy2O/pvf
p0D+H5VrV+Kix4LvFTOOXcY5w3m1D9Xf82ded27y37eiqg03zyX/xssnS5l5
NOcG6rnkb6nfbWQ/9e85cl44LnLOi9YD9Un9k1Ofc9TvOPO5b6nfqaT8eyJC
5Zv3LmGHbM95H6vml7y7ml/q+Trqacmpz1KJ3dYkT/urMeWz/0uUvZnzWNUf
2kNpZc8mHqrfu+S8jA2pE95t6ofHKc78+Sz6TzvhfJVvWCUztkPwfWny6Al5
drTp8I/vSMOPwsr8NSIhNvgdPfKXYf+UQ54D7c330tGfR7AvoHzq7dacWp/W
iA36Q55DPZf+9S38nXKoN9V/x8apT35nm37Beef+hfNIrn+3zrw3oX4vg3ay
E35HzvZ/oT31Y747pH4fjXbO33sip53nG9H/xUW/BnmgeZ/IUi+nf4+MfGC/
e96OqBbMFzl/9+S8ujdh/KF8+rWWT67lk+vf2+K8s//k9CM9XtqD/j0sznsD
9Z18+ksFxL3z6pxT24O578M6xTyB+i+I/vC55Pr3vDgvE9V6ar4PEKpnR88L
Oe3qPOL8eXWuqH8HROs/9HcETgjzAY7LfB9GjYtcj4v613kL9c/fKTivzgn5
ewGUQ851kHZlvveF+1y2pz8mvVhz/KLHgu/Dc1w9Mz6su6B58D128/4g8jdy
ymdeSjnUs//9/yDPpJ65D6Ic6pn7L7Y332NR/aEc7nfYnv1kHvv/AAbfl1w=

   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHUcF8Xzxj/XoaCIhaIIBiAiAiLYomKCqNiItICoCIoFIggooIhiYIvd
3YndYgd2d2L373nz7Pf1+2M/Oze3t3efu92ZZ2ZntvWQMbsfGjcajV2LRiNR
PS9vNM4R4/Ws0TgwbTQmiveETvwdNRq9VZqppDpOVCbp3KFq/5Da/6X2k9T+
UvE+0rnjRV8m+mPRk0VfLvoTrlHb7dXHUirDxZ8g/uPi76t+7tG5X9TPMnqW
ueKfqnqQ+PeL/7v4+6jsqOte0nU/qd5BZWmVH1R6qVSUqtG4Ttd21LVD1G68
6IfV/3/q41+Vo3Q8RvyTVb8k/njRZ4p+U/Thqe/7uuiVy0bjNPW3t/ppIfp0
0fuI7qT6DJVv1G69yPxPRU/Rc54iOtMz/qbrHxTvBPFyHT8jeoLqDpH7/ETH
q+lZ5oh+TnShc8/Sh+oNdG0nlV11vtB/uUD8Vrrv+Wp7kMqvOv5ax7+pvkr1
lWo3OvLxEXr+M1S/oevj1H2fpD5vVz+n6llm1o3GsapnqH0sfhO1W1plttoN
0XEf8V/VdVerzV3i9VD/zXTt06J3FH2yzt0m+gdds4buu6/ar6nyoN5PC/EX
qL5Lxx1VvtTxkeqzn+i3dN0slVvF+17XLqU+7xW9qfpcQf3soTYtVabqvk/r
OFV9rvp6VG22VZvVxdtH59uonKRzrdXHdNU3q58n1GY7tVkx8/e4X/dZSe33
FL2aymTx91L9rvh/qt5ZZVmVc3VtS117k/pZQeV1XdNc9WC1O0L8h3SPy3S8
sepLVB+k8x8ztlUq8UqVE0UfpPZTVT+r4z/U704qy6iMFn+a+M+Jf5/+SzPR
96s+Uf301/l2KsvrGV4Sfzc9/8qi1xDdQvUJatdK9M267/Jh3Nyn/pbKPXbm
i56ndsuLvp7vqTb7qc0H4s/R8fOMHdVnq81CtdlF/X+t57iJcSj+Ujp/ktrf
qONE196neqzqg3Vusvh/q59MbaaIvog2sfkXin5P/VyserTax+JPjXy8tOhp
oq8XfZru+6zOj9R4+yf1dQN0/G/q/oaKbmRuO0L19+L3E7256CvV/x6ie4l+
R/0dptKfsS7+nqo31jO+Ld6YyO0Oz33f/9THo2pzrHj75JYJR6kcreNOOj5Y
9Ldq877azGeuiPe7eMczJ3W8pepLVCLmtt7X7+JdU3jMTFQ5VccX6fhH1Z+p
Hizeo5GP19azrgNf/a8l+jHmheo/U1/XL7P8PE5ljo4PyN3nHzr/SuL7D1ab
v1Kf31f0U+JPEb038kT8yaL7ZpZ7x0Q+flVtTld9SO6xN4H5oeOr9f73Em+K
3v93unZ38brzvtV+f9Fb837EHyy6JzJH153J+2Ec8D1VhtAv3zwK3ybw/xU9
SvV5KtuK3ijQv4jeKvU34Rvyvi+IfO9u4vdSfZ74PQKf97u8xszJoh8Q/Wvi
+ng9T6pyv+ijVK+ka1fmO+v8oCB719bxSOawyjaMifCcf4iOdM0NPLvqbqHN
zzpeQ/20RSYn/nb8X77ZLToeqvoptZ+DPFE9Qu/tW50frzKW/yP+zswN8R9Q
+3HiPa92i9XnSP63zv2Y+p1tL/502qveVe3PEr2ANhozd+na0aL7qH1T/ffp
kZ+1peb72aJXVT0sMr2h+KvreB5yTPW66n8jdCKyV8fniN9K9U6pn5//8VXi
OT1e9x4e+dpuOi4Ly6gTVS/UuWG694OZx2/XMIbPSi2LCtWHqpwn+m30stq2
Vps1VEbqml1Uv6bzR6tcozafq81Y5JT4t4h3jMq14n8h/v3iHaDyHf0zplQ+
0jMsUD1Q5XvxP9HxDw3/9/m611DxPxbvQvSjytc6d6fODRR9Qenvzzj4QG0O
1fP0Ff166u/Jd/1Q/HtUDwjj+ZHA5z8i93YVvRJzV/QjsWXiRrrmTuaCvtUm
XI9eQGeq3ydF/6f/MjGznnpbvBMy65d30LcqLyDO4KfWm4vVfo7op0Q3VB+f
W7/dwXOqvCh2rvoodC1yQ+2PFH2V6E9F36lnuAm9ovFznZ7jfPFXEG9YZgz2
is4dp3KL+N8iJ1I//4+i3y4t395R/XnheXlZ4Tk6KszTLwvjiCtUH653MC62
vgbn8N7eFX+MeN1UPhN/ldLf8T3euXgbBf4ZufXY3br/WPG6q3whflfV60bW
lQ9wrY7PVz069jn06BWqL1fZTnQPXb+D6gv1/C+pz81FT1f7Ebl17VDVq+k9
nMOcqIxVeYd3VMZp+/Mt0KG5cdll6Blkvehm6B+V90Qvq/pclTcYC6q/0DWL
G55Hj4fxuTjId8YL8+6pyGPyJ75NYVlyieqvCvOeKC1jRgY5c4n6bap6YmIs
85TK8zp+qPSYf1/XvZwZO72vtueovK7zdWpcs4bKqzreofD4uVX/cVZu7HMX
YyczFnoP3aG+DwvvfGpsDLBOZP3/nMo74rdT+yfEa5sZc4KFWqnM1PUP6/yf
ut/qOtdZvIfE2zjMua+QS7rvxfSTGR+9Fvu/rQIWUX2krl0xXTLEGweLXlXE
0qKPFn27rm0veoj+x72RdQzzcS21WVX1MWqziehNGEeiC7U7ge+uepHu86bK
CnxvtVlO9Wi1OV99dlV9Lpgttb1ykH7ujozL+fatxG+O/Ec3gvdVtlG5Nnc/
/dT/IbExFViqY+rnnK727UW3ET1Z9Pqi10Vmin5P7d9VWUvHa6qfS0W/n/nd
bogs4V2q7hJZlnXScQfVJ9GPSkf+q675SmOgq/hP5p5D4FVshxt0vIrq/fRs
y4o+X+cWIZ8zY+kH1N+aqdscpb5e1PkXVNS0sYH466meIf7aqTHtBNGf67qe
Kgk6U2NogPjf6YJf9Az78n1F9+C7RsYGXXV8HWNJ9Plqv6ba3CbeLLXfWfS7
oueCK5D54AfxdxP9keheuu+Ooi/WfVfJ/C0eTK3fwf+rqjwh+vHYdtF6hXXE
DepvWmp5+7OunSr6btE/iT5a/a6s624Tb5z63E30m6K3E72F6OdEz1B5SO3/
oL34u4u/iHkfGa+AVd5VvZnKP6I31blNVZ8JTtSz7MD80fEAdJ7q+8S/S880
nHnB2Oc7iXchdon6H6L292fGBtuqFCpHxsaO4MZt1O42HX+vNt31H+9A7yGf
1P8hou9VX7uozZ1qs1htvtG5rcV/TbzNdLyJ+niaOYFtozbfiLcxc1Jt5mJz
F7aXj1fdX/yDRd8j/p+lcUgDuaQ+tlbJVNYPGOix1LLtiSDfLg5yD/n3cNCn
YKpPU9ctdN0qufmfpMZMYKe2ATMM/h920nGh5zwoM/aF1yozVgOzrSb6iMS2
4ar4CYIspa92uWXmV7rutaCbwJNfp8Z0HXXtK0GucvxMZGwELtpA97whsu6f
qv7bidcGuzB3m8/Vx8fYgehN9XNSZdyyhv7vtMoY9PXcOAS5x7OCtcBCLxbG
Y8zlF8AhmXXDOpnlfLfwPOiFDcN/mVKZ/5T6bBtb14KLL9I1C5F9fFv12Z3v
mxv/8gxg483F30Tn+0vXb1l6DLyhNtdHfmZspJf1HL1VX6Xz7WJjXTDvDaJP
iz2+28fG54z7K9Xfh7xPMK3eT3dd2159fpH6/WGbrFXaXvhPfSNIsZXwn/yo
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
Km3w+xb2m43mvoVzcw6pHJ//TuzY2rdj5z08UjkeAz76ccXceYJjdI/PSsew
D1Yfb8WOswdjkf/4Rmy/1Wq5Y7+nJI51/zB2bC0xBtDEfwxNLWPwOV2eOnaj
ldq8HztWnnt8XjrWfaTu9ZF4H8eOdX47nF/yLLkxwOzEsbsfxMYi+I7AbOQ7
XJo6Robcjk9K+4EHqM91dfxZ7LjWqwuveZIXy30+Dff6Vu2/iB1fjd8MfIjc
nph67jCHPo/dhlh2YpK5FiwB76vAJ38QGgzwXWmf9KGaRzeHtXjW5DuL93Xs
OJBvY+NRdNi1qfUFeuPr0s9H/D9x8/T9o3iLVb6PTZO/2S5xvu69ucdY38p4
aXUdP1k514X4oXMqy/sRQf6TDzuNa2rnh9ai76ucT8pYI4aQvNflxH+wcs4p
47G36pdzY7+9mFuJMdJ6uTHYEN41462wTjm4cl7SKPG/UN28sA9hZOU8nSW6
KGDF3RkXlXXUiKCbwKXoHGIywTP9eR+VfRD0Mz933P1w5FLivJjBiXNjHsuN
tfrxXxJjtrXFeza3ftmzMqZlTJJbRl4E+RHnSw48qjbri95Nbe7OvZ67i+h7
cufb9hH9ZeLchMPEeyQ3ltu9ck7ESjp+uLIdyvNgX49KnFdyTu75PTTM5a6B
5v0iN/gvyO3Hc+PYPaqAKRLLdPIOLsBmqB0rTEwYsbJrFrbjDgUL69zyqXNY
2qrcLv55qtcunFt9TuGccezwHP1YWkaDFz4srSew28bW9vsMF318bXv419I5
Ztjgc1UfVtv/MlRtWhTWm2ernlB73n5ZGpeDz08rnE+IL3dBZnwPzidelDwH
fEo/qV6ncP74uYXlA7Lii9J2AvbCrrnlAnIJOUEuNz4b4h/Iq8LvSI72DgFr
7aR65cL7DJyl+ojadu+oyvoC3ADWGIRPTPRVufXOlarnAmIq48+oco42eKeX
6B0r+6V4P9Nq+yZ4n/9VxpFgCXwa+DcyxkXhfQ/OLJz7Rw4g9+1WOIf9AuZH
bZ3BXPu3sn0FbiG3B591qf+4YeG1ifML53vjB58n/im18Rxzin0ZwGdvZM73
I+/vtsz58qx3EAv9QeW9FU4ujJvBz8Tlvld5T4QZ4v9T2V4C5/xd2V4CL/2l
0iG3HfRLZZuQ8f9nZdsJjPRHZdsJWfFl5X0T+O+/VrZ5mJvY8n/rnp307L9V
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
fJA/7PmGXw7/3P8BGTXPMQ==
         "]], Polygon3DBox[CompressedData["
1:eJw1nHfgV9Mbx+/nc/dHyKpIO6VCitIQDUkZhRQN7SSUBg0iykpD2TuFysjO
3pQRsmWVbLIysv3er97398f5fs9zn3POPZ87zvM87+d9br2hY48aUw6C4Ng4
CCL9/0j/F+rAD6p/qPoXKkslHyO5kxp8kwfBhjAIFkmungbBpSrX0U/HvpJu
e5UXJcfq16Uinf63V//qOlZT9V+yIPiJE5aC4Gf1/SwJgqMldpHuCLVfonN8
Lv2nKo2k+0Zy58DHdpe8VH2+UL2p6meqfQ/9/1NyrPEOSTzfZZL/oo/q+6r9
fapfrHF+1Ny+1rE7pP9bx75S/Wsd+0Rzv0lyNbVdp2M/q/6J2jTQeF9pvh+r
Xkf1qTrfp9LfKnmz2myILd8i+WDJrXWOL1X2UX29jtVTn201fh2NX0fz20Fj
NUk8/xMkz9Px+onPNUzyDMlfq80Gybvp+BkVz/d2yQM05sEau5HmeLPq01X/
XmPfp/811PdClanqc5ZKzdD3oMRc1P5e1Wep/oPa36XysORf1WZXjX+F2rdQ
van6P6I2t0g/SvpNqneU/gHN51id/w0du1/131R+kXyg+p0t/WbN71HJAzXG
Syq/Sq5orLLqx3FvVXLJJcl9VT82sW6yjj2r/7PVvrH6t5a8L9dW4x8vuarO
d4vqz2n+O0v3nuazr853sOY3XP3uU8kl36s+R6v9nWo/Ifa8mF9JfTqofrjK
35InSn5QfS7SeOer7Suqr9NYvaT/R/pU+pfUP9SxraQbqePnavy9JPeUPF99
3tV8vtHx41Q/oPj9N0l/rOTb1SaS/I/a/FU8j3/pXJnkc1UPdOwhySt0jr5l
X9MHVd9Wv+tDqVdLvo5rnvj6/yy5k+oP6lh99R8leTbXUvJb0tfV+a5UfZrG
nCT5GcnvaS7/6XxnqP3v0p2j+SzWsROkXyF9Fcn7a4xNZZ+DYw+o3a5qP1vl
HOnmaE67S99W8gGq/849l1yW/IvO1UHlMfWdJl1vjddVfTZLH0r/vI4t0vmG
SP+jxj1Q+oukb8DcdKyKjn2sNjfx23Rspsp50tcL/ZuukP4m1Q+U/gCV/SXH
0r+o+ivSz2f9Uf870el8nVW/UPPrKHmh6v05n+ROkhdJHiB5lcY7S31D/e+n
sVZLv7zsOT6o+ntqd43kDtLfIn2m8krZ9+RanW9vyd9KPknnu1ZtblD7DpJb
Sd9c9e9U7pY8XPKhat9cv/9ItVso+QONP17X62TVH9KxeZrPSulnq95Cxx7V
2B9KXqYxDtEYczP/3pfKXi8i1T+X/l21v1Ttq6ae36usjdKnqrdW+Z71WuU2
7qXG2rvkNZe1t4/67KS+YzXGo7nf5/NZS9XmGtW/VflM8q3q21TzK2u8VZJr
8s6qPlt9BjNXjTVc+jEaR4eD19QmV6WKyutlHztVutEar5rkqbyXav+d5K8l
L9X4e1Z8ve4p1v+Nqu+h8Q9Vv5N4J9X2NpXO0veTvEz1oZp/k8DPylz1H6//
baTfT+Uq9W+kso/G2l/y9dyL1PerhSY0Te1/1rEHmZ/abOJ+aR5HarxvdKx5
4jkwF2xSO8krM6//2IEm6v+QjjWX3Ej9ftJcY5VtQ9u8SPVHpN9b9cbSb5J8
jnQNsYcar5Z0ocY7m/dR5X7N7SQd20Zt5qjNH5GvK9f3R7VvI90Hkm9gfVWb
01S+1Zif6v9itamR+jfwW1jTjkh8X7m/70muJvletX+hWPsbav63Rx6bZ4Rn
5ZnU9mKy6vtIvyzytfhKZU8dq6r+9TVmXbW5UnM/Vce2k3y7xvw69DPLs7u7
+v3M79d4O6rtOK6Dxjtb8hnSP6e2l0ieqv/bSH5b42+X+B5xrxrp2G6qPxT5
WWyi8nBkm4xt3qg2+6j925KvVL29xrlZ8rOa0+7S11PbEzX+nZrDbcXcqku+
Sm1aqj5U5USV8ZJ3KO7X3+rzuvpPVf041U9V+x81/v3F+vaD6lfHfra+VJvH
1GaS+ldT/0cKmzku9bOKLemk/lOkr1Fcn//U/mHWHfVvqPHWR7YHk1T/VfXp
an+o+r+stuep3TGST5TclrVNY7yg37Jc7aeof6Q+v0m3n+R9S34mF0p+Cruv
+uM6Vhv/Q/o31H5rzWMy65+ONZS8h/TV8HWkn1ysz3+o/wUqM9X/ZZ3vo8L+
TZX+VB3rmdgmYhvPk7xE9c/Vf5D0j2isKRp/tPq3k24BPob0tWLP5XiVCTq2
Az4btlJ9dlL9yWK+T0hfV22nq09L1Z/W8UM13rZq85bajld5TvonVUaonqnN
E6zvqeeyWmN/rL7vq31f/EX1/1vyvNRr4zvSfyb5EsmXBV4zWTsvlnyx5DWS
10u+R79nmsa/UMe2km5N6vWjqc7VWvM5R/I06Vaq/ftqv17nO17yITrfv7nn
wFy4hrna/qjxvtN4+7IAqv8Hif2Bg7j3artR5Xu1v0fHGqr9RrX/Uu2bqd1f
xXwOLtlnukf6t3S8l9oeqP5/Sv+m5J74G5L/kHw39r3wV/5R+3NT2zfs3AfS
D5S+u3Tb/H+9UWkv/aX4Z9LfJP05ko/XeCMr9rdGa7wN2DvVR6j9HqpfoPbP
q30DXZfnNNYIla/U5yzJO6t9bckfSh6u9s3U/ny1f07th0luyvMt+dncPvff
qj8T2Be/IfV4DWPf/5E653Ya7zTWBckP6vfWUttrJB8n+Uv1/1D9r9GxHdW3
hdoPVP8NOncP6fdUu1ckn6jyrY49p/Jr4GN7SbeS9YBrX/jTCb+fa4c/qPFu
VXlN9ZZqe5j0p0hfnbVbx7ZT/cDU/scM9Z9UsQ/9l+bzdGDferHO94H0a1Vq
qM1nkdd/ju3COTVG/WI9qKb64zrPsOL9foxrif+s+hCVz9V3ssYcz/utc3TW
+Z7Qse8Ct9lFbevEfpeGqnwh3VpimMDvUFWdb2Hk9WCNylaST0j9+/E58D3G
aQ67FPdve9VPln5/6S+T/mXpF+vYyLLfEZ7H73Tsh9AxxG6p3yHepVn4c6nX
SNbKFcV680VifwhbOlbzn602s6V/XX0+Ud9ZarNb2T4K68EU6SewPuADSj8n
tW18Q/IGyb9gI9T+8NA2ZbPGHSp9dx3vqfF/0v8HyvYh8LGOkf6/sn3i3on9
YWIPYpD/UseoxKrX4rOr3kbHVqo+R79jqdrfrvF6qP84HTtc9ZvV/4SyY4IH
1PYSyYeV/Q7NU70mPpzkQRp/Iusm76R0L6o+UPO7g+e87HvKb8RPZ27/6tiR
xJcqIzmXzl+uOD7CPj1cdvz0heb4Xug17bbcvy8ofg+xFX5WteJ5/SByzEPs
82sRP5Q1x7Mkb1a5T3Obr3J54DEZG5uH7cPH76L2b0q+iHPr2Bux4xHGmlBy
TPinxvudeDdxPMGay9q7QGNumzoG3xL7qM1hqjeRvrv0d6rEav9r5vijfeJ4
aYT+V6TbVn2GqT6Q/oXPfpvOv2fue881WZO5fR46hhuu+teJ45sjNLdQ452m
OYzlfVGbN1gvNcaROt88HRuEbcn9PPFcjSOel3yn+m5FjEasnzjexvcYI/1z
+n+gVC1ZV9T2GckHSG4h+RfJz0vuyFog+TfJM3lH1b+BxvtYx0rYG2InlXtT
r0edWAul25z7GedZ5x1ZpnpF7WcQP2uMh4lVNV69Yv1YF9lmY7tnMF3pp6uc
qfrzOrZWusnqX7c4/06FP316EQ9fTGwUO/YhhiKW4p3k3cRGbo2tlPyS6ol0
B1UcP+PvrCj8zdUqh0huo7n8rrZnqM9pkp/SGO9IPlHn2KnsmLIqvkPi9+Ex
HRus+rDc/jh+Of7XnbzHkqerzTHEBipHSb5B8omqPxbaNyE+Whobk9qCTXEO
fAed4yLJwzSf8RrvTM3ndMlPq9+7zEflSbX9U/0mSv+J+gxi/VD7/6RrpNJN
bZeqlFj/E8f6T6nPGNUnaLxTeB+lX6O2JZWk8N8D1U/T+WuXHaPvqPpEtR8j
1SNq87r0BxEvSncQMRbxGLFeyb+Z3/6q2ixU2x7q86rO9ztrGLZX+gs0x23w
c8uO+YhH42L8gZHt/Ua1PZp1RfozdayT5vAR9o2YInUcTDxMTLU4djyAbvD/
4w2V7pK76vhruZ+piZKHFM8aOAt4y128zzp2vdp3Jf7SsRuJRUPbi0fKvgdd
c/vrO6p+WcWYGmvDhMhYW3fwLdZiHduEPxt7fe2lsjwuMEXpJhZYI9fvk6L9
y5Hjld9VP7nk+K1u7nipfuT4kHjyXsaLHG/PyTzfYyLbF2Ls7mWvLcTerEus
T7fpWDf8dx07SfL2rD8afxfJrST3ke7t3M9zGtoGsMaDD4F/nSj9/IrXK+xR
v8jxz++xfTH68PzXyY037Cz9HOkX6Vi74hpyLaPieRsQ2f98vLCvp0r/bOzn
lOd1CfeUNa/AF/pHfv+vk64rsRL3KPL4vB9tiSETx5DYktMix5Z58f4Ojezb
3qk2W0neRfJjuX0UfBVikhdVv5d4Svo60j8lfVddz3XS/6tjP2ms2xPjyNX0
5xHp2+rYKslzJe9S8TXVVIKdimvdLnW8Ok9yTemXY1ck15T8eG5MidiFGGYV
GETu+IA4Af+1M/iEBvxXpV7F8c5pxEvqf4Lk7tKPDH0N3pSui873uuqXS1+X
/sQA+D+S60g+SuNuUv8qKq9FHpfxB4X2ETrhL+JPq167YkyGWOCkyPHGIrXr
p3KcSofIPitr69jIvmxHlQGMKflS9e+o831cXL+XeOZTY8MvlhzvPRP73r+p
sg3XVm36EitKXgAmmnu9YN2oVfEajj0YGXltn6T+26vtLPAk1bfKjQ9PS4z/
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
yWNjc6DgQvENFPgH+Iz4jnAoybf+D4oK0EM=
         "]], Polygon3DBox[CompressedData["
1:eJwt13m8lmMex/GH83TO86QFlaVEC6KSZG2TqUkqtEmLClHRdkLa06LTatpX
LadFGyraVLOgRiIiS2SYamRiBimpyTrv39zzx/d137/P/f1d13Uv1++67opd
81v3PTOVSr1LRWhQNpWamU6lcukd8e/yUqlbM6lUIxePYn3PSKWaiJvxnS9+
LCeV6oKVxSZgvfl6UaHcinLn0hN8/+Bbhl0mfpzaYJmiqdSJ3FTqB+qN1cTG
813F9ypWU3utxAfpF20e0Ecvvqv5xmHV+V7h64Zdhg3FymMvYT2xGthYrBr2
MvYgdik2GLsI24yNxO7BtmJ9sLR4qH7nYWfRPqwJNgxbKD6bPsPuxO6jS8R9
5JbGNmjvAawyNhArh23ChsidixWlD7FbeWbHcxB/zDcLu1A8kx6LPrEZ2Pni
p6g7thMbjpUQT6Ge2G5sDHa2+GG6CivAqmJ/0e8krBv2GjYMKy6eRf2xj7CZ
2AXi8dQVexUbgBUVj6bO2B+xfCxXPJ3ysb3YU1gZcQ+6EhuJVcb+pN9x2P3Y
K9jjWFY8ijph27C+8a2Jh3sui7Bz6O9YCywXy9fGZ3wLsDzx0/hInsPYcqxK
jIPqYjOxetg7cvpgtbHpWB3sbayS/EbiqXTIN7TLN9SXrw7fDKwu3x6+oVi7
eEe+yZ/Fv9AAuVPS8VGkUq871OZpKL+Bdr6N9+67byR+kq8Wdg3dwPeG3LFY
F3FnWojtj3vALhVXputizNg8GqGtz43lGexycT2+juKldIR3tz7646358ozv
uPa/pwn4EtcX8zWXO1E8jK99fLt8v/L8Rm2x87DeOckcfx67CyuD9cz53+2l
nsPuxS4W9MJKYeuxTlg5bBBWHFuH3YOVxQZgxbC12Ff6vtTxD9i12L/E/fga
8xVizbBPXd+NVfPcShtIKRoRz4Qax/umw9ibchfwTZL7HbZR7vUxN6hV1Cb3
9p22jtFUrBf2Fl8B3znxPKkjdkxbvbEc8Ult3sy/DGuo4J0SN8YryhsX74te
NI7l1NR5MzodhTEvmQ8xL1phrWllNpmHMR87xvOg1dga7Edsl77r6Kd+Jpkj
MVce4nmYnuP7EC/qGfzAc5L2iZfiv3e9MQ3U70nHJXJXaKtK1C7+L8Tb6AXs
0ahdWBG5i+VeJ74+3qG+DkUuVtexHvXAvooxyl0lt4bzh+R+LV7EV01cnVry
fRD3TTd4LoWOi2hL3BsNiLHRVr7qUfv0fdz5jpg37qOC+Hm+x3n602LXKkWN
wPrwfKLNuVh5cfdYK7D92BxsmtwKeclc6aat7jSO52jMN89jCV8tbX4rPkH5
xr8Sqx1zQfwQb1/t/Q2bp41S2rqD3pY7hWcybeTZlZvMvWrar06jsP3yS2jv
P+LT9Il4LT4s6gKt468ZdQ4vzrdXPyX4qorv4LtcPEG/Nfi28rfArsAmYTWx
bdgs3k3Oj2Eb5M4W78MbxbcddYPGZJP6GXW0vOPFtADbru/1sW6Jx+i/mNyx
sf5gK+NZ82fEt9Ae59PxnOhT7q+8v3kG7cR30yqsgO9enuf1+Vh84uLB1BZb
+P93Xy6b1Pyo/av4VtNk7NNM8l4f4f0Zm4ndTuXFT8irEGuK+KdMMn9u115z
WpFN1sxYOxfEHMZmY0di/cZux/6tvenY5FjPxKfET7pWUpyD94j1lUp6Bpvy
kjoW9SzrWJTmZJP6FHXqHMdzaR52BqWNrZN4TYxT3Jwucj4cv4R/tPF20OYF
8Z1qdL6xv4x1xSrFd4WV5duojfVyx0f9pY+w23juxKrwTdTe1diW3GSdj/V+
Dj5G/EKMj4Y7f4J2uVaHZ3PsueJ9UTX5rbBN2DTxdDrA1xIriU1y76d4RuMl
xKWNsRK2Ob43bAPWkqqnkzUv1r6Ksf+g4jEnYx2NWhw1ki6MPYh7OwtbE9+X
9uq790VYTRot7zXsxpgzvAexaVgbuaVjPyPWRerZ3GT/E/ug8xzPp/l8g/ju
4vszX1ftFmprEv5kfO/U3tibxV4t3qfcfKwfTeQ5HHNETplol57GemKDo0+a
ILdXJlkHYj24N5uskXuzyfoY6+R92WSv+Z7jg7EmO99lwEPkLpX7MPZoOtlj
xl7z6qg5UWeoSzZZb96Ndnmb6vNY1F65bWIfQcOxdIwXyxd3ju+cZ5O2uruf
L2N9wO/ieQcvxrc+nn0mGcMprIVrHcQ/8f5I92eTvci+bLIPif1I12yyrn/k
eG0m2XN/Li4jt1Y8Eypwnhfz1LUh4kf00yLWUGyD57gHe0B+B2yH8Q3iew/r
npfsuWPvPT/mXORmkns6iY2IdxI+GhD1UX5Z116XVyueL8/X8REY5yGe+fhE
nqNR6+DrxDPw1sbwovyeNF7eCKxq1GdxcyrACuma2PvH/JH7seNCrKrjlbnJ
d/im49pM8h5e1McuuWvE3eIdx39LPHtqKh5Ms2LflE7+cRrG/wPvuXI/wErG
dy4eyDdDXCSd1NCopXOjZrv+s7Z2YPPEz2WS9fl1fCdNiTkd7xJ7K/ZqNBXr
hHV0/m46WTM2xP4Xv0O8MSepeVH7uvA9yPd+OhnTFr4+MW7xl3yrYy3AimHb
nJ/JOzJqnPiY3FbYN7w3xvceexyqx/NGOtmLrJXbO+ah+Ij2VmEXYX2jDmHf
YC9gleN/JGov9hu2E7sp/hWwCdEW9gpWK/ZhUf+w09jL2DXYzrzkm9iP99d/
N+NIZ5I9Su9YQ/HNsVeTO9D5P+WulFsWexQbg53AtkSdiXUHG5VO1stYN6/E
Hom6gX2PvYRVxfpho7Hj2Gbsiphb2G3YWqwzdkD/PWP/gn2BrcDKxT8AdrPz
2cF46orn5CX/GPGvsS7WI/fQPv4h5K7G7o69PG/TTPIvvAJrzHebuE3MTb45
WAO+v/K1iu8Zm4XVj70Sdjgv2c9VdL481tzY28c/RDoZS4xpu2vtsAbYM1gL
7H2sQ+wTsWexdtgnUV9iz4qti39x7CBWkEn6i34LjW9s1KDYJ/LNxW5x7TW+
tthNMQasCbY79gnxXLBl2J3Ye7EniLmqne3pZM9XmJfstWPPfX/UJ3pW3n8B
JJYIIw==
         "]], 
        Polygon3DBox[{{1791, 1790, 2467, 1606, 1607, 2468}, {1906, 1104, 1518,
          2451, 1774, 1775}, {1914, 1110, 1692, 2487, 1786, 1787}, {1781, 
         1780, 2444, 1444, 1445, 2445}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtPk2EUB+DTIuVSKOggg4mGwTRFKRPRpBoNKgOXhcVENidBU7SDQcLA
RuMtJAJObqJxc9BBBxICkwuBouIFLyExJo3/A88XE5rnd877nvd7+9Hu61Nj
5VREvPR5kI5I8k3u81UmopOveYLvWOQ6z3OLI9xuiigZHJdr8kV50Bn/rE/q
nZYv6aWt3VMPylm5Kh/hUx7jCxb4lme4wQ/stv+JM2rqKq+qmw9F7Khb+JGt
/MQsP7ONu1xrjLhh5ov8yH3yDREnzS/qfdVb0Cvo5fWW9NrNfdOfkHPyd7mD
e+zkDx7mz+Tu/JW8FxbML5v5rb7PcfWYu2+rL3Od/XzDPFfY1RLR59nL8qqZ
Xf0hc/PqHfmKPKo/rZ5rjjglD+ilrE3oXZDr7n9N3uMwN3ku+d7s5VHP6PWM
40nPGc+cUZcfs4PzLDpn1p6ceobtnGYb7zLLleR/LrfKG95pxZyjI6dfk//K
Z1mxx2OiLP/hQ97Rc+W4Jd+WM8k6G5Mevb6YpL94brEk2BrvLfSk/v8uDwAz
zEqN
       "]]}, {
      Line3DBox[{1705, 2213, 2214, 2203, 2237, 1043, 2236, 2235, 2373, 2708, 
       1875, 1706, 2489, 1876, 1707, 2490, 1877, 1708, 2455, 2491, 1878, 2274,
        2275, 2680, 2456, 2012, 2072, 1879, 1995, 2431, 2634, 2097, 2013, 
       2073, 1880, 2174, 2646, 2098, 2099, 2014, 2074, 2378, 2629, 1996, 2100,
        2101, 2015, 2240, 2622, 1881, 2239, 2238, 2335, 2701, 1882, 1709, 
       2492, 1883, 1710, 2493, 1884, 1711, 2457, 2494, 1885, 2276, 2458, 2681,
        2277, 2204, 2230, 1886, 2241}], 
      Line3DBox[{1712, 2178, 2379, 2648, 2329, 2328, 2380, 2698, 1713, 2495, 
       1887, 1714, 2496, 1888, 1715, 2459, 2497, 1889, 2278, 731, 2498, 2016, 
       403, 1997, 2613, 443, 2017, 404, 549, 1418, 446, 2018, 405, 2630, 1998,
        448, 2019, 672, 2665, 2243, 2242, 2336, 2702, 1890, 1716, 2499, 1891, 
       1717, 2500, 1892, 1718, 2501, 1893, 1719, 2649, 2179, 1894, 2326}], 
      Line3DBox[{1721, 2381, 2545, 1720, 2382, 2546, 1722, 2383, 2547, 1723, 
       2502, 1895, 1724, 2460, 2503, 1896, 2279, 2280, 2682, 1949, 2020, 2075,
        2076, 1999, 2432, 2635, 1950, 2022, 2077, 2078, 2000, 2614, 2102, 
       1951, 2024, 2079, 2080, 2631, 2001, 2103, 1952, 2026, 2246, 2601, 2449,
        2245, 2244, 2337, 2384, 2666, 1725, 2504, 1897, 1726, 2505, 1898, 
       1727, 2506, 1899, 1728, 2507, 1900, 1729}], 
      Line3DBox[{1731, 2385, 2548, 1730, 2386, 2549, 1732, 2387, 2550, 1733, 
       2388, 2551, 1734, 2683, 2281, 2282, 1735, 2283, 2602, 1953, 2021, 1954,
        2104, 1736, 2433, 2603, 1955, 2023, 1956, 2105, 2180, 2434, 2604, 
       1957, 2025, 1958, 2636, 2435, 1737, 2106, 1959, 2027, 1960, 2684, 2461,
        1738, 2339, 2247, 2338, 2248, 2667, 1739, 2389, 2552, 1740, 2508, 
       1901, 1741, 2509, 1902, 1742, 2510, 1903, 1743}], 
      Line3DBox[{1745, 2181, 2182, 2650, 1744, 2362, 2363, 2706, 1746, 2390, 
       2553, 1747, 2391, 2554, 1748, 2462, 2555, 2284, 1749, 2285, 2605, 1961,
        2028, 1962, 2107, 1750, 2436, 2606, 1963, 2029, 1964, 2108, 2184, 
       2651, 2109, 1965, 2030, 1966, 2110, 2615, 1751, 2111, 1967, 2031, 1968,
        2685, 2463, 1752, 2341, 2249, 2340, 2250, 2668, 1753, 2392, 2556, 
       1754, 2393, 2557, 1755, 2511, 1904, 1756, 2652, 2185, 2186, 1757}], 
      Line3DBox[CompressedData["
1:eJwVzjlSQmEUROELUqLugkRdgoFYKs5TYIiamPveDiAkIHMFGqlsxYwFOAEO
WCUIDhn6EZzqc7v/elA4TQ+TTETs4X0y4mYqooE6fvGD6kxE1/bNc/xyOuLN
PcFP+CvP8mP+ws9lxj0r5zGHZ32qG/rGF4b5iF25g45twbbFtzGwbcoNHOjb
9jW+jk9bSa5i39ayLfMV9G0V3WD8Dk+2vgzdhf/w6P6TR3jgI1nGPT/z5tbb
RfcSirjTJ/oPfQ81XOMKTb/1D7hsMEc=
       "]], 
      Line3DBox[{1773, 2126, 2127, 2040, 2255, 2625, 1905, 2254, 2253, 2348, 
       2703, 1906, 1775, 2512, 1907, 1777, 2513, 1908, 1779, 2514, 1909, 1781,
        2445, 2515, 1910, 2219, 2447, 2663, 2220, 2041, 2081, 1911, 2175, 
       2437, 2640, 2132, 2042, 2208, 2626, 1912, 2207, 2189, 2516, 1913, 2331,
        2330, 2517, 1914, 1787, 2518, 1915, 1789, 2519, 1916, 1791, 2468, 
       2520, 1917, 2299, 2470, 2688, 2301, 2043, 2082, 1918, 2176}], 
      Line3DBox[{1793, 2133, 2134, 2039, 2300, 2624, 2469, 1792, 2298, 2572, 
       2467, 1790, 2571, 2402, 1788, 2570, 2401, 1786, 2487, 2569, 2374, 2376,
        2375, 1785, 2488, 2699, 2332, 2206, 2188, 1784, 2661, 2221, 2222, 
       2038, 2131, 2130, 2639, 1783, 2128, 2129, 2037, 2297, 2623, 2466, 1782,
        2231, 2252, 2232, 2205, 2660, 2444, 1780, 2568, 2400, 1778, 2567, 
       2399, 1776, 2566, 2398, 1774, 2451, 2565, 2345, 2347, 2346, 1772, 1602,
        2296, 2036, 2125, 2124, 2003}], 
      Line3DBox[{1794, 2135, 2136, 2044, 2258, 2403, 2672, 2257, 2256, 2349, 
       2704, 1919, 1795, 2521, 1920, 1796, 2522, 1921, 1797, 2523, 1922, 1798,
        2446, 2524, 2190, 1923, 2223, 2448, 2664, 2224, 2045, 2083, 1924, 
       2177, 2647, 2137, 2138, 2046, 2210, 2404, 2662, 2209, 2191, 2192, 2653,
        1925, 1799, 2367, 2368, 2707, 1926, 1800, 2525, 1927, 1801, 2526, 
       1928, 1802, 2471, 2527, 1929, 2302, 2472, 2689, 2303, 2047, 2084, 1930,
        2004}], 
      Line3DBox[{1803, 2225, 1969, 2211, 2261, 2262, 2674, 2260, 2259, 2377, 
       2405, 2673, 1804, 2528, 1931, 1805, 2529, 1932, 1806, 2473, 2530, 1933,
        2304, 2305, 2430, 2531, 2048, 2085, 2086, 2005, 2617, 2139, 1970, 
       2049, 2087, 2088, 2006, 2618, 2140, 1971, 2050, 2089, 2090, 2632, 2007,
        2141, 1972, 2051, 2265, 2266, 2675, 2264, 2263, 2350, 2705, 1934, 
       1807, 2532, 1935, 1808, 2533, 1936, 1809, 2474, 2534, 1937, 2306, 2690,
        2307, 1973, 2212, 2233, 2234, 2008}], 
      Line3DBox[{1810, 2193, 2406, 2654, 2334, 2333, 2407, 2700, 1811, 2408, 
       2573, 1812, 2535, 1938, 1813, 2475, 2536, 1939, 2308, 2309, 2691, 1974,
        2052, 2091, 2092, 2009, 2438, 2641, 1975, 2054, 2093, 2094, 2010, 
       2619, 2142, 1976, 2056, 2095, 2096, 2633, 2011, 2143, 1977, 2058, 2269,
        2607, 2452, 2268, 2267, 2351, 2409, 2676, 1814, 2537, 1940, 1815, 
       2538, 1941, 1816, 2539, 1942, 1817, 2655, 2194, 1943, 2327}], 
      Line3DBox[{1819, 2410, 2574, 1818, 2411, 2575, 1820, 2412, 2576, 1821, 
       2413, 2577, 1822, 2692, 2310, 2311, 1823, 2312, 2608, 1978, 2053, 1979,
        2144, 1824, 2439, 2609, 1980, 2055, 1981, 2145, 2195, 2440, 2610, 
       1982, 2057, 1983, 2642, 2441, 1825, 2146, 1984, 2059, 1985, 2693, 2476,
        1826, 2353, 2270, 2352, 2271, 2677, 1827, 2414, 2578, 1828, 2540, 
       1944, 1829, 2541, 1945, 1830, 2542, 1946, 1831}], 
      Line3DBox[{1833, 2415, 2579, 1832, 2416, 2580, 1834, 2417, 2581, 1835, 
       2418, 2582, 1836, 2477, 2583, 2313, 1837, 2314, 2611, 1986, 2060, 1987,
        2147, 1838, 2442, 2612, 1988, 2061, 1989, 2148, 2196, 2656, 2149, 
       1990, 2062, 1991, 2150, 2620, 1839, 2151, 1992, 2063, 1993, 2694, 2478,
        1840, 2355, 2272, 2354, 2273, 2678, 1841, 2419, 2584, 1842, 2420, 
       2585, 1843, 2543, 1947, 1844, 2544, 1948, 1845}], 
      Line3DBox[{1847, 2197, 2198, 2657, 1846, 2369, 1704, 1848, 2421, 2586, 
       1849, 2422, 2587, 1850, 2479, 2588, 2315, 1851, 2316, 2317, 2695, 2064,
        2153, 2152, 1852, 2643, 2154, 2155, 2065, 2157, 2156, 1853, 2644, 
       2158, 2159, 2066, 2161, 2160, 2621, 1854, 2162, 2163, 2067, 2319, 2318,
        2679, 1855, 2357, 2358, 2356, 2589, 2453, 1856, 2423, 2590, 1857, 
       2424, 2591, 1858, 2425, 2592, 1859, 2658, 2200, 2201, 1860}], 
      Line3DBox[{1874, 2228, 2229, 2202, 2325, 2659, 2486, 1873, 2324, 2600, 
       2485, 1872, 2599, 2429, 1871, 2598, 2428, 1870, 2454, 2597, 2359, 2361,
        2360, 1869, 2484, 2697, 2323, 2071, 2173, 2172, 1868, 1415, 2171, 
       2070, 2170, 2169, 2645, 1867, 2167, 2168, 2069, 2166, 2628, 2443, 1866,
        2164, 2165, 2068, 2483, 2627, 2322, 1865, 2321, 2596, 2482, 1864, 
       2595, 2427, 1863, 2594, 2426, 1862, 2480, 2593, 2370, 2372, 2371, 1861,
        2481, 2696, 2320, 2199, 2227, 2226, 1994}]}, {
      Line3DBox[{874, 1045, 2489, 875, 1054, 2495, 895, 2547, 1064, 907, 2550,
        1075, 919, 2553, 1086, 931, 2558, 1096, 942, 2566, 1105, 2512, 953, 
       1115, 2521, 965, 1125, 2528, 976, 2573, 1134, 987, 2576, 1144, 999, 
       2581, 1155, 1011, 2586, 1166, 1023, 2594, 1176, 1034}], 
      Line3DBox[{876, 1046, 2490, 877, 1055, 2496, 896, 1065, 2502, 908, 2551,
        1076, 920, 2554, 1087, 932, 2559, 1097, 943, 2567, 1106, 2513, 954, 
       1116, 2522, 966, 1126, 2529, 977, 1135, 2535, 988, 2577, 1145, 1000, 
       2582, 1156, 1012, 2587, 1167, 1024, 2595, 1177, 1035}], 
      Line3DBox[{878, 1545, 1546, 2491, 879, 1558, 1559, 2497, 897, 1565, 
       1566, 2503, 909, 1572, 2683, 1573, 921, 2555, 1579, 1580, 933, 2560, 
       1588, 1589, 944, 2568, 1107, 2514, 955, 1117, 2523, 967, 1626, 1627, 
       2530, 978, 1640, 1641, 2536, 989, 1647, 2692, 1648, 1001, 2583, 1654, 
       1655, 1013, 2588, 1661, 1662, 1025, 2596, 1672, 1673, 1036}], 
      Line3DBox[CompressedData["
1:eJwNzrsuw2Ecx+GfQyVOOxa6IJIikdDdHZjpIKZWHJfq4BCDBPdAaGnrfB5Y
uAWrRUgkEhcgacIzvHk+/b7/tv/k9PzEXF1EZJyFhoi2poi9xohW7rOd+ZaI
d92pD9jBQ740R3TpT93DIrtZ8HxJJ/UX+3jEAXuvPtb9/OYgy0y5S+mKHuIP
x7hqr+pRfcI0HxMRM/YiS86r93jy7mVdcd58rnLKs6e+M8kzftgz+lfneM4s
N/3WhZ7VNS7xksP2RX2ll/nHFV5zxF1e3+gC6/3fOrfst7Y1fccNJtyN23f0
vW2bD9zls7t/t88zhw==
       "]], Line3DBox[CompressedData["
1:eJwVzssrhHEYhuFXmIUt5bAb7IYpZRxWDo0NCTN2Dgs1zMoYO4cdW1v+GKUU
poYipZSyUEqUlLJQyvUt7u7nfZ6vvl96rVLYbIiIEqqNEcfNESc4bYpo41ZM
t0S8uNvlDpzJXZzTd/KrO83dOJdn9L1yD97cGe5DRn/hzsr9+JBzPISsreYe
kYfxKY/xrH6c6+5JfscEvpLdlk9FTOFSV8MVNvTf9jn9POq6G1yjbPuxLcgF
3MqLPKov8q97iZdxn3ynX5VX8Ocu8ToG9A/ucvI/BCrYwqDt0bYtV9GIHRT1
u/xk2+c9pJDXH/Ahnm13ybtw5O3/1/0yfg==
       "]], Line3DBox[CompressedData["
1:eJwV0E8o3nEcwPHvE5ty52I1O0yRIpbyaLtYMX+f5LFwsGYXK1ajuCCKGjb/
i0JOHLQaOTgopZRa1sZSSu2glFotpXZQ8vodXr1/n8/3+/x6nufJ2w8NXbEQ
wiAfU0JYeBDCbxbZTQ0hUz/RlB5Chl7YZekSj9gzZ+sYj7k0P9Vlctg352mJ
z49rLld2BbpCIfnODuyeeZ6gmL/mUl2l1XlcD+1e6Gee889crnXO1/Ql3+0q
9QsVXJtfab0761rFkV2NTlJNwtmNXa3njeh9/DAndIrXzuv1v11Sv0b/Bz/N
LRp3Pq3N3Nq16TfecGJ+p2XuzGg7d3Ydusl7ipyd2nV5nqWTGN1sRe9x3qNn
7vTpHL2k0k+j820d4NydYZ1niDRGSLqzo6P8cec4+m78in7jwxDuARrjQsY=

       "]], 
      Line3DBox[{886, 1050, 2492, 887, 1059, 2499, 901, 1069, 2504, 913, 2552,
        1080, 925, 2556, 1091, 937, 2562, 1101, 948, 2570, 1111, 2518, 960, 
       1121, 2525, 971, 1130, 2532, 982, 1139, 2537, 993, 2578, 1149, 1005, 
       2584, 1160, 1017, 2590, 1171, 1029, 2598, 1181, 1040}], 
      Line3DBox[{888, 1051, 2493, 889, 1060, 2500, 902, 1070, 2505, 914, 1081,
        2508, 926, 2557, 1092, 938, 2563, 1102, 949, 2571, 1112, 2519, 961, 
       1122, 2526, 972, 1131, 2533, 983, 1140, 2538, 994, 1150, 2540, 1006, 
       2585, 1161, 1018, 2591, 1172, 1030, 2599, 1182, 1041}], 
      Line3DBox[{890, 1553, 1554, 2494, 891, 1061, 2501, 903, 1071, 2506, 915,
        1082, 2509, 927, 1093, 2511, 939, 2564, 1595, 1596, 950, 2572, 1606, 
       1607, 2520, 962, 1617, 1618, 2527, 973, 1633, 1634, 2534, 984, 1141, 
       2539, 995, 1151, 2541, 1007, 1162, 2543, 1019, 2592, 1173, 1031, 2600, 
       1681, 1682, 1042}], 
      Line3DBox[{892, 1185, 1555, 1557, 1556, 2681, 1466, 1434, 2649, 1435, 
       904, 1072, 2507, 916, 1083, 2510, 928, 1441, 2652, 1442, 1443, 1598, 
       2687, 1599, 1597, 1601, 1600, 1266, 2624, 1609, 1610, 1608, 1612, 1611,
        2688, 1269, 1620, 1621, 1619, 1623, 1622, 2689, 1272, 1636, 1637, 
       1635, 1639, 2690, 1638, 1472, 1454, 2655, 1455, 996, 1152, 2542, 1008, 
       1163, 2544, 1020, 1461, 2658, 1462, 1463, 2659, 1684, 1685, 1683, 1208,
        1209}], 
      Line3DBox[{1032, 1174, 1669, 1671, 1670, 2696, 1021, 1164, 2657, 1459, 
       1009, 1153, 2579, 997, 1142, 2574, 985, 1132, 2654, 1697, 1699, 1698, 
       974, 1123, 2674, 1526, 1525, 1625, 1624, 963, 1113, 2672, 1523, 1522, 
       1614, 1613, 951, 2625, 1103, 1520, 1519, 1603, 1602, 940, 1094, 1513, 
       1512, 1587, 2670, 1586, 929, 1084, 2650, 1439, 917, 1073, 2548, 905, 
       1062, 2545, 893, 1052, 2648, 1689, 1691, 1690, 872, 1043, 1495, 1494, 
       1687, 1686, 1210}], 
      Line3DBox[{1033, 1175, 1668, 2593, 1022, 1165, 1704, 1010, 1154, 2580, 
       998, 1143, 2575, 986, 1133, 2700, 1696, 975, 1124, 2673, 1524, 964, 
       2704, 1114, 1521, 952, 2703, 1104, 1518, 2565, 941, 1095, 2669, 1511, 
       930, 1085, 2706, 1702, 918, 1074, 2549, 906, 1063, 2546, 894, 1053, 
       2698, 1688, 873, 2708, 1044, 1493, 1700}], Line3DBox[CompressedData["
1:eJwVzk0rhHEYhfHbawwzXjZWxIrsKFEzSmq8ZTUpVsoIC0KJhQ0psZL1fAB7
S2WQKY1CiVKKrH0Aa79ZnK5zn6un/9OT38ptVkXEsiRrIwpyVRfxg6d4ItX6
ubTrX3iIo4mIA/yriTi2temfuIcZbhd/uX1bq/6BOfuGvi7f3LZt2tbiftfz
uCRv3Jp7iku5X/UFnJcyt+he5W7dN/Iiz1Lkxu1zfNF9LY+yYivjJT/DJfUn
nMARLosX3JitufINZnCYS2OBG7I16Q84ax/UB+SM67dN2hLukt6HvXLEdVfe
4Rrdd3oXdsoO1+HOcg2Vf9dLeC+p+oh/ckIvVg==
       "]], Line3DBox[CompressedData["
1:eJwV0L8vw1EUQPFbbf0aMEpYylQGLBIGibmbxChtTAzaCGJoLUQTkRBzg9Fi
8geYLPYuhFQIC2aE4PMdTu6757zlvdxiZa6ciogSejIRDXS2R3TgEAfY645I
80fI2jPYwSa/bX6kI+pam3MKdb5mVvGqVbW/bMQvdrUNfh0tbVX74cf4b7PM
r6CpLWlr/Bf/iRJfxLW2wBf1c/7S3uyKmLcf66c4wb47F1qBf3fvDdN8hZ8y
z7RZ7YV/xhY/wY+joU1qT/wjatoIn0/+RRvVHvg83zKH+aHkX7Sctszf83cY
5AeSN2szfL9+y9+gj+/FlfM/1oYzmw==
       "]], 
      Line3DBox[{1039, 1180, 1542, 2597, 1028, 1170, 1539, 2589, 1016, 1159, 
       2678, 1536, 1004, 1148, 2677, 1533, 992, 1138, 2676, 1530, 981, 2705, 
       1129, 1527, 970, 2707, 1120, 1703, 959, 2517, 1110, 1692, 2569, 947, 
       1100, 1515, 2561, 936, 1090, 2668, 1508, 924, 1079, 2667, 1505, 912, 
       1068, 2666, 1502, 900, 2702, 1058, 1499, 885, 2701, 1049, 1496, 
       1701}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
BHh+yu7R5Z43yOpoFrw9KOAz5XblY39FgN6DDyW9b/iA7601Ma0eCajlkv7g
5LYQaBjc4PEH9IZHOjL9Ve4C+kXM2TT0ewgU9/aZdMPXB95ucL3aMUXAI1oW
zqarfOHMxEvWycneUDe+y/HcBAHnjhn08GGsD9SNtX3/z1+VgP3DTH/K67vu
fdyaWV+FZW8Kfj2YZgdmYW+mnpLnr1Mp+m1fPDoPEJ4xsrSHLUwrLh395tf/
+oQ13XZ1XyXPm+OSyqw15fn39ZrWpllxu9Ax+fzWsz1tefnI5L/0mxA4VT4+
2jikXvy4m1gYqlcS2N2W1x+Z/n3O7c5vjALiqMp5DhuC0KJmS0Rq6H/sg8w+
T/b9GlV+TW7/FipzAsc9Q+eFE1HZ5T/2R2b/hUNHqo5fLuC5nOLu07yeY4+s
U/c0Tv5nf5Htb/mTVVHFrQTssHx47C2leNxxqIff40X/8R9k/uNVEKzXEsvw
1XoH/6Q2yZheMPS5paYPHxfA4iLtd9Pee78JMLyP6Qyf2w7wvXRQQ9kUO6g2
7ddrq7yObhKdtqtIyxZ8G+1/+s9fLk6Rxan9nw2zTT8K2D7w+PKSTU7ovuN3
ledbb5h1zu5i2msBvxZpvAye+wDVNhu6dU7x4XEDGW6cbzMGZC8EcDCNTnLF
J9i1/EZ2vLYdzBrcYYO+HP+/vH365YzLE6zY6HL7y/e7/Hxg84/uWV7HRi7f
cKWecTt5fdSl09CdLf7c5fUEpuch273PUnMEVJo8R/mksj207ohv1F758PZB
Zh/lAQ3zv/zzHZhX63vJ6jjhO03XqpNdbSF9pk/C9TQBmjZfMHvEz0B4vzlw
RlE3Gbhc8GmhHyXP18uaHwjpFAx3DVJv162WryuicvHyywJMO989/tT2CIgI
1fh9arsTnLZoez3WXY6TrhbLX10NgyCbqI4uJk4QeCtq9aO5AuxUXW+rbxkD
Nnn2b/UtXaHj7GmdVh4R4JJ/z8+Z9aJALSTs5HFvV3hf0cjgc1QZvFXTutxC
KRkO5GQHtlDyhqjEgj8bWgoQt9euR97OeJBN0QCz/t6gX7OvdalpKaQFy/S6
18+A3BZDTnavHwh7em/coXylAKyN1r8Jz8sFo/2tVCPywqHS/ESXexXP/vO9
x4ULDTqNsC3Eeq9b2BhtzIGxK4dddzgYCaaDfB2tWpXhj2U2yd2V0uDEucna
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
UzbtM0gbvTHwLq9cusn154Rw6vT466GnPz5Qhb7Oui9sn/OmpWlx715dIcOg
kXpDC15rdoy9bnzgajY/tS8//7hzEhmJ8VwD43dg/GSBn12A3wr4ZV4cAXr+
Iy9mdV6sL/Jilnkx+MOlwZ/y4A/yekZezzKvb/rgg92cy1ra3sDwm49FNB2d
fLNK/nRPmtK3/G5vdy2tmnT5YUqikic2DJte0cmbKnetUWA5SUv3G1z8suvM
Daro6plqPCGQhk9986r6iWz6HvpXR/eYJHpfIm9UP/MwanW3SXLfuAxqmD7q
yaYtT+m5z+vqPmsuk+/cnIcN5sbSrZguqUspm0rqzB7kMzyJWpScvfbQoGy+
bDKir+vLe1RaN7l1QchZyqhwc3FmTy0faZrvlPAwjq69DYwxPXSaapmNHeSy
T8nLnjnY7NFcpXbXjg//rONLk6Ksp4REKvFMnm5Ut5qXaIvX4+iho4+T2dPv
PvqJWl4UN33LuyPn6dO6d26O5sfoiuc291/vQuYO6L70QuRZSqj3vcvCL4fJ
MK1QU03xCzfn+8yKm880Or6ltXctbyo98e69Tru0tOahdusrm6v0NLffED4U
QCcXGjy3r6ilFcPnDtnXIYF2LfXzNt0bSnefN644bYqSJ7aK6WFucoNuhFdr
E2MYRJabzc0+ndCyd+XQ2t+MrlBCv9N9O3zzpTreFac1V+zVyLpbtt53ukDm
q08Mq/72OEUveNDJUvELyRMubXq4N4J0Aj0STbu6U8C8MRtWKHHC9f71nye9
DaVvpWcNO2F9hGatPtNyaJCS9y14rDXYconqRJ+JeRTvT64GZ/e/mqHE50Oq
um3sHksRaxe/qR8QQo13Ni3RPULLi93Sz708xWQYUndxQt5JsjWsYJKn+PdO
Fy4/svQ9Rz8GPPCZsukEPS9b12LDSy3bex18VbdDGM13mv/Vv8Cd+k/qnXP/
g5ZrBvDKtTWDKa/ZH6fONXSlpIpPavs+0/Jk70WltLPCaHhElvfhql60YGzd
CY7K+OotEn+ePhRElybfG/JghgdVNyTTK0qcM2iFbekx3wNoxeWOGc1Ou1L1
etEBs3O0fNTjTdo1ez/SuVD2+YurHuRV/pv99qL7ludoTG+uaXjssdu/8ghd
xLHF84UFmhTEw8XzghUaX8TVxeP/VZpsxP+7updwtfhLjt+p8Tta0HNvpetU
+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
TshPOOAnAT8MeDzks6+QTwqAfD4HvCng+wH3Qh63AfB0wM8Bbg74DcClPIfi
u974rpT/64CfBVzmg96Y13LMS8KPAb4QcOwX0XWxX0SF/mK/CHpN2UKvqQB6
Xbwu4p/9t+Jxwj92oyz2x2zF/hgdxP7YWNiTa8Ke0DzYkwnev8dzIMZfwPh+
Yjx/x3hPjB9QLN4I1MyBHZP7YP8xL1bPS/JBvW8m+aC2b8dBpxP2/U6DTg3o
1N8l7GQY6FTJFdtjvQKx7oth39JUeb077ORSrFdhlNCL1rA/K6AX5SD/L2DH
zkL+VfrL36G/Yv2+/OseVJX+cjno73X4qQHCPvBe2IcaNsIfeQp7wtthT3rD
zpwB3AHwifBH9rh/JgD+6Arsz3jgdwX+x7O/JET1yyJ3H8MpxgdT+FDhuMg7
My9RGuCHAT8AeMyj3Ixb/J6uW/+d07fUSx7nkt58YpkbFA14POAWgC/yKX+0
/aTH5Hd65Y/l/hncVifZxlOxK/sB9wC8BeANBJwjATcG3AzwYMA7Ah4pvsv3
8N15+G4Y4I8AXw54spgXn8K8PDCvR4D7AO4KeEucWzUR9p/TYf9PI24ptPlt
/9kP9r8G/E554XfYFX7HGudcCcLvcBn4naGIc0KF3+GPiHPuwk89wPjyGF8F
fuoKxuvCT5VEXFQX3w3EdxvDf3UD/VmgPwD+q5zwXxwJ+qsXP8ckeY4p9F+/
l/g9V3R+Ufy84J86LjPUO6WKeicug3onnE+R+nzK2qB6+erPtdzb6+a2N/PD
aXHqiB0tXY9Snuuri2vTc4ru95N+EPvJNFLsJ1MX7CcfNLAZmJmn2JN5S7fa
NPWmRKsZ2gd1jpJu16H2lb9p6bhVmslWeyV+2tWmlZvy2wD7CcliP4GGYT8B
eFjiSQIeuY+t/i7wsxq/VpxrcE9xrkGDcK5R/Nxnp+Y8zn32FI4d3zFKS9We
XbQYdfQUW3W5e9Pb7WIRnnY4HzEFHozn5hjvgPGSP+r9djmvp2JefAfz+lKc
z0X3euUV31/6VW/4e39JruM1sY6sWkfSiHVkuY7HzepOzEnRUm78gPTCEuf4
jfn4JlWXuRatey+MX4Lx8hxTjR94WI1H4v8s4KSCsxou+dxQ8I0knyU/OwEu
+Vl8vRw1F7FeQ4r5R2fNBPhHWdd3WdT1sT3q+t4Mu1claWE2P962O2NG/Suc
v6GL3Qv/pCL5dBXyw1J+pFyp4TinJvU5tfOu6mNnP9bSZJt9Fj8dIuivW4Xb
emiPFO2HdxL74TQD++ES3gXwWcXh/B/jWT2++LmnoyYA/BlZbB/DWdMN/FHf
u7IcfZ2vwJ8Pgj+ks1HwR9ZVngY/ZV3lBzGeroCfz8FPOa92qv1/ybccwTeO
/998Y1vwTdYD/Md4Vo9XwYv4/6q6bfNe27Q0flj9VU7NwqhLJ+8235JjKKb1
8W6zT2mp9svWr0tXCKJVpnqaif0uFfFZfX4h4ep5oZ6BFqCe4SPqGWSdTElR
B0KyTmZhamHKxGQtWc3Je2VkfY7SI8tdqPXdlYaJ+g3WCxP1G59QvyHrVQ6L
ehWS9Sr2ZXPGJl3P4h+7+07Xs3tIzkNvzt8QF0mBts9q/KozuXZzffKNEWfp
iXXC+1/75L6iLoJtUBdxAHURsr7IV9QXkawvQn0C70N9wkXUJ8i6r+Oi7otk
3Zfctx+Bc72x2LfvFxu5ZZWbltNHDY4cH3aZBhmdSx8fFlwEfw64GeD9Z5Y1
Kn9Oy3YtXQIudrhAM04ltF7PIf+6j2Uk+iKTVPerEPo62+v2WLfaTUtjRk0o
+To0mI5+v7z4T+U7xesTLDUDcP6uhpsBrt4nXID4H+fU1Azn1Dk4p5Z111ai
Lpdl3fWtvbMmNFPwG1ibvR9b2p4b+7kYWSv2H+fFNBnnxddxXizr4RuIem+W
9fA4/6JxOP/S4vxLwscD/hFwnHfzSJx3X8F5t6xXTxL16pyIenX1u1R+qv53
S8B9AMf5Nc/F+XUezq9lf0Gc6C9g2V/wDueGvjinG4tzOpU88ECVnDwDXMrJ
vYSupT/O1HKFw5V8UlrE8qKCnpsG7AkpuhdlJfpAe6MPVFVXRrKurJWod6JI
1Dv9KCHqnWQdVxnob/ni+subVPor6wA9oEeyDlDWW7pAX2S9Za8/3PqdKq2l
beUMLIeVSaCVHi02XjGNkPOlR9ALKs4HSgW8H+CyPjYefTGmqGuVdQWzxbpQ
DtZl08cVpvp7tFRvvnnbEfGXafTyrEteJyOK5GeKkB/6qJKrSYBnF5crGiHk
iqIhV+p3alyKyw/NA9xdJVfyvgUvFXwF4AGAy/qKWUJfKA76Is+FzUHnp+L0
s3peUh+rCn2kRtDH9/BrSfCD7+HXZF1KZ6HvlAt9V9fzDIbdAH6uBvxS39Xn
BdKeyHp+G9gN/+J2g6XdaAI8sp8lFvp7vbj+0lTo6RHwTfaPNIE9CS5uT3gC
7Ibkm+wzioH+yj4jKT81hfzwMMiPlM8U6KlabiHP3Fclt+gL436QW1kXZyf8
DkfC70h9sRX6wmugL7Leb5Xwa2wPv+aC/ujx6GtOQV+zi6pvOu0/+qBfAe4M
+HTA3wEu/fgGYQf4JeyArMMsEHWYnCHrMGFnwoWd4e+wM7vhxwuFH+fD8OOy
ThJxBecgrpD2Z6Pqu2WintT5Va9br8PpfY+ahNK4sr62v+p1Q017TPrVb9V+
8Y0Trdud4Pg5gdt/9R2cmjB+Vjkl7mp1cFClzlMiKKFR8LGa1dxp38VZrtOV
OG1N+1mplZT44efwut57Lrqp6uKsNH+jLq44fKsmH/Aemzcmjbmq5W6PN66s
cS+A/rT+1Kr9jijavGjQzVa5Stx76o/XbZN8ueEnI4c5j93JLmBZYchnLc0v
WX7qfAsfNsm5UuJX30FVw8wzM3W1HGY6clfFWbfJqIZNHRvzYHqkNTFd0FvJ
73501pTuHUdO0wty69oE097hO4+brdDy6+wjOrd0r9NUp0qtWhz9x4+8gP0c
ADlU9QXQQMjhION9Ovas6Iuh3cWj/ucpP8h78OLYYKrVwqxfho+W459GlXo4
jMl/yL4vlzLDaF2TkGctlHxHz8B87OX7wTTzoYVx1wfBpJ/QwDr9tpbHm3Q4
cyYulErFuT/99SvhowDXBXzs0eShd5X4+emygLzYgfuo++Ixpg8HelC1oRGT
1ihxxfkFNuf0LB3olpm1x2WbYzQ0ZLW3gQKftqKm68bPe6nq/eNf/RV+DszI
6vnk+z/xTCP/5U3NB3kU4U8R+Fnil/T/LPObfpb0Sz40EHxgyQe1vx5QXK//
1Wch1yVdrAvLdXloOjlCV6PlxfoNH3ql3OT4lc3ul/IOK1rfHmJ9Wa7vxyjz
6xlVtFxncte4QzoJvHx9s/Dz40OL4IaALwZcyk+IkB+W8vPHsVXp+72z+dKZ
Xo0WhiXxU21d1xt9w2j+xGZ9tr/J5pEXuf7rgjv8KGyGz+1+IUVy21XILdWH
3LabPGbpnRyF/3N2ORca+tEir94+/QM8KDAtpu65v7UUNOXUHaMByv/lVp/7
Kr8FW4xaLFLivYo3Hiz/0NidQg3WXPj1K+GVAQ8H/ONFvTW7UrU8vVuE/amT
3mw098o+p/bhlHTuZEGpX30o52p06p3myUeqd+hslxZcpNcthF5zPPSavJ03
HLmpJe1w/fWXRl/gkGuUGNvOg05brHncXslf9tncHmTtcJ7b6BxOtPzzGLUt
/3XSl1uKnX++L6VmaBTXOtq2y42Af/B8FHhI4pH0LBP00GHQ0zV1YpVmSh43
+kvFb4N7edPTnHYTdlcKp8Q6x6J+9VU1qDyuSWz4cSpc2twm91FIEd9OCb5x
gOQb7pG+g3dS6uMeadW+By3CPoYt+uuNVe+Moy6RSom6RCLUJaKOkYxEHSP1
Qx2j+p3utniPUsaZq3FfGSHORJ0kVRF1krQedZKoqyQjUVdJq1BXiTpMshB1
mNQadZhReP86H+9fn8Y7ofLd6uZ4t3ot3idFXShNFXWhVBN1oagjpcGijpRO
o44U9ai8QdSj0lrUo8p3n6fg3eceeAcW9a6Eelf6gnpX1MdSZVEfSx9RH4v6
W94l6m9pDupvUa/L90S9Lv2Jel3UA9MqUQ9M1qgHRv0wjRH1w6SH+mHnRUPX
P8rUUq25b6NHJbjRrvwYk9Ynz8j6Z66443f9M11D/TPqpfmQqJemINRLy3ux
TuLepKG4N0n9HvFG7JPIfDNL9S6w3P9U7+9J+zBZ2AdeCPsg39sdhfd2u4DP
6ndyRyPPRR0+9RN1+LwMdfio26fKom6fL6Ju/66o86dxos6fB6POX75vWxvv
2y6F/EDe+CfepY2AvKGPgKqLPgLORR8B+g5op+g74NnoO9gh+hSojehT4Hz0
KaCvgaaJvgauiL4G9Eewr+iP4Kboj1C/A9sJeoe+DBoo+jJ4Evoy0MdBHqKP
g6+jjwN9Imwl+kT4HfpE0FfCt0VfCf+JvhL1+6peeF8V/SxUTvSz8Cb0s6D/
heJE/wu3QP9LJdGnw09Enw7XRJ8O+np4nejr4YXo61G/y+mGuL0k7ue/ArtX
BXZvOt5fWI76ByecN+nhXCwE59QlcM7VuXOP/EnjXxXt5+/EPvNPfXEudgXj
K2P8G7zHsQzn0TE4j55bd+7Nvot/amzL2W5suzSg6DziLcbPRT3AeYzXL37P
A//EOd2IkVt0m87L+M9zOsb4SqDHAvNdg/O1w5hvGfCH8b5ARfCnlehToB2i
T4Hqo0+heP+IrSYH8aocvwV9DU0wHvvPRfuoZ7C/qr53eibsg0bkKbwfeb01
8hTZX9BG9BdQMvoLZH9HM9HfQU3R34E8ixsiz5qIPEv2MZURfUwciz6mTPRn
HRL9WRyD/izA6QD6tqIBdxB5B33C/qEd8g70o/FO9KMdQz+aCe4jKsR9pI1x
HxHoIT30VcWAHnkf1xL4RxP4Rxlv30e8PQzxofoey8Gwe1bgQzPsV0wBH8BP
agF+JoGfsM+ci/3AfrDPzbFelbHvPRHrBf5zC/C/Ofiv7rvXR/+OvGcvAvcT
joK/KL4PMEczCPsAEn9D9O80A36Jxx9+ZyTwyHk1Rx/KPdW8suF3+mJe6vvi
hoJvqvtSeAj4LNdlEfbHemJdpNweQH69BXIr11cH8nYF66vqW+SjxeWEvuPe
qkaQEymHeyGfUSo5zEX+aw85bIk+REa+XBJ9iCr55P+QT26C78q+JAvRl0T3
0ZfUxVd3lt09Je9439HYx8uXbm5rmLXxaQStm2I/uYSflh6kjRjt+PIy3Qmr
PrGKjRftrdrVsOxaLX3dmBCna6nof6zd0iWn/cj0q8/2MhW09P7MnLo3LiXQ
B78yvrcLg2hEzbdeYau13Mux0Y9KttdpQbWbuVUC/WheFbtv408q+Xszg1d7
8i5Tiy8nTne29qKwMOerf8do+Wy9obdbRF+kVYtWb5+k50kzS7l3s4nWUtrx
fTd3eEbTj75fD6/Z40VLWt/18nZR8mXHmG0VjWPozUw/xxm3/KhCj+FteLCW
Zq7R7Ry+/ia97+EddCIvqOi+uMmq+3sftDXxHeisZXef/HqDVsfQ036bbExj
/Ugn7tumsRe1nHitXMXy2miq4Zx/N2+3F/21fnPP5op/3Ft6RjVD/0iq6m9X
clFVT+rafnzKyHAtRd9qPSnrb6bAPpfzv6T7FcnbMtW9vlrnpoX9Q5R1+XCt
XZmpl2hTWtKDmKd+tC7kdFDfO1qObGU2ptaHSErINBvJh7yopF4Hz0OK/eyw
J99j5apw2m5zr2yL2p7UY8bY1FNK3nGpevup/UeEUI2VAy696u1GX9OXOldW
xtfJjzrukBZGJScazLf19CLjT5ZXHrxT8kHHhz6WPYMp5GfDCWENPGmXX/t7
bZW4ccvXkZGhE0+Rn0lq6i0zN+rgVGPJ449a9r427f2OfD/yTbE4UKmpJ9W7
Z/FqWL70Cws0/c/HZKWHetFL9z53JuVJ+ArNl7Yxg6vX8qf2JyMPLsr8p2/x
/Wq3Ox/PBFP4mICPLnfk+Z2tZtekUn1P3IyScFbDgQd2ZoMmA3jw3aI+xK/4
Lugsum/EDHT+9ez4qDnf/7FvUS/PjHreypPWfxnbfp+Sf13/0j31ZE0nXhSX
GBoR4kWt18cbO3/S0voZs+Z3OXaEy6VMXhxo6E/T6k6r8edbLTWp7NQ6svJx
jjIgo6uBwZTxNdb7iJI/bk05bXpriR+fuBW3+GVeJN3RpK1I+KTlE8NWW+50
OMzvVj/JzVXwHHjX1c//by3XoKHjRq0+yC8Ls8KTlO/mLG3t3kexw5f0Svmt
p/3cY+NozYGGnjTkyKH6UxV61t0u9+BsNW8++slguNEZL5qQ1ff+KCVePTKx
m1NlZ39u1d09elZFf2pgv9bwupIXF75N8FjcKZgbLSnZts3A4KK4a5bq3tEH
W+v1aJOh5ZXZycYGO/3YqK2Tbnglf9qrt87lmkK/9ZO/rn9a7sXHX3QO91K+
+1/2+Vv1ESkuqVoyG++yK+RNKK/rk71qsJ5/kd2+pbrns063LVabFbl1zb//
h0P9UL5imHR9eil/eju6fsPjH7Rca5XF1QonTvNhi4Ab0/y96Kt19IGOSj7F
a3c3Md3jxy9G276ercjnoKfT+w58puVz3TrbHpoTxt9cwxeWPuFFx8n77SAl
vyvh9+qWj34wr3Uz3ttc4WfnwxUaj/51H4i1NrFBp1P8/ErDjqUGuNEhj0Xl
mit4yrSL2dqRwvmZ071jZxW9695sz6lHit7x7rlja5uEKH5sRrd25CbhBDj5
AQ48ZCDw0FPgkfn1VeTX7RHngx7yFvSQpAf0k66gnyT9mC+dF/OlfMxX5tE/
kEeHqPLoJsijVyEPAp+pruAzuYDPWBdyE+tCl7Auch3vIG4ZjnXEuvNgse60
Husu8+sJyK+NkfdBrmiLkCvygFxBDmm9kENqBTmU8qz77rc8U2PI842kP7od
faLlsKwdRlN/BNHE3rH2UTWDpV6wu9ALag29gB6xldAjcoMeSXmW56pSnvtU
2+484JuWHOr+7HOw635qf7G99YcanlJ/qaHQX3oB/YW+0ymh7/QG+j5hV/Ky
94qcmOj0rmet+Lmf/W8GjD4VTPnZdY3qKfzZlvNkqYu+J+0eauL+rUGwtD+8
VdgfKg/7A3vFCcJe0WLYK2k3YoXdUOIDYTdk3j0GeXc38B/2nzYJ+88nYf/h
LyhI+AuW/gL+hWoK/8L68C8yv66P/HqlKr8uQH4dBjmE/yIW/oul/4K/ozbC
3/E2+Dv4Rzor/CPHwz/Cn9IU4U/ZCv5U5X+L3omAv2b4az4Nfy3z7hjk3R2g
j4gHKF7EA2yIeADxA7mJ+IHTED+o4hD+gDjEdvBNt3bDtTzzo/+lT5qbXDE3
6FrtW0EynmHEM/wO8QziH04V8Q8XIv6Reboe8vQTyNNLDz/VvtNVLd3XzgiI
PnOR95kHb8355iHjLlov4i5uirhrpIjTSCPiNJ6POE0V13EG4rrQUk1q6hpq
ecHJcj+rdU1gPZvx60adCpLxISM+5OaIDxFPcrKIJ/ku4kkZ74WLeI9lvBfb
36FOiRfZ7Ddu8pmr7e7Q1S0a9zcfzxXdq+ykel8gxmuC47PnmbSr+lHtt5Mp
lB50tvX3kzeol06Gptm71H/l+5PaTq7ssFFLRnFdutWqEkM79H4Ov6XYRfX7
uTeRv2M8YzzvxnhJzwHVPc9XQY+doIdfg54hd3MPtx787F/5PuZLXmK+fBnz
le9LbkK+7458v87yrM0Xsj9Q2czJySmzn1PVXcN/VE67RquaXt/z2CvxX/2Y
sk9hteod3mempuu2cTYXVDyQcqrSTRq1cHGlFVVuSjh9FnAeBnig6l0/2V/p
err3EZMWL/7VFzkF9cBbQP9x0F9L0M/lBP1cHfQv2u9d4oJBNk8bEtu8l/ED
ijSefGlJn3NyH5JaIm9djLxV5o9hqnvyHTU6m3z+3/0bzyKH9Lgy0I1iOeJz
FTMZ7zlrGlwOj67Y4Zb8Lk0V3+UIfPen2G+nOOyr1MG+iuo9R5LvOcp5lce6
yHlNLs6HonfbJf+/gs+jwWe5XqtU762r30mX35VyIvF7AD/0gu2hF1IO5fri
uzQU3/XF+qrveyy/dH7mi885mreq+wOrNqpq4Xgn/1/7YOp3bCX9kh7oKb8B
PSp5ZinPlqr37+Q9USV3v6qyZEfsv+470i0OL6of/gP0P1XVA+de6zkhWvEv
M4bbGRY+Cac6A5yaW7Rxo3Gmce4KnA16/OGdrsDL99hR8xfccnbyrnpKXmNU
zeCMS543HbC18bvfR4nrIP+yjnc45B/jWY53xHjkBbwNeYEP8oI/C8ct+IX/
/b76SbF53txh596OD/oUfZdbCjws8awtru9F9bGgn8oI+lnSL+elhst9A7lf
0RD7BjJ/cRB0ksxf5LlAM9W7dRJeD/uBEg69I6l39aF3cv+wFsbPx3hZhzBV
9T6aPG9agTxa+vF3Dp+tZntr2cTepd23b5eo5FW9UvQ9qOgc4Y7q/bL/qpd7
l1gQOUrJZ2cs17GLUeKP/nMGOt9XfmUdzgLVuyfy3ETuX8n3RCR+mQep8U8R
+LmfCv8c1Xtbkv545EeSfjnfHmK+LOcr+bNcFedIfk5R3Xsv7Z457K20e1Ie
CrDPKeVB+ilv+GXpp0AP9QT/9UCPfM/LRfXenPSnbeF/d8Gfyjx0vuqdGvCN
Z6rWBXae1XZe+gU/1TsgEo/kv8Qj44FW8O87QY+clzH4rK+al7PqnTIZt/jC
j8u4RbXvVPROgYnqvQDJZ+kHLeCPpB+U57ndcZ47Cee5ExMtXboqcXVKRoZ+
swt+pPeu0+1yoZGUe9uwQpMcLQ3umlBRL8CPnYMHXS+o4lkUvy0U8RvJ+E3G
pbNEXEoyLrV3qX94yf+ro+CnY4btrvlPHrRD5EEs8yCZfwWL/Itl/iXpGSbo
ISfQI/MdK5HvsMx3VHEsyTj2/wDbug2L
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-20, 20}, {-2, 2}, {0., 403.99988457143684`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5881016566243954`*^9, 3.588101675413905*^9}, 
   3.5887137960266466`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEfQe8JUWVfv+7+9733uQADEPOQURmiCIoiChgujMYQEUxgGJC17jqrpgX
w+quac1ixDWHXXTXnBUUMSAgccgwOZP731Wnwqmqc6qq+75x+f3um8cNfe/r
W/X1Cd/3nSc851XnnP3S57zqhc97zh4nveI5Lz/nhc975R6Pedkr2ruq/1cU
5fFF8f/+uEchfm+KQv+w/50gfuB7xrzjjeLHULxLLX4rxW/f9R8vqgZ9iqKU
PweN+8ka+VFL4vn/hY53HvF4zb6He9930HHeRDxe9TjOmzNfkzrOWyLnhPr7
8Gvfqs4Cfu22exn/jfY8VOyPDg55EXr5eeKHPPpQ/Basva+KH3Jtvs+/N+Pb
+Vf0mq8Rj/87evzrxOP/hh7/jPgxaT6p90z86b5JPP5e9PiHicd3THz6D4gf
8kzulHjmv5vzqPfC85//fP3sYmGPMyc/u3x4gI4ITyjUEekFgM/fu81fMEEc
ZTvzHvg7eaf5W6hlqJeXPo461oXoAO8wh50gDoBPkD0Z7TO+iA7xNvMZZnCH
kHfBr+ZEfwEd4s3mSbOJQ5Tq1e6nCJ/3OXTE88yHWqBOAj797ZEGxAE+iw7w
T+YjLSJOAoWi+NWvN2+/E/Fq6rv6DHr1a817U38m9XlSR3yVOSL1d++YecQL
0BFfYf7CvYlXU+/yafTql5nPs2+PV7/UvPcBxKsp9PkUevWLzHs/iHg1tQ0+
iV59jnnvg3u8ei/z3gNznKPFb3J9PoQ44iRxxE+gI+5NPA6rM7isHGnekvpy
D+L+HPk0/EdQb5kbDiwxR6ROFfWF2BNFHe/j0/S5HmLe5SjiM1DA9rFpeueD
zBk5mnjnmcQrPjpN73yAeedj/87vvJ/4Kc/2ccQ7zyJe8ZFpemf5Wrkzjife
mbr6/Mc0vfOe5m+mLh6P6PFp5BERqAcb3j6BwsSHE285h3jehxMnwOZEe5jf
TiGOPZd47YfQsU8xn/bxmZ8Mv/ok896jzPf+IHr1iea9lxOvnke8+gPo1Y80
r34y997yk+HPe5y5l1oO1KeYbV5BLa/3o2Mfaz4P9b0vI469gHgejjMfZt77
jB6vPsp8nmcRr6YibhwXH2He+zk9Xn2oee/nEa/ejng1zlSWmPd+PvHq7YlX
4zzmYPPe1DdGfZ7UER9kjkh9s88ljrgD8Tycuxxg/sKpzCMuIp73HnTEfc1n
pICc+g5TR9zbfMZXEq+mMsN3o1fvYT7Pq7lXy2Pjd9zN3Ps64jU2F/NyGvy2
O5snUV/+a4jDLiae9050xMXmQ1FfPvXHUanw+eiIO5jP+KYer15oXv1W4tU7
E6/+F/Tq+eaveQfx6l2IV78DvXqOee/zu736UvO2x5jf3k0cYlfiEG+HQ/xe
/hNcbS3KUV849TF3I573Njja74iHqMMeav4Iak38y7Z500PMX/p+4g12J17x
1m5vcLD5qz5EvMEexCve0u0NLI7+B/cXyLfveGL2N4f9GHHYXcyj1GsXm0fP
7vamFm8/QbzpXtxbefed1e1NbSJLhS8fHf+DMJvMXgqo/PEjxPtSISt1yVDv
a/HBRs+fzzysTBPZCqh6g7XmDb6UeVjq8qgOtsp8xi8TB9uHeCEVD6iD3Wk+
2dfGP9ht4h/59X2dONi+xAup2Ecd7GbzZ1KVi68Qb7Af8bwF5igQzBU3mj+Y
qrJQZ5Q6LBVDqs99vXnH7xIH25944evhhdeaT/a/xAv3MYf14g/16r+Zx+Uz
dxW/vYE4zl7mXajTCpFPcaV5ksTdCfm2uzYvaFfv2Rc2zVlfaJrnthvkOZ9r
mjM/2zTP+kzTPPMC+EhP+2TTnP7xpnlqi4ZPbjHhSS3YLm/TyeUtqi9rE6hl
7eVjWZsoLGtD7mVtmLusDUxH7cV49K721kY+o/b6NWqv26P2wjt6myhHtUd9
FfGH7El8fKqI+I/wJ13OnT+JR7KZUhzUvOJbTfMP32yal32jac5td8RLvto0
L27X2gvbhXHOfzbN88UZ+GLTPE+dgWeLM9D+9c9q//ozPq3OQAvJp+kz8BF0
Bj5In4FR7Ay8FY45enP7+3nt7Y3t7Z/b2xtUd+FlxJl5EHEWXgt/8p/NF0ud
Khncyf1bHNn88/80zRu+1zSvb5fxP17UNK/9r6Z59Xea5lXfbuxp+jpzmi70
TpO3SJ4uFok6TU/5KJymU6nT1GZ1o/Y0jcRpeg86Teej0/Q25jT9kzxNzajd
IKN2EYzaUzB6DSyBl3Q7a5eZtUNhxhx71h7evO1HTfOWHzbNm38An+iN7V7W
Z/J14kz+d9O8Rp3JV6oz+XJ1Jl+qzuSL1JkU202cybPUmRTbLftMfgidyX9H
Z/Jf0Zl8JzqTb/fO5JuIM/k6dCbb1GP0qgea0SsfgAv2OcQpPYg4W5AEwaWe
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
nZgcvn1te1kq9urcgGB7zOM1IAB3H9er78Bdl8g6q1thyqP+fJqvsy73txai
S3SixXdvLVtCmq/FnB4CpgnnwpZbuLPa69LomCua0cP+Kl9FDRp6BLFnwA2u
+CdzMZpJPAnsSqHidevmRt7aDVaK3VWK7dVeOoLNJQsFolwwZSK+SNRXwPaa
JBOky+z20pzQ3t2MLrvrmny1VBG2MxQ6LrftjN9NXzsjWshNsJKmpWw2XaT9
vPa2qpHsma4dnB7ZXkw/Tz7H7efZ9Og4G/ep/VXY9oS3wY4j9s6zYYO9zly5
DjFbrWxu29z+1u6m9jXoglXAnhpSe8qWG2qzndSWKmWLcCoVDMpYUBP/shqE
Ywi6AtJIfsdcZQKn051BvydCUKtTV6yCLjbHCX4ZJThSyMWV4Cj9y3RYJuV3
ySu9s0y9ATcEI/WGREdQPtcvOHiZ1Ohh7Y46+q/N6KGXy0+xb7dN9VqzlZai
K9Qd7dXpdrihHTaTDQmJcBBK3BAQHmYuWVdlZFviYJ078H022A1IMZnffFSb
6pndvVp0N4eoa7/TZ4P/aJrkvRd6Skki03raOJqc/mWKbm13KFeocHFBpLmJ
dliaZahrB6ZUESZaeIOxsy+PJzbYmbDB7BjOQ9EGu3NL09whbmJvubtsKtxl
XFyItthkaovp+gTRN20PJnpIu3fbYbFioLp8dWjvG466LpmTfdOeHaQuXHVM
euxSOh+b8DVdmoveVAJSzwkbbre8kkaiqSSfTyZeeqe1u+zoy5vRUX9pRkf+
WTxvr26bzU6opQQc0Lgamg2ob8xGnExtRFmVhwRtQCVoBYSTB5itKF6X5DCM
wzcjsjOxFwNVtdvNhe/4hcnOFd6GpnN1ae/O1Tavy5Nmu11Li9u2/tGN4HDG
BgWT8/NrIA7p0imCqGNNcUmaDCnVXiys4NTbjY8kNhqMfARzNfkIpU99MLoc
rmx3oLqVYku2d6tNSYShM8y+TFQlYWsOnW4ZukrCn7+LvUiuGWNn3k6KA6gr
ZCm2Zvupvr+CLPrDpzo3zwduzGZZL2EAUfePFSdfnChOpjYn1r0s5wzPu+he
+ogC8q2QDLMuS5rI9pfhMDNxe9luzaOdrdmMDv+TfPbuxO48gdh4MCYB1Ljy
kaPQTlzVbjt1K1PbsYUOWcaEUia3I1voEC3sAWZ76C1ZaMafeGvDS13bjLcn
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
\
\>"]]
}, Open  ]],

Cell[BoxData[
 SubscriptBox["\[Placeholder]", "\[Placeholder]"]], "Input",
 CellChangeTimes->{3.5887154692420816`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"1", "/", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5881017917782393`*^9, 3.5881018202271786`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUmnc4l+8XxxUhFSWVSkXDShKyUieVkZCVJAnfQioloZSRVKKEIgoZyd5b
OPYme6/PsPk8pZTt9/z+cr2u537uc9/nOet9fQiY39O9uZaJiUmDhYnp/3/F
YfvE6iqB15iHPulPT+C9+QOe8wsE6m3bUrDh5wSmZhwT/D1L4PonypvKZiZQ
UljTfGSSwMDz3qck5yZQdotHT30ngcrlMm3czJN4mvarNjiFQLX4sVd9vJOo
+6ohQeo6gS9CIjrenZtExx8edy2LGHjpMFuQecgktrVtmCgxm0a2HK2svqtT
uKf4Ho8s3xQe/L5uYXbTNGbdLl/H1T+BY5OsBwZyp9H0zbGf3e7j6M11ykzp
FgOdMv1fNjiPo+kX5vy82wwM6PvNV/JoHCPS8g8fs2FgrVj2+VibcZzOK9Dd
Y8dAqQaFKAejcRTKK3ky8ZSBrJznDLZKjmNS1N6PBr4MTHxnUKBBGUNVZftL
VtkMnPN/4okwhtQMt4nFFQaO8pVMqCiMoShHBFxZQ2DHN1bNRukxdEqPoGUy
E5iR77elX2QMzxhd3GDJTqANNebTwtYxXLH44py9hUDasbbE42OjuHRfhGn1
AIGNTWLNCb6j+EV+gHmvKoEFRg+kpLxHcZL/te+p8wQm0HMC8l+MYuzWugXj
CwR6zp0xqnEaxbOn3Q3fXyTwLP8V2siNUTys51w7fJnA3HsvZgXkR/HVEX3m
vVYERnEO7AyijGDUFcdrRS8J9L8KbPJ9I6jQN8Ln5Umge2z4n+6OETSxdVHX
8yLQ/Mx/P3bXj2Ar072B/rcE7ncY8/iSPYJWZpO3Wz8QGNk/Q3zzJtc3X+FT
jCT3E9XvV305gu+FlUP7osj9HLNqx9xGsEHB+YxTNLnflkfRog4jyJt0dyQx
lkAB5WWjZNMRjMuc4yCSCQxPZKvMOj6CMUKnblDzCfSdt8owkBjBon7edt0C
At1UasP/iY7grcFrO4sLCTQdevNEnn8EA+tGWf2KCdzHw32skGMEU/LeDm6o
JDDsCV9I+eAw9vVE5pk2EehT7fz6Zs8wJh40bf3cTKDLtkEH1vZh/OfHsGxt
IdAkJUJHrXYYg17ITci2E7iHJshWnzmMF/myktu7CQxRP/ag9fUwFo/p/jGh
Enhwg3ptk8cwfm4d7dakkd+nznx/o+swbtyvdlWeTmC+xoeWantyv7LvfKwj
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
4JpU7eo/t5qA/Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 1}, {-0.9999998210133187, 0.9999996757545379}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5881018234483232`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], " ", "+", " ", 
     RowBox[{"4", " ", 
      RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
     RowBox[{"32", "x"}]}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.588101859272172*^9, 3.588101878045668*^9}, {
  3.5881019119352303`*^9, 3.588101937437208*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "32"}], "+", 
  RowBox[{"8", " ", "x"}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{
  3.5881018808945646`*^9, {3.588101914878189*^9, 3.588101938550951*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"CountryData", "[", 
   RowBox[{"\"\<India\>\"", ",", " ", "\"\<Population\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.588102120157852*^9, 3.588102139605798*^9}}],

Cell[BoxData["1.214464`*^9"], "Output",
 CellChangeTimes->{3.5881021728048997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"CountryData", "[", 
   RowBox[{"\"\<India\>\"", ",", " ", "\"\<Polygon\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5881022108802476`*^9, 3.5881022404129105`*^9}}],

Cell[BoxData[
 GraphicsBox[PolygonBox[{CompressedData["
1:eJxNXXmgTdX3lzmESGbe6OkN3n33vjude99765qJcoZ77iMpRKSUDGnQLCIi
GpRGGZOvIRWpDJXImMySlCkyhYT0W3t/lnd//nnf1Tn3nH32XsNnfdba+5va
50GrX/ly5cpZlcuVU3+NV354qmNWgkY+NjO3TW6ARk7/IH1ZSoI2Rm7bOnlF
gIYUVds5o0mC9v7z5H0rfg/Q2uWfT6jcIEHXdX3+httPBeiWP2/4ytMwQesO
lXz4S80gqcc0qc+/38D/okGyOr39dItGCTq0JW3vP8VBqt4+c3j5Ogn69bGb
FnR4P0iRhzaN/ZHlA1/VnO5bHKSnO349qmntBLUdf/+Ry8uCVGfml6vq10zQ
U/etGDZlTpAu93zg26vVEnTkpZb85iCVfLdv6fMVEzSw3IPPVJwZpG37D1Sf
8q9Lb3Sp91Ln5UFq8OpP1w+46lLG6/9NevLxIM1+dO0txgWXzu/d+czQ/kFK
bX7ufveMS2PP8X9oE6RP//r3p5HnXcpRP2wQpF9un/D64JMubTi5bk3rfwOU
P3jGdSuOuVRRDYDl2LMH175xxCUr670XF54J0P7y149r/ptL651Vcz68GqBF
vx57dfEBlyLqQa2C9GLs7kNb9ri0wz2R/0WHIP2U06/hwV3yvLwgzR+/d0C5
vS4l+HJWrSANW1rv8g87XHpqd9GjpTye1fVb2JW2uZhXK0h//977/R0/uVSS
uGPR1z2DpD7z8o8ubVnS/fyyHkFa9PWJd6JbXDq6e/6lnqOClLf47VOz17v0
ZNPQvW2nBemuKpsamiy/trjGkPkfBbH+G1y69fsqRW/xfKrlf2ijS+XUv4VB
Up/56zqXBiz5Y+jSpTy+9lMvVP7BJZ6lOs+tDNLhBZm/P7fJpY8v8ULx+qjl
eYLf/wWrzekdvN5KcTa79ENt1qQ/g3SKp/XjrS6lTRw+pDHLH/7CisDf59bk
kf4XpDGzE+u9PD/TvnhtUq1LQdo+8liLApYf5T9Vm4QwD4ddmpG+7MqYm0JU
rD70KK93yydfWtY4RM1HHzc//8PFvBghivOy3HbCpc+JF65liG5SCnTapdv6
1C4NZ4Qo58LrP0855dLQnXXOxkpCeN85/t60+0c+5g9R6Rz/xgjrT5uPB+4f
ws/7pjX/D9YXc9Cbj0z3hqBfl1xiLQ7dy8/bx2rW/opLrO2/PtY2RK03999+
hK/f23bgg6fjIWq08o6UGOvrlu2sEHeEqNZ03wef/OfiOVaIhk9pUNFl/V0V
Tu/8eN8Q/fPevUv+qJIgZRYtWNbzWZ3toensox0Hh4i1qbQ+y2/F3/3o47Eh
rAPbz+83NV136KkQ6Qlm+9LfNSdEahnr1U1Q5WdebTN+RYg+KmZFqpWgz7aW
21/+mDyPr58wP282+niIfn/unY3zGifo5PGV4fQ9IegF+4vx//b7+/dfQ/AL
zRM04xXjuq7nQqQ+9z6+/5aeL68+fzFEN9/X9a+JLPc92aN1cdUw/bb2jS9e
Y/t1lAF5wjSk8Q0H8ng9Un588K4qrcI0YPKfT5SwvSl1Hdg8TG8oNeP1/oo/
384Mk8HT8hzb34Y7WWPzwpiv/S4NLnz6M0oL0xQexvOsX3o8hWHM42cu8ahy
LmSFaevknlfbLHap/IpKdW7KD2P8/3OJtWr1C3y9m1Lsj1x6/Ln8LrOyw9RM
fcA8l9gLLX7cGyb15+x0lz5ox54jI0yxM3033DnGpbtH3N7sZiNMFUZWZ1V0
KXXhwwMmdw3T/6b2G9t3uNjbrWEqmJbd4NVhLjVgs57RJ0wTlFsb6cJfvsPz
M/Otb1L4elApytYw9Juv/8evXXg6TJXUh/Hz5nx3a/DFM2Fir/dHRb6u7fSf
MI0q8fdaztd/Ybc4t7xBoYur75nHz1NuMe1KGHY0TPxFNYM+4T97HmZ7UBNT
waBL7PaHDRX74+tf/saKNMQl1vYP0q83aN2Ir95txNffZ7UcWs+Afj3k0tkY
r3yWQT8r8x/kUrsOD/9T6xaDnuFpnc3ypnmbt7tRA3FigIt1MAxS6vbZQBf6
lW0Qj75Tjf4u1fzKMy27pUH7BrCj5/snszU/1Myg9d5vFrXi60pdNjU04G/4
ul6HxgbNYffxDT9vLU9PrLZB7J37nuT7J1Y+fXNHlrvMqtY+s5+M9+8wsRf4
5Ps+Lk3/JmXhwxfDxE64+lKWA8owrjPo7I9d+9Tu6VLDiuyheD6HKgW9Q9az
ukE3qgDpujSLl20hX9fzehv7s1ELPu3T3CDlTos6X/MPBvxie5ey59bd0raj
QZ/1YU/fyaU12zgwWAZ1fyG049t2Lvy+Lc/n+3U8vofX63tegNYu1VGOrJ/M
X5GL+0YY8O+Gi7g20KD6yrBZLlUT18ugIuUo+P4RB6bfOPNOA/6YZT0vcYM6
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
OT/aH/1oAw8+L+vP1/U4h4t+8HXlnm4anAE/sMlG/Lk3A7zqRpuU+32nZwbe
y7KGT54M8ISbZb0bZkDPttroG6jB86sM6kdZ3yoZVGPK3GdN/r1Kg284kA6e
8HsbuGpxOniu1TaptPfUmHTYxQqbKq0cWfmGrungMZfZ4C2apyOv+txGfn0q
DfzIchv+cGsa4vaXNtbh6zTgOH4+8G4a6sb8fp1HzklDXr/eph4KkL+dhjoZ
y7o+82Ya/P0am5R7WvBaGvSf3wd8nIa/C2zw0/fx+1Xgm2tTpnrRoDTw9rPk
ex9OQ5yeaZNS210PpaH+w7Kuj5Smob75oY06c7c0+K0PbODv29KQr71nIy+J
p6Gf4d3k73Wd/x2b6qtCmJ2GegvL53esdK9vnwb7ecsmNY0to2mIK6/a4BHT
0kjRloMm26hP/pNKHVXjy8s2ePetqcARLGtc9Xkq8qBJMt6FqfQHa8GQqdf8
ayri0FRZ39mpwKn8e20eo1LBD0y0adBndw5Y0DcVPO9LNuqi3VIx/nE2KRqi
etukrO08mEp/NeeRjreBMzypwmvbqKu3SkUePVHWJzsV8Yuf/+x/H9+z9uZU
SlcFOpbr//TZhmPlU6HHYyU+nU8hFbbuesFGPedoCvi+52xSNGjdLSngCZ63
ScHzMd+mII7x/bp/Y3lS1nzo0hR8B9+v84R5KaTKzMcet4Hn3krB+o2wwYO+
mIJ8d4iNvoxhKXSF3X7XwTbwwuAUaqmAy0AZf58U1CXutUmVLTISKcDD/W1K
jHx9/MXiFMxPP4mfRgrs/U4bdcXb5fs62LCjaSngrYpsWn/7vFHGphTE/ZCN
OPFXCnjWfLaHXjvzdxWlAldl2lj3sanwk2k2qTJ/4aJU6F+66O9Smf+WNvLy
Jan0HKdRT2cLfliWirp/rqznplTk1Sz/FmDkeCAVdsX3o/8jFfk7P+8eVbA5
kgo82cKmxa3YUe1LJdX+NY3H8yGrz841qfBvqTb4Z5Z1PSaF47Wnw8u//JBK
itbq1dRGnD+VSipLnVBf8EWvNPABdWzhJdPxt7ZNM9mse/dNx/fXFP85KV3q
mzb6atang9+73gZvvzOdlHmtqSb2tzsdeUJ1G/1Zm9KBX2rY6E9Ylw7ekp+v
cQw/T4+zVvI68kwbvPPqdNRb+LrOC5amg3dmWfvF+enIu/l+HWfmpZNCRRdv
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
B5ZA7JE=
    "], CompressedData["
1:eJxFVA1QVFUU3ogKxIQmxwUJBHa59yIK4SiBJh4pGSQFFxyegGDssmE0ioXY
pCsopZa/JAwqmhCohL+ZIYIBoiFTSBBS/ARCQASDIGZoIqjnvrW9b+bNm2/O
ue985/vOuc7axFC9mUKhWI4v/87eUgxpRILG7F6HAgsGOafONK9CnP3xkTyV
HQOtzQrf75kEzcP/BkW8x2DJiQkBrm4SDA1c8VUlMPghK91643QJNoQ4TklY
w6D+QsRIiYcElb6qoE06BhWbHXziX5cgyt+vr2WJwJvPXtSm+jLgv0vG/Bmc
AGUQGTevI2SmBDYbvU/5KRlMXnC9rWgG8rGwPxpjyWD63P01qYgV8sNAl9oy
/xPEzVuTAjLvU3ho3V98zl2CpNVfDho6qCne0WmVUZhHYfl69YEniK3ULGX3
IQpl3ZMdfsJ6dQ/Cuo8fpjAnpnTxROSjG4r09/uGAgl7IX8/4oSl9/aGNVKI
i24LeB75f+exNv+5Ngq8jRYvCTC6Xt1EQdNqb4idJUH047dGB2so1NhUl17C
uMv4/eROA4V+4mVxGs8rA5eN2SZR2Hd1hK30lIy81gm+/+efGV25pgr1deKE
UijYda1QFqP+hy5z4SmUVypJGOKRoIjtPhsoyH5iPm+v5ANxnrcxN5YCxfKv
If6ICxUi4p1HXjlethD59PwzrQH16/aeeiUKKPw868fzHth/coateXiw4Otd
Oy/4Vw0F7de/z76D/cS//X7i8CLU36v3rCtiOc9a5JfnTPVsN6fGL/Y3ZFgw
J2aUgC0XGOt3Vx+8nDVMTPxl33sITOHCI5+TdxuWausJxF676a5Hv3hZnyqB
I0dKWneWERN/Kxwrs1ICtTfwwfm192xXv1hJjH67SiBFna+4XU6gvegzQ71K
gltmljunXSPG+UFsiePmVkOAWVsVncB87lZTA4Gc2pN1v+F+/L2bDb58S+CF
d3U3ogcI2JmHT5qJOHPHtsibY8ToM8V4Wlf1Qftn84TxXeP6Bz3OFM5l6j/X
uQosz4FagsO4jn2MQu4X3/7Zj/FLjtsGND4U3kBbnBBPCsGTgTiPuC57kK9c
N1Rgec/iBJb54TxMaMpfN99FgvTc/7x611KjPk5iHvNVJWM7EPu/+1e9y6Zn
8+2M89eQuOqlvRS83ywLzUJ8Vck7EecViVvNq+pE/MCT9JRHrRQ+1Sz+agvW
cyzoC/TAffwF5QrH/hrd9XZdzRTc+IIgRrfRCBEvPBYMr1ZS4DZmI5Z1KKIm
/yZmFKZpCoWefF37cJ/lvUe98xZdvDeeSeHD07v+WI3+38brKgj3u60JLwrE
fMy6CgQ+eqfg+jvF1OQX3jKBFe3i/7IejyhYPsyNv0DE/fMU8kExlA==
    "], CompressedData["
1:eJxFlAlQTHEcxzc5cxTWMZNtt9B6v6daIR3Ury2VI02O/oZhkcaZJkwMbYRQ
msQ4x+QYQmSxjihHUdKmpjJUoqEYUxFLjkT83r4d+2bevPm89z++v+/v+3+O
S2JmRnWRSCSBdAtPzZHpg1I9GFbFaHqUewFypXbFueMY2m3yuOg7AfBLVegS
O+LGzGOFChWg3nXNaSviu41SWclIQNX0szZB4xl2jejnopcBRrbOU/t6MlQv
elfh1MGh+wYXRznx5OC17bZNHN7cEV9xjcZ7/nyw9MJrDtkHtzzlWIYNc4fk
VBLbH1/IlaoYVjrVtSc0c7jT83lRNPHp4bd/72rjcGPvEaMSiKW64DebpICy
knd+Z9wYRkdodTedAAXZjGc4rbnruP4egK3xfuMXAsPQr2mz1gcCZo4OGNZC
bNeUc9l6GaD3/tItITT/Q/gth6Q95vnEgrxF18310n7f6qoT1z0C3NE37PKB
MQwrAms+txkAewmCSX9crH3f12Ug6id/HK+sXb6P+DwzuBdSvUUKelEJOKfg
/JkZ5Ie8bXWEthXwnuooDPViWKi+tKLeCPhg5zlm8LZwyH2tzNOH4all15rX
fbPw9cdx9078AtFPml9b/mNWYzce33dkGauIDbNpo3485r5I+RNF46OLOvWb
B/B4p9sAqZ8vQ2F73WAeH/eYdGyOH8OmENe/jjIeJcKFDLeHT8nY6syL/fVn
eEjfJzab5zEl7e0XuZqhvzHyyQJiU/8CGGrJ5lyOx4z+mXcLiMkNl3QFL+5L
4/OUtr1vdOdx8cOnfBStVzxtQrK/xMLKMT2zh1E9HmU+MyqJpSaDAQ9G7Y5c
EMgw+1KNJu4TiD5PZqiCrIEVbwGP5h1Ktw1iqBGC+wLEHNJ3U93VgCtiPieV
0PxaTVyYw3Oz/2hhHS0bRn7oMz6de1QKuK2h+Ege+S+kNWcvIKW4rp04f77C
37jdnDfyc64XdSABkFK68s5EhgrBEK2535OofrdXI7onAhZepQBRPc/er+S/
Hwakal4GBVjYlG/SN3um8mRyOmDq7VW92okTnSkJG8x6ietjyXl3wNBBqVOb
Sb9pXSsQdVH/DA8pMJ2cqJ/qkSe1hN8ibnImY0nfr48t+V7W8D8Pe6mNVbYg
Poltljut3uhtYTqNknq1JW8hdNp0wYBU3VVX8uOrnP4YxP8AsADOrw==
    "], CompressedData["
1:eJxTTMoPSmViYGDQBWIQvfCayXsL23CH579Xfrz0VsMBxt+kl7eY8Y6Ggztz
BbeKTbjDV6/INotrGg7F14U+OVoj+JIsYXy6VuEO2u1iN89d13BwvfHhi5dl
uMP+WlmL9CcaDimxd9yYLcId3FRLmWa90HD49fb1AUtzBH/dtqT6m6bhDmdi
vU+w30Xwaz5tCMi+peHwdp6NzhWzcIedvWwfxE5oOIRHb9z/BshXmf5/Qt1u
DQcNfu6ty4DqmTm75JPXaTikdSTH3tELdxB4uX0983INh8krmwI9dcMdEkOC
1Bes1ID4SyfcoWvDw5dTNyH4t9b8isk9CrVPC6peU9Ph4KmFrtu0wx0ecgNN
MtR04GEC+lQXwZcKvCVdA+SvPn817I2+psO7GnvTOD2o/1U0HTwC/kgU64c7
PJgjuHSvoqbDYuWdf9oNwh3+AIPbV0nTwVzqQLSCYbjDjvXMz3s0NB3+OQND
CCh/LNekYbuDpkPY/NVrb+hD48dX0+GQuFowK9A9QMVveeM0HSJWmJ61Brq3
89K9B9zFmnD3/z797uThJk2Hc5JABwL9V92s77OsS9NBy2rS6XokvjWjbwsv
0PymYrcp39oQ9r0DRpMyUB7sD2D8gWL76Fmg+1K/P0kExq9sVIr1/fOaEHuA
8Q+MlXk2ZzQh5gD5++ZL6d89oglPDz7LuNxUp2o6lBVK8z4A8l3di37ydwLN
55tjvAiYvoCxsIe1SNPBbdvnv1eAfPtjd7a2xGg6NKodalsOTG+djglPLzhp
OpjZ7A2aBtRvke6SmW+g6aD5lnefAZDvK9rj9QoY3gDThTNX
    "]}]]], "Output",
 CellChangeTimes->{3.588102242238124*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", "+", " ", "c"}], ",", " ", "x"}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", 
          RowBox[{"Dashing", "[", ".02", "]"}]}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", " ", ".5"}], "}"}], ",", " ", 
     RowBox[{"-", "2"}], ",", " ", ".5"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.5881139580172443`*^9, 3.588114093794636*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = -0.16999999999999993`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`c$$], 0.5}, -2, 0.5}}, Typeset`size$$ = {
    475., {339., 352.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$12748$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$12748$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`x^2 + $CellContext`c$$, $CellContext`x}, \
{$CellContext`x, -2, 2}, AspectRatio -> Automatic, PlotStyle -> {Red, {Blue, 
           Dashing[0.02]}}], 
      "Specifications" :> {{{$CellContext`c$$, 0.5}, -2, 0.5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{549., {418., 427.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5881141071885505`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "x"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "1", ",", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.588763488335107*^9, 3.5887636086898828`*^9}, {
   3.588763639434307*^9, 3.5887637025562415`*^9}, 3.588763789777188*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 5.47, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 10}}, Typeset`size$$ = {576., {166., 180.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$7276$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$7276$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`a$$ $CellContext`x], {$CellContext`x, 0, 10}], 
      "Specifications" :> {{$CellContext`a$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{650., {245., 254.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.588763708746355*^9, 3.5887637929572983`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"add", " ", "a", " ", "purple", " ", "frame"}]], "Input",
 CellChangeTimes->{{3.5887638451159477`*^9, 3.588763849474847*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5894632305612383`*^9, 3.5894632403257256`*^9}}],

Cell[CellGroupData[{

Cell["", "Title"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "3"}], " ", "+", " ", 
     RowBox[{"5", " ", 
      RowBox[{"x", "^", "2"}]}], " ", "+", 
     RowBox[{"40", " ", "x"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], " ", "+", " ", 
     RowBox[{"23", " ", "x"}], " ", "+", " ", "19"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589463248525172*^9, 3.589463340110016*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{"40", "+", 
     RowBox[{"5", " ", "x"}], "+", 
     SuperscriptBox["x", "2"]}], ")"}]}], 
  RowBox[{"19", "+", 
   RowBox[{"23", " ", "x"}], "+", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{3.5894632956654897`*^9, 3.5894633430609765`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{"40", "+", 
      RowBox[{"5", " ", "x"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], 
   RowBox[{"19", "+", 
    RowBox[{"23", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{"40", "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"5", "+", "x"}], ")"}]}]}], ")"}]}], 
  RowBox[{"19", "+", 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{"23", "+", "x"}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.58946335063701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"40", "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", "x"}], ")"}]}]}], ")"}]}], 
    RowBox[{"19", "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"23", "+", "x"}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "409.9232736336677`"}], ",", "366.6222347695857`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
R2umEw==
     "]], 
    LineBox[{{-22.251057024003345`, -1129.912779827002}, {-22.18955535819831, 
     1033.7228754841067`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-409.9232736336677, 366.6222347695857}, {-1129.912779827002, 
   1033.7228754841067`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.589463358958538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"40", "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", "x"}], ")"}]}]}], ")"}]}], 
    RowBox[{"19", "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"23", "+", "x"}], ")"}]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "409.9232736336677`"}], ",", "366.6222347695857`"}], "}"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], ",", 
      RowBox[{"AbsoluteThickness", "[", "1.51`", "]"}], ",", "DotDashed"}], 
     "]"}]}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], AbsoluteThickness[1.51], 
    Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1:eJwdlHk81Ikbx505c6bTklYhR2vJHTNmjERyfGfGuO8j983wK9ZNIXRpErbI
FR2uSB9alvCrFNrCphSRtoRKq37z+v3xvJ7X+5/P6/k8l5J3uIMfHw8PTzk3
/p87l2t6yxLRZ9hl2P6QDXVzG+XV0kRsitHJejfERsufv5ftOZuIC94nRhUH
2BgccSjOKkiErNhCTGY3G6tzTclWKYm46hHQ5XiDjcNyoUeGvRJRUdOR/L6Y
jbXQ18tPlBMhdX2yRpnJBl1xzGymNgFlO23/Lp5MRGOfNO14ZTzKJB5+ER9L
wFurxtpLdXHYInZKS+pFPM7H8Q6cbY/FPLv+xLf3cXg/28AUvxkDmwzP2aK3
sfh5fyd1Q1c07khRctpXYvBvn3Jl8q0oZO2k2V1YjIYNn3n7/cZIDFp47Uua
j0Lytm6tss4IDA3+wV75EomKeV21iaBwvLNosjzyKQKiznXXM/8TCmNPxpOr
38PhJZ/X8KI0GLfnal8t7wwDT6Birk5BEE4GaUcV7QiBR3D8z6eqAsDqn65c
MDwKoS9pF2dL/JBsc/5CqHYgOONfcxdP+KAn5zBRreuPj2E6+79Xe8Fs+tqn
BVdf/KRISZHU9UBsYeR4o5c3nj6okjRwd0Hi3yG7OPmeUC6O9nTQYyJi4ewu
d5IbrP+VOTeo5Ii7NVMGmpUsXDs7PnJKxhGd4sbKuqdZkNLhbHTid0RB/n4V
UjYLY0G702ZmHFApdL09IIwFz3H9sPVqB6ibqIh+NmIh5oYrdZ+WAwZ8Cskq
o04oC6z6UGRkj50CBZ+CJJzAIxCszlK3B6jLeSZ8TvC5tM9fUd4e2w/G7d2y
yoTqWNvzunU7XH8z+nVmkomblMG+P2CHuEHN7DcNTPQrfOCs0uwwsujPW3GE
iZma6KJbVbZ4pZESrXCBAVM14TNNGba4HlifSi9g4NxVzvl6X1uU59Y0c9IY
sK7uLb+8yxY96b1TriEM3Li8pbGk7DAkW4TfNJgykHKpYzDmjA3uuU5PzL2h
45mC3YOIWBsILB55bTtBh27ZzEgIYYO8rxk5g4/omOVsfOYrw+XlI7dE79Bh
W+oxR+Rbw5Zz/FVjCR3yp/kF92ceQnW1QoqiFR1xm84Ja/sdQlcCEatHouNh
sYa4JvUQPIq9o8L06Ugrosvu5juES6EuH6h76JgvqFaSO2aFQocvV68I0kGV
NNkt7WYFzqk256l1AmX5D1U3mlhhu3LpPbNVAvYnv+4TXDuIDtWtlNRZAm25
1qYrsQcxeJK+W2mIgIzoC/JH4iB2va9I7O4lEJITY7GocxANbhIDJXcJKGZf
tHn90RLZEmfZz24SSBD61W76oSV87kjK2V0jMJLZ5zjZaAk9Ht6fflwlkJnx
j/NoqCVsbEarpC4ReCGQ7v7IxhIGJmJLcaUEjNK3eg+rW+JAQaSZwhkCJfwN
fgOilgjdKlQjXERg8TdyUO9bGnKkjT0N8gnQ+MZCuvtpeBur39iYS6A89WjE
nWoaRsPIaxFZBNZ4fkS3Z9LgnK/dfSydAJFSHN/sR0Nyl2DF81QCe42X97yk
0VDxy+1tjccJ8KwSYxKqNET0vDUa+g+BsabmDGMRGspuLEbuTyZQF7x5f+C8
BUavtFkusgmk7ImfKRm0wL8OPt6riQQY0+PF3fUWYOs9yXTksgbHgPL+pAU6
EtJLhbjMxzy/tD3cAnyBvlfkuPxUeq3C0s4CdQovH6dw+dqQs32MtgVitOQS
bbj66VkdPBUyFnAOl5FOTiLAMpdvGv5ExTX3YIostz6t9WSPtSdUOD6aeC3H
rV+gbVJCpYUKP3ntH1lcf8+iTLscz1IxbO58P5Trv0nzUmhKAhWXNQfaB7n9
yZz7Id/AouI5WyipKo+A6++eQ38ZUSHLX7rGV0jgV/fupA3yXP2pXwPflBAQ
2rZLXWedAu9gI2MGd14Tj3975jFFwfnGVn2ncgI38l/lnLhLwWGHiuilKgLZ
VlTD9nIKWlMrXNW5++AucGXudSoFHiZOXSItBHTvCp6T8aGg+b+qAyVdBETZ
/pZmVAr6R8u3PfmTux+6f64G76YgaTgbDx4RaP5HpercBgqElZqsCycI5NZm
03tnzXFsPvuBwhwBT7+3Akv95siQqf2YvkxA/Hmtj3WeOXyC+O7xStHx8rSY
bEKIOdwee/PsU6SjzS6k5/JhcwSZJsp57aMjX2w48pGWOcTSE8yvcO/Np09T
6bukOfoOWV4XcaTDIDX/4d6PZBi7reVc9KdDwuSf48wRMm5uTBGJTKLj9vWm
qaYSMubELy79VENHYYh0/mQsGRo8M1oKPXT4q0QdEGWSYc+n+LWO+x9MXo68
0zMgI9Ka1DD1hQ7pizocn21kCB0VyXiwmYE3zBLrwjUSqDOd/ef1GOiUWVnr
fE7CCO+MoIsTA4HZLazNZSTM3a6Ot6jk/jPKFhHKcRL009fjWu8zsOl7fFu4
Jwl6YlrXbqwwMN/2NIBDJuFwcaqT789M3I023DKwiwS2aND3dUcmTmuV9q3w
k3DmQ9G35iwmRkdWFqj3zTD516Zt/V1MaHQl1Hy2NYNRVz5FxMAJT3WMhO2l
zbBH9c74I7YT0mq++dc+NoWj1ky5Wo8TtBTv9PKfMUXOC7VjMRIsPCs5puzm
ZIriSkmRXZ4sZIqS0lq2m6KgiO3S2MqCdgrvS8nJA+CJu7G3Rs4Z2cHpl3q8
DqB4c2FT1KwzTondfGe/+wCcrNNH3Z1dUFo3bTg9Z4IU//hptzEXXLaWyoqo
N8EwP19HsKsrGhZMn/wIN0F4jJ5M7aIrWvJClQp0TFA6qHInIM8NUOeEKXw2
xqTexJSavjsGBu93NNw2htCquWfrkjtGgr8KHzhmjHlaZZQKPPBcTJUxRDbG
zmKm2JqdJ2bqGL+7CBojz8mDL2fYE4vWGR/m+42w/6HihyymF1YXbh5gnzAC
T7Nnu+JHL/zIe5krYmcElZ2fo1c53hDWkH56TtYIk7GKq4S7D2SGzHarjhui
+15Rv7OhL3aEhEW1lhpieYMyy1LHD8riF+/S3A1REtlh98rBH1r1g+JjSoag
bu1/sKMiAPo2ayy/1wboZZ78bVEtCKR3qtXLVw3wfROx/Hj9KKxOMJfTQgxw
8v70rLxuKBw0MsmyvxjA8MLQm/H34XAZupVf+UkfO1L5jRabIuEb8uq5dqs+
JpY354l+iEaouIxaN1sf65qpkWnf4hBXT4qzM9WHgXaK1V1GElJswu/9zauP
BVnOe6poKnLeXZQK79VD/Tb9VcGlTLwO4MGXPD00WXQ3VlWfwv8AqSYZGA==

     "]], LineBox[CompressedData["
1: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
R2umEw==
     "]], 
    LineBox[{{-22.251057024003345`, -1129.912779827002}, {-22.18955535819831, 
     1033.7228754841067`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-409.9232736336677, 366.6222347695857}, {-1129.912779827002, 
   1033.7228754841067`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.58946339170634*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{"40", "+", 
     RowBox[{"5", " ", "x"}], "+", 
     SuperscriptBox["x", "2"]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.589463411875738*^9, 3.589463486691441*^9}, {
  3.5894635414298058`*^9, 3.589463544739003*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.5894635503907585`*^9, 3.589463551449462*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "x", "]"}]}], "+", 
        RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.589463552583216*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]}], "}"}], "}"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.5894635624567747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", " ", "xr"}], " ", "+", " ", 
      RowBox[{"0.9", " ", "xq"}], " ", "+", " ", 
      RowBox[{"0.1", " ", "xt"}], " ", "+", " ", 
      RowBox[{"0.6", " ", "xl"}], " ", "+", " ", 
      RowBox[{"0.4", " ", "xb"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", 
       "10"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[LessEqual]", "  ", "100"}], "&&",
       " ", 
      RowBox[{
       RowBox[{
        RowBox[{"53", " ", "xr"}], " ", "+", " ", 
        RowBox[{"40", " ", "xq"}], " ", "+", " ", 
        RowBox[{"12", " ", "xt"}], " ", "+", " ", 
        RowBox[{"53", " ", "xl"}], " ", "+", " ", 
        RowBox[{"6", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", "100"}],
       " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"53", " ", "xr"}], " ", "+", " ", 
        RowBox[{"40", " ", "xq"}], " ", "+", " ", 
        RowBox[{"12", " ", "xt"}], " ", "+", " ", 
        RowBox[{"53", " ", "xl"}], " ", "+", " ", 
        RowBox[{"6", " ", "xb"}]}], " ", "\[LessEqual]", "  ", "1000"}], " ", 
      "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"0.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"3.6", " ", "xq"}], " ", "+", " ", 
        RowBox[{"2", " ", "xt"}], " ", "+", " ", 
        RowBox[{"0.9", " ", "xl"}], " ", "+", " ", 
        RowBox[{"0.3", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", "0"}],
       " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"0.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"3.6", " ", "xq"}], " ", "+", " ", 
        RowBox[{"2", " ", "xt"}], " ", "+", " ", 
        RowBox[{"0.9", " ", "xl"}], " ", "+", " ", 
        RowBox[{"0.3", " ", "xb"}]}], " ", "\[LessEqual]", " ", "100"}], " ", 
      "&&", " ", 
      RowBox[{"xr", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xq", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xt", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xl", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xb", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "xr", ",", " ", "xq", ",", " ", "xt", ",", " ", "xl", ",", " ", "xb"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5902317632223234`*^9, 3.5902318301739883`*^9}, {
  3.590231864056594*^9, 3.5902319020899677`*^9}, {3.590231939107662*^9, 
  3.5902320834619646`*^9}, {3.590232765693104*^9, 3.59023285346266*^9}, {
  3.5902328838719444`*^9, 3.590232920482371*^9}, {3.5902330219770803`*^9, 
  3.590233026239925*^9}, {3.5902330983420258`*^9, 3.5902331377543178`*^9}, {
  3.590233173661275*^9, 3.5902331823790884`*^9}, {3.5902345441261415`*^9, 
  3.5902345550334187`*^9}, {3.5902503917297735`*^9, 3.5902506446384964`*^9}, {
  3.590250676499752*^9, 3.5902507443500195`*^9}, {3.590250789640232*^9, 
  3.5902507972483077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8333333333333335`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xq", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xt", "\[Rule]", "8.333333333333334`"}], ",", 
     RowBox[{"xl", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5902321238178887`*^9, {3.5902329515260787`*^9, 3.590232965903672*^9}, 
   3.5902330277289176`*^9, 3.5902331877056427`*^9, 3.5902350153815317`*^9, 
   3.5902508376522684`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", " ", "xr"}], " ", "+", " ", 
      RowBox[{"0.9", " ", "xq"}], " ", "+", " ", 
      RowBox[{"0.1", " ", "xt"}], " ", "+", " ", 
      RowBox[{"0.6", " ", "xl"}], " ", "+", " ", 
      RowBox[{"0.4", " ", "xb"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", 
       "10"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", ".3"}], " ", "xr"}], " ", "+", " ", 
        RowBox[{"0.36", " ", "xq"}], " ", "-", 
        RowBox[{"0.06", " ", "xt"}], " ", "-", " ", 
        RowBox[{"0.36", " ", "xl"}], " ", "-", " ", 
        RowBox[{"0.24", " ", "xb"}]}], " ", "\[GreaterEqual]", " ", "0"}], 
      " ", "&&", " ", 
      RowBox[{"xr", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xq", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xt", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xl", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xb", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "xr", ",", " ", "xq", ",", " ", "xt", ",", " ", "xl", ",", " ", "xb"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5902333890079374`*^9, 3.590233457488336*^9}, {
  3.5902335492385445`*^9, 3.590233560731213*^9}, {3.590233829195314*^9, 
  3.590233857711338*^9}, {3.5902339122977533`*^9, 3.590234059146723*^9}, {
  3.5902343354367867`*^9, 3.5902343554001045`*^9}, {3.590234449493009*^9, 
  3.5902344710513916`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.576923076923077`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xq", "\[Rule]", "0.3846153846153846`"}], ",", 
     RowBox[{"xt", "\[Rule]", "2.307692307692308`"}], ",", 
     RowBox[{"xl", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.590233202635603*^9, 3.5902334670757313`*^9, 3.590233565978714*^9, 
   3.590233862242361*^9, 3.5902339375996337`*^9, 3.5902340632734737`*^9, {
   3.5902343510161796`*^9, 3.5902343565878973`*^9}, 3.590234483908969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.6", " ", "0.9"}]], "Input",
 CellChangeTimes->{{3.590233506995366*^9, 3.5902335412131915`*^9}}],

Cell[BoxData["0.54`"], "Output",
 CellChangeTimes->{{3.5902335214520073`*^9, 3.5902335417635584`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4.4"}], " ", "xr"}], " ", "-", " ", 
      RowBox[{"8", " ", "xq"}], " ", "-", " ", 
      RowBox[{"3", " ", "xt"}], " ", "-", " ", 
      RowBox[{"12", " ", "xl"}], " ", "-", " ", 
      RowBox[{"1.9", " ", "xb"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.5"}], " ", "xr"}], " ", "-", " ", 
        RowBox[{"0.9", " ", "xq"}], " ", "-", " ", 
        RowBox[{"0.1", " ", "xt"}], " ", "-", " ", 
        RowBox[{"0.6", " ", "xl"}], " ", "-", " ", 
        RowBox[{"0.4", " ", "xb"}], " ", "+", "2"}], " ", "\[GreaterEqual]", 
       "  ", "0"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterEqual]", " ", "10"}], 
      " ", "&&", " ", 
      RowBox[{
       RowBox[{"100", " ", "-", 
        RowBox[{"4.4", " ", "xr"}], " ", "-", " ", 
        RowBox[{"8", " ", "xq"}], " ", "-", " ", 
        RowBox[{"3", " ", "xt"}], " ", "-", " ", 
        RowBox[{"12", " ", "xl"}], " ", "-", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterEqual]", " ", "0"}], " ",
       "&&", " ", 
      RowBox[{"xr", " ", "\[GreaterEqual]", " ", "0"}], "&&", " ", 
      RowBox[{"xq", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xt", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xl", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xb", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "xr", ",", " ", "xq", ",", " ", "xt", ",", " ", "xl", ",", " ", "xb"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590235041472938*^9, 3.590235135948966*^9}, {
   3.590235181962666*^9, 3.590235285880989*^9}, {3.5902356191593323`*^9, 
   3.5902357032694445`*^9}, {3.5902357986160536`*^9, 3.5902358065503464`*^9}, 
   3.5902358384736433`*^9, {3.590235875218157*^9, 3.5902358753752613`*^9}, {
   3.5902359621641607`*^9, 3.5902360217579184`*^9}, {3.5902360827526097`*^9, 
   3.5902361070728345`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "59.999999999999986`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xq", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xt", "\[Rule]", "19.999999999999996`"}], ",", 
     RowBox[{"xl", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5902351958769464`*^9, 3.590235231849945*^9, 3.5902353023729925`*^9, 
   3.59023539371493*^9, 3.5902357079515657`*^9, {3.590235801712118*^9, 
   3.590235807617058*^9}, {3.590235866851575*^9, 3.5902358787665243`*^9}, 
   3.5902360504820814`*^9, {3.590236086191904*^9, 3.5902361001051865`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"10.`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xq", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xt", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xl", "\[Rule]", "0.8333333333333334`"}], ",", 
      RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.`", ",", 
   RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
   RowBox[{"xq", "\[Rule]", "0.`"}], ",", 
   RowBox[{"xt", "\[Rule]", "0.`"}], ",", 
   RowBox[{"xl", "\[Rule]", "0.8333333333333334`"}], ",", 
   RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.590235815190111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4.4"}], " ", "xr"}], " ", "-", " ", 
      RowBox[{"8", " ", "xq"}], " ", "-", " ", 
      RowBox[{"3", " ", "xt"}], " ", "-", " ", 
      RowBox[{"12", " ", "xl"}], " ", "-", " ", 
      RowBox[{"1.9", " ", "xb"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.5"}], " ", "xr"}], " ", "-", " ", 
        RowBox[{"0.9", " ", "xq"}], " ", "-", " ", 
        RowBox[{"0.1", " ", "xt"}], " ", "-", " ", 
        RowBox[{"0.6", " ", "xl"}], " ", "-", " ", 
        RowBox[{"0.4", " ", "xb"}], " ", "+", "2"}], " ", "\[GreaterEqual]", 
       "  ", "0"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterEqual]", " ", "10"}], 
      " ", "&&", " ", 
      RowBox[{
       RowBox[{"10000", " ", "-", 
        RowBox[{"4.4", " ", "xr"}], " ", "-", " ", 
        RowBox[{"8", " ", "xq"}], " ", "-", " ", 
        RowBox[{"3", " ", "xt"}], " ", "-", " ", 
        RowBox[{"12", " ", "xl"}], " ", "-", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterEqual]", " ", "0"}], " ",
       "&&", " ", 
      RowBox[{"xr", " ", "\[GreaterEqual]", " ", "0"}], "&&", " ", 
      RowBox[{"xq", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xt", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xl", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xb", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "xr", ",", " ", "xq", ",", " ", "xt", ",", " ", "xl", ",", " ", "xb"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590236123370708*^9, 3.5902361237539635`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "59.999999999999986`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xq", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xt", "\[Rule]", "19.999999999999996`"}], ",", 
     RowBox[{"xl", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5902361271132035`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", " ", "xr"}], " ", "+", " ", 
      RowBox[{"0.9", " ", "xq"}], " ", "+", " ", 
      RowBox[{"0.1", " ", "xt"}], " ", "+", " ", 
      RowBox[{"0.6", " ", "xl"}], " ", "+", " ", 
      RowBox[{"0.4", " ", "xb"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", 
       "10"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"4.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"8", " ", "xq"}], " ", "+", " ", 
        RowBox[{"3", " ", "xt"}], " ", "+", " ", 
        RowBox[{"12", " ", "xl"}], " ", "+", " ", 
        RowBox[{"1.9", " ", "xb"}]}], " ", "\[LessEqual]", "  ", "100"}], "&&",
       " ", 
      RowBox[{
       RowBox[{
        RowBox[{"53", " ", "xr"}], " ", "+", " ", 
        RowBox[{"40", " ", "xq"}], " ", "+", " ", 
        RowBox[{"12", " ", "xt"}], " ", "+", " ", 
        RowBox[{"53", " ", "xl"}], " ", "+", " ", 
        RowBox[{"6", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", "100"}],
       " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"53", " ", "xr"}], " ", "+", " ", 
        RowBox[{"40", " ", "xq"}], " ", "+", " ", 
        RowBox[{"12", " ", "xt"}], " ", "+", " ", 
        RowBox[{"53", " ", "xl"}], " ", "+", " ", 
        RowBox[{"6", " ", "xb"}]}], " ", "\[LessEqual]", "  ", "1000"}], " ", 
      "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"0.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"3.6", " ", "xq"}], " ", "+", " ", 
        RowBox[{"2", " ", "xt"}], " ", "+", " ", 
        RowBox[{"0.9", " ", "xl"}], " ", "+", " ", 
        RowBox[{"0.3", " ", "xb"}]}], " ", "\[GreaterSlantEqual]", " ", "0"}],
       " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"0.4", " ", "xr"}], " ", "+", " ", 
        RowBox[{"3.6", " ", "xq"}], " ", "+", " ", 
        RowBox[{"2", " ", "xt"}], " ", "+", " ", 
        RowBox[{"0.9", " ", "xl"}], " ", "+", " ", 
        RowBox[{"0.3", " ", "xb"}]}], " ", "\[LessEqual]", " ", "100"}], " ", 
      "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", ".3"}], " ", "xr"}], " ", "+", " ", 
        RowBox[{"0.36", " ", "xq"}], " ", "-", 
        RowBox[{"0.06", " ", "xt"}], " ", "-", " ", 
        RowBox[{"0.36", " ", "xl"}], " ", "-", " ", 
        RowBox[{"0.24", " ", "xb"}]}], " ", "\[GreaterEqual]", " ", "0"}], "&&",
       " ", 
      RowBox[{"xr", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xq", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xt", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xl", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
      RowBox[{"xb", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "xr", ",", " ", "xq", ",", " ", "xt", ",", " ", "xl", ",", " ", "xb"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590250988574086*^9, 3.5902510028726254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.339285714285714`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xr", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xq", "\[Rule]", "0.8928571428571426`"}], ",", 
     RowBox[{"xt", "\[Rule]", "5.357142857142857`"}], ",", 
     RowBox[{"xl", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xb", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5902510059196606`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5894634013037167`*^9, 3.5894634037343287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"CountryData", "[", 
   RowBox[{"\"\<Spain\>\"", ",", " ", "\"\<Polygon\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5930361108944407`*^9, 3.5930361139605*^9}}],

Cell[BoxData[
 GraphicsBox[PolygonBox[{CompressedData["
1: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

    "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSL8lNGRjcwOD7knr2w66OwQ/bq7ZdscZofbP+uy
9hxxdth5f6HGhedMDpUv1Qw5gHygqkBPWWaHrztvdf096uzw5TDHw4vHmBxe
sZgImp1xdrhSyxA024LNYbIVo2/LW2eHmP5DXzXmsDvo5y1m3PPV2UHXWeb1
o22cDk4JTy8o/XZ2CAg+fe3XIg6He5PbW6M+OzssNYxyD73MAVEP1P/g2l2b
qws5Hbr/pn5/8tHZQdjzi1FXKqfDwRVL/BxeOzsIPlnQMvMbh4OT3Yuba15B
3S/D6ZA9q3zOosfODvz1vtdWsHM5tNZc2Bx519lB+94Jm0/HuRwmS7CE8T0F
msclWMBxldth2iaewjW3nR1KVKb/n1DH7XB5z2MR2YvODpNepIqc1uV2SK6/
aVt5wdmhqqD8Wp41t8MfieLrQqecHcLmr157I57Lwb3oJ//L/c4ODgbu/fdv
czpErDA9a73O2SGz51rg1RYOh62iv0+/W+jswPtXOGbNCnaHZ+tUnzQD5SvX
R8384M3mcOqw09pMIH8Pq5CI/TFWh2iQh/Y4O9ikLTD695fVwfXGhy9ewPh5
/MdXw6WB1WH+2VXnrx5zdtAHWSDK6uC27fPfKyecHf7NWhPIH8jiENA7PU/o
MMz9LA5bzX8cStnl7HCxpMzI4hSzwy9g9JbsdnYAANW67j4=
    "]}]]], "Output",
 CellChangeTimes->{3.5930361220579433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%58", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[PolygonBox[{CompressedData["
1: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

    "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSL8lNGRjcwOD7knr2w66OwQ/bq7ZdscZofbP+uy
9hxxdth5f6HGhedMDpUv1Qw5gHygqkBPWWaHrztvdf096uzw5TDHw4vHmBxe
sZgImp1xdrhSyxA024LNYbIVo2/LW2eHmP5DXzXmsDvo5y1m3PPV2UHXWeb1
o22cDk4JTy8o/XZ2CAg+fe3XIg6He5PbW6M+OzssNYxyD73MAVEP1P/g2l2b
qws5Hbr/pn5/8tHZQdjzi1FXKqfDwRVL/BxeOzsIPlnQMvMbh4OT3Yuba15B
3S/D6ZA9q3zOosfODvz1vtdWsHM5tNZc2Bx519lB+94Jm0/HuRwmS7CE8T0F
msclWMBxldth2iaewjW3nR1KVKb/n1DH7XB5z2MR2YvODpNepIqc1uV2SK6/
aVt5wdmhqqD8Wp41t8MfieLrQqecHcLmr157I57Lwb3oJ//L/c4ODgbu/fdv
czpErDA9a73O2SGz51rg1RYOh62iv0+/W+jswPtXOGbNCnaHZ+tUnzQD5SvX
R8384M3mcOqw09pMIH8Pq5CI/TFWh2iQh/Y4O9ikLTD695fVwfXGhy9ewPh5
/MdXw6WB1WH+2VXnrx5zdtAHWSDK6uC27fPfKyecHf7NWhPIH8jiENA7PU/o
MMz9LA5bzX8cStnl7HCxpMzI4hSzwy9g9JbsdnYAANW67j4=
    "]}],
  Frame->True,
  FrameStyle->GrayLevel[0.5]]], "Output",
 CellChangeTimes->{3.5930361329522676`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%59", ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.97`", ",", "0.93`", ",", "0.68`"}], "]"}]}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[PolygonBox[{CompressedData["
1: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

    "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQvSL8lNGRjcwOD7knr2w66OwQ/bq7ZdscZofbP+uy
9hxxdth5f6HGhedMDpUv1Qw5gHygqkBPWWaHrztvdf096uzw5TDHw4vHmBxe
sZgImp1xdrhSyxA024LNYbIVo2/LW2eHmP5DXzXmsDvo5y1m3PPV2UHXWeb1
o22cDk4JTy8o/XZ2CAg+fe3XIg6He5PbW6M+OzssNYxyD73MAVEP1P/g2l2b
qws5Hbr/pn5/8tHZQdjzi1FXKqfDwRVL/BxeOzsIPlnQMvMbh4OT3Yuba15B
3S/D6ZA9q3zOosfODvz1vtdWsHM5tNZc2Bx519lB+94Jm0/HuRwmS7CE8T0F
msclWMBxldth2iaewjW3nR1KVKb/n1DH7XB5z2MR2YvODpNepIqc1uV2SK6/
aVt5wdmhqqD8Wp41t8MfieLrQqecHcLmr157I57Lwb3oJ//L/c4ODgbu/fdv
czpErDA9a73O2SGz51rg1RYOh62iv0+/W+jswPtXOGbNCnaHZ+tUnzQD5SvX
R8384M3mcOqw09pMIH8Pq5CI/TFWh2iQh/Y4O9ikLTD695fVwfXGhy9ewPh5
/MdXw6WB1WH+2VXnrx5zdtAHWSDK6uC27fPfKyecHf7NWhPIH8jiENA7PU/o
MMz9LA5bzX8cStnl7HCxpMzI4hSzwy9g9JbsdnYAANW67j4=
    "]}],
  Background->RGBColor[0.97, 0.93, 0.68],
  Frame->True,
  FrameStyle->GrayLevel[0.5]]], "Output",
 CellChangeTimes->{3.5930361403102136`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DiscreteMath`Combinatorica`\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.601891654004238*^9, 3.6018917028539658`*^9}, {
  3.6018919230835023`*^9, 3.601891928122878*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"DiscreteMath`Combinatorica`\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018917050564394`*^9, 3.601891931056843*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "nocont"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Context \
\[NoBreak]\\!\\(\\\"DiscreteMath`Combinatorica`\\\"\\)\[NoBreak] was not \
created when Needs was evaluated. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Needs/nocont\\\", \
ButtonNote -> \\\"Needs::nocont\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018917050564394`*^9, 3.601891931108879*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "DiscreteMath`NewCombinatorica"}], "'"}]], "Input",
 CellChangeTimes->{{3.6018919365645323`*^9, 3.6018919529855347`*^9}, {
  3.601892491946601*^9, 3.601892492337861*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"DiscreteMath`NewCombinatorica\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.601891955169998*^9, 3.601892495200782*^9, 
  3.6018925450969877`*^9}],

Cell[BoxData[
 SuperscriptBox["$Failed", "\[Prime]",
  MultilineFunction->None]], "Output",
 CellChangeTimes->{3.6018919552400446`*^9, 3.6018924952027826`*^9, 
  3.601892545099991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DiscreteMath`NewCombinatorica'\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.601892550261447*^9, 3.6018925695413675`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Context", "::", "quote"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: \
\[NoBreak]\\!\\(\\\"DiscreteMath`NewCombinatorica'\\\"\\)\[NoBreak] is not a \
valid context. A valid context uses back quotes instead of forward quotes as \
in \[NoBreak]\\!\\(\\\"DiscreteMath`NewCombinatorica`\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Context/quote\\\", \
ButtonNote -> \\\"Context::quote\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018925710203533`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "cxt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid context specified at position \[NoBreak]\\!\\(1\\)\
\[NoBreak] in \
\[NoBreak]\\!\\(Needs[\\\"DiscreteMath`NewCombinatorica'\\\"]\\)\[NoBreak]. A \
context must consist of valid symbol names separated by and ending with \
\[NoBreak]\\!\\(\\\"`\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/cxt\\\", ButtonNote -> \
\\\"Needs::cxt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018925710573797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"<<", "DiscreteMath"}], "'"}], 
  RowBox[{"NewCombinatorica", "'"}]}]], "Input",
 CellChangeTimes->{{3.6018925772085*^9, 3.601892595871003*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"DiscreteMath\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018925985027637`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["NewCombinatorica", "\[Prime]",
   MultilineFunction->None], " ", 
  SuperscriptBox["$Failed", "\[Prime]",
   MultilineFunction->None]}]], "Output",
 CellChangeTimes->{3.6018925985047674`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"K\[OSlash]", "\[Rule]", "Ro"}], ",", 
      RowBox[{"K\[OSlash]", "\[Rule]", "Pu"}], ",", 
      RowBox[{"K\[OSlash]", "\[Rule]", "Pa"}], ",", 
      RowBox[{"Ro", "\[Rule]", "Ha"}], ",", 
      RowBox[{"Ro", "\[Rule]", "Be"}], ",", 
      RowBox[{"Pu", "\[Rule]", "Ha"}], ",", 
      RowBox[{"Pu", "\[Rule]", "Be"}], ",", 
      RowBox[{"Pa", "\[Rule]", "Ha"}], ",", 
      RowBox[{"Ha", "\[Rule]", "Be"}], ",", 
      RowBox[{"Ha", "\[Rule]", "St"}], ",", 
      RowBox[{"Ha", "\[Rule]", "Br"}], ",", 
      RowBox[{"Ha", "\[Rule]", "Li"}], ",", 
      RowBox[{"Be", "\[Rule]", "St"}], ",", 
      RowBox[{"Be", "\[Rule]", "Br"}], ",", 
      RowBox[{"Be", "\[Rule]", "Li"}], ",", 
      RowBox[{"St", "\[Rule]", "Br"}], ",", 
      RowBox[{"St", "\[Rule]", "Li"}], ",", 
      RowBox[{"St", "\[Rule]", "Par"}], ",", 
      RowBox[{"Br", "\[Rule]", "Li"}], ",", 
      RowBox[{"Br", "\[Rule]", "Par"}], ",", 
      RowBox[{"Li", "\[Rule]", "Par"}]}], "}"}], ",", 
    RowBox[{"EdgeWeight", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<2\>\"", ",", "\"\<11\>\"", ",", "\"\<8\>\"", ",", "\"\<3\>\"", 
       ",", "\"\<5\>\"", ",", "\"\<14\>\"", ",", "\"\<11\>\"", ",", 
       "\"\<10\>\"", ",", "\"\<12\>\"", ",", "\"\<12\>\"", ",", "\"\<10\>\"", 
       ",", "\"\<10\>\"", ",", "\"\<4\>\"", ",", "\"\<4\>\"", ",", 
       "\"\<12\>\"", ",", "\"\<4\>\"", ",", "\"\<12\>\"", ",", "\"\<11\>\"", 
       ",", "\"\<23\>\"", ",", "\"\<16\>\"", ",", "\"\<10\>\""}], "}"}]}], 
    ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6018929212980156`*^9, 3.6018929480769596`*^9}, {
  3.6018930646070623`*^9, 3.601893069909616*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`K\[OSlash], $CellContext`Ro, $CellContext`Pu, \
$CellContext`Pa, $CellContext`Ha, $CellContext`Be, $CellContext`St, \
$CellContext`Br, $CellContext`Li, $CellContext`Par}, {{{1, 2}, {1, 3}, {1, 
       4}, {2, 5}, {2, 6}, {3, 5}, {3, 6}, {4, 5}, {5, 6}, {5, 7}, {5, 8}, {5,
        9}, {6, 7}, {6, 8}, {6, 9}, {7, 8}, {7, 9}, {7, 10}, {8, 9}, {8, 
       10}, {9, 10}}, Null}, {
      EdgeWeight -> {
        "2", "11", "8", "3", "5", "14", "11", "10", "12", "12", "10", "10", 
         "4", "4", "12", "4", "12", "11", "23", "16", "10"}, GraphLayout -> 
       "SpringEmbedding", ImagePadding -> 10, VertexLabels -> {"Name"}}]], 
    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[0.027091504081559383`], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$1", Automatic, Center], 
          DynamicLocation["VertexID$4", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$4", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$6", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$7", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}]], 
       ArrowBox[
        LineBox[{
          DynamicLocation["VertexID$9", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}]]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          DiskBox[{0., 0.9385514331222273}, 0.033739003399772496`], 
          "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["K\[OSlash]", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.9438663194924561, 1.8216655798840604`}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["Ro", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          DiskBox[{0.8030420036650538, 1.0250730874264202`}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["Pu", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          DiskBox[{0.8630485710549698, 0.}, 0.033739003399772496`], 
          "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["Pa", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.6552024716592268`, 0.7908872698413094}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["Ha", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          DiskBox[{1.8036165030752613`, 1.4555362358539496`}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["Be", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.6190396937464144`, 1.4534313791380689`}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["St", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.5093258486275603`, 0.4463238052431119}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["Br", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          DiskBox[{2.6252245495901607`, 0.9345082992728644}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["Li", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          DiskBox[{3.502673798480811, 0.849402584469076}, 
           0.033739003399772496`], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["Par", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{27.56000080108644, 
       610.0112549742934}, {-176.47363782112564`, 140.71201271064996`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{3.601893250504603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"myBinaryTree", "=", 
     RowBox[{"CompleteBinaryTree", "[", "50", "]"}]}], ";"}], "\n", 
   RowBox[{"g1", "=", 
    RowBox[{"ShowGraph", "[", "myBinaryTree", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6018931174104376`*^9, 3.60189312917332*^9}}],

Cell[BoxData[
 RowBox[{"ShowGraph", "[", 
  RowBox[{"CompleteBinaryTree", "[", "50", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.601893146918206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"`NewCombinatorica", "'"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6018931533805356`*^9, 3.6018931637704973`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "cxt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid context specified at position \[NoBreak]\\!\\(1\\)\
\[NoBreak] in \
\[NoBreak]\\!\\(Needs[\\(\\(\\*SuperscriptBox[\\\"NewCombinatorica\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]]\\)\\)]\\)\[NoBreak]. A context \
must consist of valid symbol names separated by and ending with \[NoBreak]\\!\
\\(\\\"`\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/cxt\\\", ButtonNote -> \
\\\"Needs::cxt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6018931648001857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myBinaryTree", "=", 
  RowBox[{"CompleteBinaryTree", "[", "50", "]"}]}]], "Input",
 CellChangeTimes->{{3.6018931818426027`*^9, 3.601893224421131*^9}, {
  3.6018933212249804`*^9, 3.6018933662441406`*^9}}],

Cell[BoxData[
 RowBox[{"CompleteBinaryTree", "[", "50", "]"}]], "Output",
 CellChangeTimes->{3.6018933673929086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"CompleteBinaryTree", "[", "50", "]"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"CompleteBinaryTree", "[", "50", "]"}]], "Output",
 CellChangeTimes->{3.6018933765700555`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"ShowGraph", "[", "myBinaryTree", "]"}]}]], "Input",
 CellChangeTimes->{{3.601893385404976*^9, 3.601893406277959*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowGraph", "[", "myBinaryTree", "]"}]], "Input",
 CellChangeTimes->{{3.6018934161445723`*^9, 3.6018934533875246`*^9}}],

Cell[BoxData[
 RowBox[{"ShowGraph", "[", 
  RowBox[{"CompleteBinaryTree", "[", "50", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.6018934551497064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.601893356341505*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "cxt"}], "MessageName"], 
  RowBox[{":", " "}], 
  "\"\<Invalid context specified at position \[NoBreak]1\[NoBreak] in \
\[NoBreak]\!\(Needs[\\\"\<NewCombinatorica\>\\\"]\)\[NoBreak]. A context must \
consist of valid symbol names separated by and ending with \[NoBreak]\!\(\\\"\
\<`\>\\\"\)\[NoBreak]. \!\(\*ButtonBox["\[RightSkeleton]",
Appearance->{Automatic, None},
BaseStyle->\\\"Link\\\",
ButtonData:>\\\"paclet:ref/message/General/cxt\\\",
ButtonNote->\\\"Needs::cxt\\\"]\)\>\""}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.601893210147566*^9, 3.601893226353422*^9}, {
  3.6018932865917788`*^9, 3.6018933159394407`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.601892975495324*^9, 3.601892975505331*^9}, 
   3.6018930548295145`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.601893060101079*^9, 3.601893060116055*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6018918929523168`*^9, 3.60189191938002*^9}}]
}, Open  ]]
},
WindowSize->{1902, 959},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.7000000476837158`,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 109, 2, 52, "Input"],
Cell[CellGroupData[{
Cell[691, 26, 268, 8, 81, "Input"],
Cell[962, 36, 386, 8, 40, "Message"],
Cell[1351, 46, 352, 8, 40, "Message"],
Cell[1706, 56, 300, 7, 40, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2043, 68, 166, 2, 81, "Input"],
Cell[2212, 72, 72, 1, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2321, 78, 345, 8, 49, "Input"],
Cell[2669, 88, 9394, 161, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12100, 254, 889, 25, 81, "Input"],
Cell[12992, 281, 1631, 34, 219, "Output"],
Cell[14626, 317, 847, 15, 43, "Message"],
Cell[15476, 334, 847, 15, 43, "Message"],
Cell[16326, 351, 847, 15, 43, "Message"],
Cell[17176, 368, 847, 15, 43, "Message"],
Cell[18026, 385, 845, 15, 43, "Message"],
Cell[18874, 402, 847, 15, 43, "Message"],
Cell[19724, 419, 847, 15, 43, "Message"],
Cell[20574, 436, 847, 15, 43, "Message"],
Cell[21424, 453, 847, 15, 43, "Message"],
Cell[22274, 470, 847, 15, 43, "Message"],
Cell[23124, 487, 847, 15, 43, "Message"],
Cell[23974, 504, 845, 15, 43, "Message"],
Cell[24822, 521, 845, 15, 43, "Message"],
Cell[25670, 538, 847, 15, 43, "Message"],
Cell[26520, 555, 847, 15, 43, "Message"],
Cell[27370, 572, 845, 15, 43, "Message"],
Cell[28218, 589, 845, 15, 43, "Message"],
Cell[29066, 606, 845, 15, 43, "Message"],
Cell[29914, 623, 847, 15, 43, "Message"],
Cell[30764, 640, 847, 15, 43, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31648, 660, 1658, 34, 219, "Input"],
Cell[33309, 696, 1631, 34, 219, "Output"],
Cell[34943, 732, 845, 15, 43, "Message"],
Cell[35791, 749, 847, 15, 43, "Message"],
Cell[36641, 766, 845, 15, 43, "Message"],
Cell[37489, 783, 847, 15, 43, "Message"],
Cell[38339, 800, 847, 15, 43, "Message"],
Cell[39189, 817, 847, 15, 43, "Message"],
Cell[40039, 834, 847, 15, 43, "Message"],
Cell[40889, 851, 845, 15, 43, "Message"],
Cell[41737, 868, 845, 15, 43, "Message"],
Cell[42585, 885, 847, 15, 43, "Message"],
Cell[43435, 902, 845, 15, 43, "Message"],
Cell[44283, 919, 847, 15, 43, "Message"],
Cell[45133, 936, 845, 15, 43, "Message"],
Cell[45981, 953, 847, 15, 43, "Message"],
Cell[46831, 970, 847, 15, 43, "Message"],
Cell[47681, 987, 845, 15, 43, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48563, 1007, 600, 15, 81, "Input"],
Cell[49166, 1024, 3136, 63, 637, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52339, 1092, 690, 20, 73, "Input"],
Cell[53032, 1114, 3138, 63, 637, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56207, 1182, 497, 13, 49, "Input"],
Cell[56707, 1197, 187175, 3061, 519, 116994, 1909, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[243897, 4261, 118, 2, 49, "Input"],
Cell[CellGroupData[{
Cell[244040, 4267, 301, 8, 49, "Input"],
Cell[244344, 4277, 23157, 387, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267538, 4669, 392, 10, 81, "Input"],
Cell[267933, 4681, 243, 7, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268213, 4693, 228, 5, 81, "Input"],
Cell[268444, 4700, 83, 1, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268564, 4706, 227, 5, 49, "Input"],
Cell[268794, 4713, 22700, 376, 603, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291531, 5094, 1028, 28, 235, "Input"],
Cell[292562, 5124, 1678, 34, 925, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294277, 5163, 542, 14, 81, "Input"],
Cell[294822, 5179, 1562, 32, 557, "Output"]
}, Open  ]],
Cell[296399, 5214, 148, 2, 49, "Input"],
Cell[296550, 5218, 115, 1, 81, "Input"],
Cell[CellGroupData[{
Cell[296690, 5223, 17, 0, 171, "Title"],
Cell[CellGroupData[{
Cell[296732, 5227, 461, 13, 49, "Input"],
Cell[297196, 5242, 336, 10, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297569, 5257, 335, 11, 86, "Input"],
Cell[297907, 5270, 343, 12, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298287, 5287, 516, 18, 81, "Input"],
Cell[298806, 5307, 7348, 130, 403, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306191, 5442, 785, 25, 81, "Input"],
Cell[306979, 5469, 7412, 131, 403, "Output"]
}, Open  ]],
Cell[314406, 5603, 216, 7, 56, "Input"],
Cell[314625, 5612, 192, 3, 81, "Input"],
Cell[CellGroupData[{
Cell[314842, 5619, 387, 11, 49, "Input"],
Cell[315232, 5632, 536, 17, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315805, 5654, 632, 20, 77, "Input"],
Cell[316440, 5676, 397, 13, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316874, 5694, 3494, 77, 143, "Input"],
Cell[320371, 5773, 559, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320967, 5791, 1878, 42, 112, "Input"],
Cell[322848, 5835, 616, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323501, 5853, 121, 2, 49, "Input"],
Cell[323625, 5857, 102, 1, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323764, 5863, 2337, 52, 112, "Input"],
Cell[326104, 5917, 696, 15, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326837, 5937, 408, 11, 49, "Input"],
Cell[327248, 5950, 339, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327624, 5963, 2003, 47, 112, "Input"],
Cell[329630, 6012, 424, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330091, 6028, 3292, 78, 174, "Input"],
Cell[333386, 6108, 419, 10, 49, "Output"]
}, Open  ]],
Cell[333820, 6121, 96, 1, 49, "Input"],
Cell[CellGroupData[{
Cell[333941, 6126, 223, 5, 49, "Input"],
Cell[334167, 6133, 9594, 160, 408, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343798, 6298, 192, 5, 49, "Input"],
Cell[343993, 6305, 9639, 162, 427, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353669, 6472, 227, 6, 50, "Input"],
Cell[353899, 6480, 9681, 163, 424, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363617, 6648, 232, 5, 50, "Input"],
Cell[363852, 6655, 481, 10, 38, "Message"],
Cell[364336, 6667, 522, 11, 38, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364895, 6683, 210, 4, 50, "Input"],
Cell[365108, 6689, 508, 11, 38, "Message"],
Cell[365619, 6702, 184, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365840, 6711, 184, 4, 50, "Input"],
Cell[366027, 6717, 625, 12, 38, "Message"],
Cell[366655, 6731, 644, 13, 38, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367336, 6749, 190, 5, 50, "Input"],
Cell[367529, 6756, 444, 10, 38, "Message"],
Cell[367976, 6768, 233, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368246, 6779, 1951, 42, 179, "Input"],
Cell[370200, 6823, 9624, 231, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379861, 7059, 337, 8, 147, InheritFromParent],
Cell[380201, 7069, 151, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380389, 7077, 181, 4, 50, "Input"],
Cell[380573, 7083, 712, 14, 41, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381322, 7102, 227, 4, 50, "Input"],
Cell[381552, 7108, 117, 2, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381706, 7115, 132, 3, 50, "Input"],
Cell[381841, 7120, 117, 2, 49, "Output"]
}, Open  ]],
Cell[381973, 7125, 163, 3, 50, "Input"],
Cell[CellGroupData[{
Cell[382161, 7132, 143, 2, 50, InheritFromParent],
Cell[382307, 7136, 153, 3, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382497, 7144, 87, 1, 83, "Input"],
Cell[382587, 7147, 738, 16, 38, "Message"]
}, Open  ]],
Cell[383340, 7166, 120, 2, 50, "Input"],
Cell[383463, 7170, 92, 1, 50, InheritFromParent],
Cell[383558, 7173, 93, 1, 50, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
